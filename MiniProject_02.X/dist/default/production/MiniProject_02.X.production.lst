

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Mar 10 22:12:02 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  008F                     	;# 
   125  0090                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0095                     	;# 
   133  0096                     	;# 
   134  0097                     	;# 
   135  0098                     	;# 
   136  0099                     	;# 
   137  009A                     	;# 
   138  009B                     	;# 
   139  009C                     	;# 
   140  009D                     	;# 
   141  009E                     	;# 
   142  009F                     	;# 
   143  0105                     	;# 
   144  0107                     	;# 
   145  0108                     	;# 
   146  0109                     	;# 
   147  010C                     	;# 
   148  010C                     	;# 
   149  010D                     	;# 
   150  010E                     	;# 
   151  010F                     	;# 
   152  0185                     	;# 
   153  0187                     	;# 
   154  0188                     	;# 
   155  0189                     	;# 
   156  018C                     	;# 
   157  018D                     	;# 
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000E                     	;# 
   174  000F                     	;# 
   175  0010                     	;# 
   176  0011                     	;# 
   177  0012                     	;# 
   178  0013                     	;# 
   179  0014                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001B                     	;# 
   188  001B                     	;# 
   189  001C                     	;# 
   190  001D                     	;# 
   191  001E                     	;# 
   192  001F                     	;# 
   193  0081                     	;# 
   194  0085                     	;# 
   195  0086                     	;# 
   196  0087                     	;# 
   197  0088                     	;# 
   198  0089                     	;# 
   199  008C                     	;# 
   200  008D                     	;# 
   201  008E                     	;# 
   202  008F                     	;# 
   203  0090                     	;# 
   204  0091                     	;# 
   205  0092                     	;# 
   206  0093                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0094                     	;# 
   210  0095                     	;# 
   211  0096                     	;# 
   212  0097                     	;# 
   213  0098                     	;# 
   214  0099                     	;# 
   215  009A                     	;# 
   216  009B                     	;# 
   217  009C                     	;# 
   218  009D                     	;# 
   219  009E                     	;# 
   220  009F                     	;# 
   221  0105                     	;# 
   222  0107                     	;# 
   223  0108                     	;# 
   224  0109                     	;# 
   225  010C                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  0185                     	;# 
   231  0187                     	;# 
   232  0188                     	;# 
   233  0189                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001D                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  0087                     	;# 
   275  0088                     	;# 
   276  0089                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  008F                     	;# 
   281  0090                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0095                     	;# 
   289  0096                     	;# 
   290  0097                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009A                     	;# 
   294  009B                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  0105                     	;# 
   300  0107                     	;# 
   301  0108                     	;# 
   302  0109                     	;# 
   303  010C                     	;# 
   304  010C                     	;# 
   305  010D                     	;# 
   306  010E                     	;# 
   307  010F                     	;# 
   308  0185                     	;# 
   309  0187                     	;# 
   310  0188                     	;# 
   311  0189                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314                           
   315                           	psect	idataCOMMON
   316  03B6                     __pidataCOMMON:
   317                           
   318                           ;initializer for _d1
   319  03B6  3436               	retlw	low ((STR_2-__stringbase)| (0+32768))
   320                           
   321                           ;initializer for _d
   322  03B7  340B               	retlw	low ((STR_1-__stringbase)| (0+32768))
   323                           
   324                           	psect	idataBANK0
   325  07FC                     __pidataBANK0:
   326                           
   327                           ;initializer for _tmp
   328  07FC  3443               	retlw	low ((STR_5-__stringbase)| (0+32768))
   329                           
   330                           ;initializer for _d3
   331  07FD  341A               	retlw	low ((STR_4-__stringbase)| (0+32768))
   332                           
   333                           ;initializer for _d2
   334  07FE  3428               	retlw	low ((STR_3-__stringbase)| (0+32768))
   335                           
   336                           	psect	strings
   337  0400                     __pstrings:
   338  0400                     stringtab:
   339  0400                     __stringtab:
   340  0400                     stringcode:	
   341                           ;	String table - string pointers are 1 byte each
   342                           
   343  0400                     stringdir:
   344  0400  3004               	movlw	high stringdir
   345  0401  008A               	movwf	10
   346  0402  0804               	movf	4,w
   347  0403  0A84               	incf	4,f
   348  0404  0782               	addwf	2,f
   349  0405                     __stringbase:
   350  0405  3400               	retlw	0
   351  0406                     __end_of__stringtab:
   352  0406                     _dpowers:
   353  0406  3401               	retlw	1
   354  0407  3400               	retlw	0
   355  0408  340A               	retlw	10
   356  0409  3400               	retlw	0
   357  040A  3464               	retlw	100
   358  040B  3400               	retlw	0
   359  040C  34E8               	retlw	232
   360  040D  3403               	retlw	3
   361  040E  3410               	retlw	16
   362  040F  3427               	retlw	39
   363  0410                     __end_of_dpowers:
   364  000B                     _INTCONbits	set	11
   365  0018                     _RCSTAbits	set	24
   366  001A                     _RCREG	set	26
   367  0019                     _TXREG	set	25
   368  000C                     _PIR1bits	set	12
   369  0014                     _SSPCON	set	20
   370  0009                     _PORTE	set	9
   371  0007                     _PORTC	set	7
   372  0013                     _SSPBUF	set	19
   373  0006                     _PORTB	set	6
   374  003A                     _RC2	set	58
   375  0063                     _SSPIF	set	99
   376  0039                     _RC1	set	57
   377  0038                     _RC0	set	56
   378  0098                     _TXSTAbits	set	152
   379  0099                     _SPBRG	set	153
   380  009A                     _SPBRGH	set	154
   381  008C                     _PIE1bits	set	140
   382  0086                     _TRISB	set	134
   383  0093                     _SSPADD	set	147
   384  0091                     _SSPCON2	set	145
   385  0094                     _SSPSTAT	set	148
   386  008F                     _OSCCON	set	143
   387  0089                     _TRISE	set	137
   388  0087                     _TRISCbits	set	135
   389  043A                     _TRISC2	set	1082
   390  048E                     _ACKSTAT	set	1166
   391  0439                     _TRISC1	set	1081
   392  0438                     _TRISC0	set	1080
   393  043C                     _TRISC4	set	1084
   394  043B                     _TRISC3	set	1083
   395  04A0                     _BF	set	1184
   396  048B                     _RCEN	set	1163
   397  048A                     _PEN	set	1162
   398  048C                     _ACKEN	set	1164
   399  048D                     _ACKDT	set	1165
   400  0489                     _RSEN	set	1161
   401  0488                     _SEN	set	1160
   402  0189                     _ANSELH	set	393
   403  0188                     _ANSEL	set	392
   404  0410                     STR_1:
   405  0410  3444               	retlw	68	;'D'
   406  0411  3465               	retlw	101	;'e'
   407  0412  3474               	retlw	116	;'t'
   408  0413  3465               	retlw	101	;'e'
   409  0414  3463               	retlw	99	;'c'
   410  0415  3474               	retlw	116	;'t'
   411  0416  3461               	retlw	97	;'a'
   412  0417  346E               	retlw	110	;'n'
   413  0418  3464               	retlw	100	;'d'
   414  0419  346F               	retlw	111	;'o'
   415  041A  3420               	retlw	32	;' '
   416  041B  342E               	retlw	46	;'.'
   417  041C  342E               	retlw	46	;'.'
   418  041D  342E               	retlw	46	;'.'
   419  041E  3400               	retlw	0
   420  041F                     STR_4:
   421  041F  3449               	retlw	73	;'I'
   422  0420  346E               	retlw	110	;'n'
   423  0421  3469               	retlw	105	;'i'
   424  0422  3463               	retlw	99	;'c'
   425  0423  3469               	retlw	105	;'i'
   426  0424  3461               	retlw	97	;'a'
   427  0425  346E               	retlw	110	;'n'
   428  0426  3464               	retlw	100	;'d'
   429  0427  346F               	retlw	111	;'o'
   430  0428  3420               	retlw	32	;' '
   431  0429  3449               	retlw	73	;'I'
   432  042A  3432               	retlw	50	;'2'
   433  042B  3443               	retlw	67	;'C'
   434  042C  3400               	retlw	0
   435  042D                     STR_3:
   436  042D  344E               	retlw	78	;'N'
   437  042E  346F               	retlw	111	;'o'
   438  042F  3420               	retlw	32	;' '
   439  0430  3468               	retlw	104	;'h'
   440  0431  3461               	retlw	97	;'a'
   441  0432  3479               	retlw	121	;'y'
   442  0433  3420               	retlw	32	;' '
   443  0434  3473               	retlw	115	;'s'
   444  0435  3465               	retlw	101	;'e'
   445  0436  346E               	retlw	110	;'n'
   446  0437  3473               	retlw	115	;'s'
   447  0438  346F               	retlw	111	;'o'
   448  0439  3472               	retlw	114	;'r'
   449  043A  3400               	retlw	0
   450  043B                     STR_2:
   451  043B  3453               	retlw	83	;'S'
   452  043C  3465               	retlw	101	;'e'
   453  043D  346E               	retlw	110	;'n'
   454  043E  3473               	retlw	115	;'s'
   455  043F  346F               	retlw	111	;'o'
   456  0440  3472               	retlw	114	;'r'
   457  0441  3420               	retlw	32	;' '
   458  0442  346C               	retlw	108	;'l'
   459  0443  3469               	retlw	105	;'i'
   460  0444  3473               	retlw	115	;'s'
   461  0445  3474               	retlw	116	;'t'
   462  0446  346F               	retlw	111	;'o'
   463  0447  3400               	retlw	0
   464  0448                     STR_5:
   465  0448  3454               	retlw	84	;'T'
   466  0449  3465               	retlw	101	;'e'
   467  044A  346D               	retlw	109	;'m'
   468  044B  3470               	retlw	112	;'p'
   469  044C  3420               	retlw	32	;' '
   470  044D  343A               	retlw	58	;':'
   471  044E  3420               	retlw	32	;' '
   472  044F  3420               	retlw	32	;' '
   473  0450  3420               	retlw	32	;' '
   474  0451  342A               	retlw	42	;'*'
   475  0452  3443               	retlw	67	;'C'
   476  0453  3400               	retlw	0
   477  0454                     STR_6:
   478  0454  3420               	retlw	32	;' '
   479  0455  3425               	retlw	37	;'%'
   480  0456  3432               	retlw	50	;'2'
   481  0457  3469               	retlw	105	;'i'
   482  0458  3420               	retlw	32	;' '
   483  0459  3400               	retlw	0
   484                           
   485                           	psect	cinit
   486  0011                     start_initialization:	
   487                           ; #config settings
   488                           
   489  0011                     __initialization:
   490                           
   491                           ; Initialize objects allocated to BANK0
   492  0011  120A  118A  27FC  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   493  0016  00C3               	movwf	__pdataBANK0& (0+127)
   494  0017  120A  118A  27FD  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   495  001C  00C4               	movwf	(__pdataBANK0+1)& (0+127)
   496  001D  120A  118A  27FE  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   497  0022  00C5               	movwf	(__pdataBANK0+2)& (0+127)
   498                           
   499                           ; Initialize objects allocated to COMMON
   500  0023  120A  118A  23B6  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   501  0028  00F8               	movwf	__pdataCOMMON& (0+127)
   502  0029  120A  118A  23B7  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   503  002E  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   504                           
   505                           ; Clear objects allocated to BANK0
   506  002F  01BF               	clrf	__pbssBANK0& (0+127)
   507  0030  01C0               	clrf	(__pbssBANK0+1)& (0+127)
   508  0031  01C1               	clrf	(__pbssBANK0+2)& (0+127)
   509  0032  01C2               	clrf	(__pbssBANK0+3)& (0+127)
   510                           
   511                           ; Clear objects allocated to COMMON
   512  0033  01F6               	clrf	__pbssCOMMON& (0+127)
   513  0034  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   514  0035                     end_of_initialization:	
   515                           ;End of C runtime variable initialization code
   516                           
   517  0035                     __end_of__initialization:
   518  0035  0183               	clrf	3
   519  0036  120A  118A  29C1   	ljmp	_main	;jump to C main() function
   520                           
   521                           	psect	bssCOMMON
   522  0076                     __pbssCOMMON:
   523  0076                     _eusart_flag:
   524  0076                     	ds	1
   525  0077                     _str_pos:
   526  0077                     	ds	1
   527                           
   528                           	psect	dataCOMMON
   529  0078                     __pdataCOMMON:
   530  0078                     _d1:
   531  0078                     	ds	1
   532  0079                     _d:
   533  0079                     	ds	1
   534                           
   535                           	psect	bssBANK0
   536  003F                     __pbssBANK0:
   537  003F                     _uart_cont:
   538  003F                     	ds	1
   539  0040                     _uart_data:
   540  0040                     	ds	1
   541  0041                     _r:
   542  0041                     	ds	1
   543  0042                     _recibo:
   544  0042                     	ds	1
   545                           
   546                           	psect	dataBANK0
   547  0043                     __pdataBANK0:
   548  0043                     _tmp:
   549  0043                     	ds	1
   550  0044                     _d3:
   551  0044                     	ds	1
   552  0045                     _d2:
   553  0045                     	ds	1
   554                           
   555                           	psect	cstackCOMMON
   556  0070                     __pcstackCOMMON:
   557  0070                     ?_isdigit:
   558  0070                     ?_funcion:	
   559                           ; 1 bit 
   560                           
   561  0070                     ?_LCD_cmd:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_LCD_data:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_no_dev_disp:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_dev_found_disp:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_temp_disp:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_i2c_wait:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_i2c_rep_start:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_i2c_NACK:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_i2c_stop:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_i2c_rx:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_i2c_send:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_i2c_init:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_LCD_init:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_LCD_disp:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_i2c_init_disp:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_check_dev_disp:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_main:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_isr:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ??_isr:	
   616                           ; 1 bytes @ 0x0
   617                           
   618                           
   619                           ; 1 bytes @ 0x0
   620  0070                     	ds	4
   621  0074                     ??_isdigit:
   622  0074                     ?_delay:	
   623                           ; 1 bytes @ 0x4
   624                           
   625  0074                     ??_i2c_wait:	
   626                           ; 1 bytes @ 0x4
   627                           
   628  0074                     ??_i2c_rep_start:	
   629                           ; 1 bytes @ 0x4
   630                           
   631  0074                     ??_i2c_NACK:	
   632                           ; 1 bytes @ 0x4
   633                           
   634  0074                     ??_i2c_stop:	
   635                           ; 1 bytes @ 0x4
   636                           
   637  0074                     ??_i2c_rx:	
   638                           ; 1 bytes @ 0x4
   639                           
   640  0074                     ??_i2c_send:	
   641                           ; 1 bytes @ 0x4
   642                           
   643  0074                     ??_i2c_init:	
   644                           ; 1 bytes @ 0x4
   645                           
   646  0074                     ??___wmul:	
   647                           ; 1 bytes @ 0x4
   648                           
   649  0074                     ??___awdiv:	
   650                           ; 1 bytes @ 0x4
   651                           
   652  0074                     ??___awmod:	
   653                           ; 1 bytes @ 0x4
   654                           
   655  0074                     ??___lwdiv:	
   656                           ; 1 bytes @ 0x4
   657                           
   658  0074                     i2c_send@c:	
   659                           ; 1 bytes @ 0x4
   660                           
   661  0074                     _isdigit$843:	
   662                           ; 1 bytes @ 0x4
   663                           
   664  0074                     delay@x:	
   665                           ; 1 bytes @ 0x4
   666                           
   667  0074                     ___wmul@product:	
   668                           ; 2 bytes @ 0x4
   669                           
   670                           
   671                           ; 2 bytes @ 0x4
   672  0074                     	ds	1
   673  0075                     ??___lwmod:
   674  0075                     isdigit@c:	
   675                           ; 1 bytes @ 0x5
   676                           
   677                           
   678                           ; 1 bytes @ 0x5
   679  0075                     	ds	1
   680  0076                     ??_delay:
   681  0076                     ??_LCD_cmd:	
   682                           ; 1 bytes @ 0x6
   683                           
   684  0076                     ??_LCD_data:	
   685                           ; 1 bytes @ 0x6
   686                           
   687  0076                     ??_LCD_init:	
   688                           ; 1 bytes @ 0x6
   689                           
   690                           
   691                           	psect	cstackBANK0
   692  0020                     __pcstackBANK0:	
   693                           ; 1 bytes @ 0x6
   694                           
   695  0020                     ?_check_dev:
   696  0020                     ?___wmul:	
   697                           ; 2 bytes @ 0x0
   698                           
   699  0020                     ?___awdiv:	
   700                           ; 2 bytes @ 0x0
   701                           
   702  0020                     ?___awmod:	
   703                           ; 2 bytes @ 0x0
   704                           
   705  0020                     ?___lwdiv:	
   706                           ; 2 bytes @ 0x0
   707                           
   708  0020                     LCD_cmd@y:	
   709                           ; 2 bytes @ 0x0
   710                           
   711  0020                     LCD_data@y:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0020                     ___wmul@multiplier:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0020                     ___awdiv@divisor:	
   718                           ; 2 bytes @ 0x0
   719                           
   720  0020                     ___awmod@divisor:	
   721                           ; 2 bytes @ 0x0
   722                           
   723  0020                     ___lwdiv@divisor:	
   724                           ; 2 bytes @ 0x0
   725                           
   726                           
   727                           ; 2 bytes @ 0x0
   728  0020                     	ds	1
   729  0021                     ??_no_dev_disp:
   730  0021                     ??_dev_found_disp:	
   731                           ; 1 bytes @ 0x1
   732                           
   733  0021                     ??_temp_disp:	
   734                           ; 1 bytes @ 0x1
   735                           
   736  0021                     ??_i2c_init_disp:	
   737                           ; 1 bytes @ 0x1
   738                           
   739                           
   740                           ; 1 bytes @ 0x1
   741  0021                     	ds	1
   742  0022                     ??_check_dev:
   743  0022                     ___wmul@multiplicand:	
   744                           ; 1 bytes @ 0x2
   745                           
   746  0022                     ___awdiv@dividend:	
   747                           ; 2 bytes @ 0x2
   748                           
   749  0022                     ___awmod@dividend:	
   750                           ; 2 bytes @ 0x2
   751                           
   752  0022                     ___lwdiv@dividend:	
   753                           ; 2 bytes @ 0x2
   754                           
   755                           
   756                           ; 2 bytes @ 0x2
   757  0022                     	ds	2
   758  0024                     ??_check_dev_disp:
   759  0024                     ___awdiv@counter:	
   760                           ; 1 bytes @ 0x4
   761                           
   762  0024                     ___awmod@counter:	
   763                           ; 1 bytes @ 0x4
   764                           
   765  0024                     ___lwdiv@counter:	
   766                           ; 1 bytes @ 0x4
   767                           
   768                           
   769                           ; 1 bytes @ 0x4
   770  0024                     	ds	1
   771  0025                     ___awdiv@sign:
   772  0025                     ___awmod@sign:	
   773                           ; 1 bytes @ 0x5
   774                           
   775  0025                     ___lwdiv@quotient:	
   776                           ; 1 bytes @ 0x5
   777                           
   778                           
   779                           ; 2 bytes @ 0x5
   780  0025                     	ds	1
   781  0026                     ___awdiv@quotient:
   782                           
   783                           ; 2 bytes @ 0x6
   784  0026                     	ds	1
   785  0027                     ?___lwmod:
   786  0027                     ___lwmod@divisor:	
   787                           ; 2 bytes @ 0x7
   788                           
   789                           
   790                           ; 2 bytes @ 0x7
   791  0027                     	ds	1
   792  0028                     ??_LCD_disp:
   793                           
   794                           ; 1 bytes @ 0x8
   795  0028                     	ds	1
   796  0029                     ___lwmod@dividend:
   797                           
   798                           ; 2 bytes @ 0x9
   799  0029                     	ds	1
   800  002A                     LCD_disp@y:
   801                           
   802                           ; 1 bytes @ 0xA
   803  002A                     	ds	1
   804  002B                     ___lwmod@counter:
   805  002B                     LCD_disp@temp:	
   806                           ; 1 bytes @ 0xB
   807                           
   808                           
   809                           ; 2 bytes @ 0xB
   810  002B                     	ds	1
   811  002C                     ?_sprintf:
   812  002C                     sprintf@f:	
   813                           ; 2 bytes @ 0xC
   814                           
   815                           
   816                           ; 1 bytes @ 0xC
   817  002C                     	ds	3
   818  002F                     ??_sprintf:
   819                           
   820                           ; 1 bytes @ 0xF
   821  002F                     	ds	3
   822  0032                     sprintf@ap:
   823                           
   824                           ; 1 bytes @ 0x12
   825  0032                     	ds	1
   826  0033                     sprintf@prec:
   827                           
   828                           ; 1 bytes @ 0x13
   829  0033                     	ds	1
   830  0034                     sprintf@flag:
   831                           
   832                           ; 1 bytes @ 0x14
   833  0034                     	ds	1
   834  0035                     sprintf@val:
   835                           
   836                           ; 2 bytes @ 0x15
   837  0035                     	ds	2
   838  0037                     sprintf@sp:
   839                           
   840                           ; 1 bytes @ 0x17
   841  0037                     	ds	1
   842  0038                     sprintf@width:
   843                           
   844                           ; 2 bytes @ 0x18
   845  0038                     	ds	2
   846  003A                     sprintf@c:
   847                           
   848                           ; 1 bytes @ 0x1A
   849  003A                     	ds	1
   850  003B                     ??_funcion:
   851                           
   852                           ; 1 bytes @ 0x1B
   853  003B                     	ds	3
   854  003E                     ??_main:
   855                           
   856                           ; 1 bytes @ 0x1E
   857  003E                     	ds	1
   858                           
   859                           	psect	maintext
   860  01C1                     __pmaintext:	
   861 ;;
   862 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   863 ;;
   864 ;; *************** function _main *****************
   865 ;; Defined at:
   866 ;;		line 307 in file "Newmain.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : B00/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   880 ;;      Params:         0       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0
   882 ;;      Temps:          0       1       0       0       0
   883 ;;      Totals:         0       1       0       0       0
   884 ;;Total ram usage:        1 bytes
   885 ;; Hardware stack levels required when called:    5
   886 ;; This function calls:
   887 ;;		_LCD_cmd
   888 ;;		_LCD_disp
   889 ;;		_LCD_init
   890 ;;		_check_dev_disp
   891 ;;		_delay
   892 ;;		_funcion
   893 ;;		_i2c_NACK
   894 ;;		_i2c_init
   895 ;;		_i2c_init_disp
   896 ;;		_i2c_rep_start
   897 ;;		_i2c_rx
   898 ;;		_i2c_send
   899 ;;		_i2c_stop
   900 ;;		_i2c_wait
   901 ;;		_temp_disp
   902 ;; This function is called by:
   903 ;;		Startup code after reset
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           
   908                           ;psect for function _main
   909  01C1                     _main:
   910  01C1                     l2381:	
   911                           ;incstack = 0
   912                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   913                           
   914                           
   915                           ;Newmain.c: 309:  TRISC2 = 0;
   916  01C1  1683               	bsf	3,5	;RP0=1, select bank1
   917  01C2  1303               	bcf	3,6	;RP1=0, select bank1
   918  01C3  1107               	bcf	7,2	;volatile
   919                           
   920                           ;Newmain.c: 310:  RC2 = 0;
   921  01C4  1283               	bcf	3,5	;RP0=0, select bank0
   922  01C5  1303               	bcf	3,6	;RP1=0, select bank0
   923  01C6  1107               	bcf	7,2	;volatile
   924  01C7                     l2383:
   925                           
   926                           ;Newmain.c: 312:  LCD_init();
   927  01C7  120A  118A  26DD  120A  118A  	fcall	_LCD_init
   928  01CC                     l2385:
   929                           
   930                           ;Newmain.c: 314:  i2c_init_disp();
   931  01CC  120A  118A  259E  120A  118A  	fcall	_i2c_init_disp
   932  01D1                     l2387:
   933                           
   934                           ;Newmain.c: 315:  delay(65000);
   935  01D1  30E8               	movlw	232
   936  01D2  00F4               	movwf	delay@x
   937  01D3  30FD               	movlw	253
   938  01D4  00F5               	movwf	delay@x+1
   939  01D5  120A  118A  27BC  120A  118A  	fcall	_delay
   940  01DA                     l2389:
   941                           
   942                           ;Newmain.c: 316:  i2c_init();
   943  01DA  120A  118A  276B  120A  118A  	fcall	_i2c_init
   944  01DF                     l2391:
   945                           
   946                           ;Newmain.c: 318:  check_dev_disp();
   947  01DF  120A  118A  2271  120A  118A  	fcall	_check_dev_disp
   948                           
   949                           ;Newmain.c: 319:  delay(65000);
   950  01E4  30E8               	movlw	232
   951  01E5  00F4               	movwf	delay@x
   952  01E6  30FD               	movlw	253
   953  01E7  00F5               	movwf	delay@x+1
   954  01E8  120A  118A  27BC  120A  118A  	fcall	_delay
   955  01ED                     l2393:
   956                           
   957                           ;Newmain.c: 320:  temp_disp();
   958  01ED  120A  118A  245A  120A  118A  	fcall	_temp_disp
   959  01F2                     l2395:
   960                           
   961                           ;Newmain.c: 322:  {;Newmain.c: 323:         uart_data = 0;
   962  01F2  1283               	bcf	3,5	;RP0=0, select bank0
   963  01F3  1303               	bcf	3,6	;RP1=0, select bank0
   964  01F4  01C0               	clrf	_uart_data
   965  01F5                     l2397:
   966                           
   967                           ;Newmain.c: 324:   LCD_cmd(0x86);
   968  01F5  3086               	movlw	134
   969  01F6  120A  118A  274E  120A  118A  	fcall	_LCD_cmd
   970  01FB                     l2399:
   971                           
   972                           ;Newmain.c: 326:   i2c_rep_start();
   973  01FB  120A  118A  27EC  120A  118A  	fcall	_i2c_rep_start
   974  0200                     l2401:
   975                           
   976                           ;Newmain.c: 327:   delay(4);
   977  0200  3004               	movlw	4
   978  0201  00F4               	movwf	delay@x
   979  0202  3000               	movlw	0
   980  0203  00F5               	movwf	delay@x+1
   981  0204  120A  118A  27BC  120A  118A  	fcall	_delay
   982  0209                     l2403:
   983                           
   984                           ;Newmain.c: 329:   i2c_send(0b10010000);
   985  0209  3090               	movlw	144
   986  020A  120A  118A  27AB  120A  118A  	fcall	_i2c_send
   987  020F                     l2405:
   988                           
   989                           ;Newmain.c: 330:   i2c_send(0x00);
   990  020F  3000               	movlw	0
   991  0210  120A  118A  27AB  120A  118A  	fcall	_i2c_send
   992  0215                     l2407:
   993                           
   994                           ;Newmain.c: 332:   i2c_rep_start();
   995  0215  120A  118A  27EC  120A  118A  	fcall	_i2c_rep_start
   996  021A                     l2409:
   997                           
   998                           ;Newmain.c: 333:   delay(4);
   999  021A  3004               	movlw	4
  1000  021B  00F4               	movwf	delay@x
  1001  021C  3000               	movlw	0
  1002  021D  00F5               	movwf	delay@x+1
  1003  021E  120A  118A  27BC  120A  118A  	fcall	_delay
  1004  0223                     l2411:
  1005                           
  1006                           ;Newmain.c: 335:   SSPBUF = 0b10010001;
  1007  0223  3091               	movlw	145
  1008  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1009  0225  1303               	bcf	3,6	;RP1=0, select bank0
  1010  0226  0093               	movwf	19	;volatile
  1011  0227                     l2413:
  1012                           
  1013                           ;Newmain.c: 336:   i2c_wait();
  1014  0227  120A  118A  27F4  120A  118A  	fcall	_i2c_wait
  1015  022C                     l2415:
  1016                           
  1017                           ;Newmain.c: 337:   delay(4);
  1018  022C  3004               	movlw	4
  1019  022D  00F4               	movwf	delay@x
  1020  022E  3000               	movlw	0
  1021  022F  00F5               	movwf	delay@x+1
  1022  0230  120A  118A  27BC  120A  118A  	fcall	_delay
  1023  0235                     l2417:
  1024                           
  1025                           ;Newmain.c: 339:   r = i2c_rx();
  1026  0235  120A  118A  27D8  120A  118A  	fcall	_i2c_rx
  1027  023A  1283               	bcf	3,5	;RP0=0, select bank0
  1028  023B  1303               	bcf	3,6	;RP1=0, select bank0
  1029  023C  00BE               	movwf	??_main
  1030  023D  083E               	movf	??_main,w
  1031  023E  00C1               	movwf	_r
  1032  023F                     l2419:
  1033                           
  1034                           ;Newmain.c: 340:   i2c_wait();
  1035  023F  120A  118A  27F4  120A  118A  	fcall	_i2c_wait
  1036  0244                     l2421:
  1037                           
  1038                           ;Newmain.c: 342:   i2c_NACK();
  1039  0244  120A  118A  27E3  120A  118A  	fcall	_i2c_NACK
  1040  0249                     l2423:
  1041                           
  1042                           ;Newmain.c: 343:   delay(4);
  1043  0249  3004               	movlw	4
  1044  024A  00F4               	movwf	delay@x
  1045  024B  3000               	movlw	0
  1046  024C  00F5               	movwf	delay@x+1
  1047  024D  120A  118A  27BC  120A  118A  	fcall	_delay
  1048  0252                     l2425:
  1049                           
  1050                           ;Newmain.c: 345:   i2c_stop();
  1051  0252  120A  118A  27CB  120A  118A  	fcall	_i2c_stop
  1052  0257                     l2427:
  1053                           
  1054                           ;Newmain.c: 346:   delay(4);
  1055  0257  3004               	movlw	4
  1056  0258  00F4               	movwf	delay@x
  1057  0259  3000               	movlw	0
  1058  025A  00F5               	movwf	delay@x+1
  1059  025B  120A  118A  27BC  120A  118A  	fcall	_delay
  1060  0260                     l2429:
  1061                           
  1062                           ;Newmain.c: 348:   LCD_disp(r);
  1063  0260  1283               	bcf	3,5	;RP0=0, select bank0
  1064  0261  1303               	bcf	3,6	;RP1=0, select bank0
  1065  0262  0841               	movf	_r,w
  1066  0263  120A  118A  24FF  120A  118A  	fcall	_LCD_disp
  1067  0268                     l2431:
  1068                           
  1069                           ;Newmain.c: 350:         funcion();
  1070  0268  120A  118A  2785  120A  118A  	fcall	_funcion
  1071  026D  29F2               	goto	l2395
  1072  026E  120A  118A  280E   	ljmp	start
  1073  0271                     __end_of_main:
  1074                           
  1075                           	psect	text1
  1076  045A                     __ptext1:	
  1077 ;; *************** function _temp_disp *****************
  1078 ;; Defined at:
  1079 ;;		line 121 in file "Newmain.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1093 ;;      Params:         0       0       0       0       0
  1094 ;;      Locals:         0       0       0       0       0
  1095 ;;      Temps:          0       1       0       0       0
  1096 ;;      Totals:         0       1       0       0       0
  1097 ;;Total ram usage:        1 bytes
  1098 ;; Hardware stack levels used:    1
  1099 ;; Hardware stack levels required when called:    3
  1100 ;; This function calls:
  1101 ;;		_LCD_cmd
  1102 ;;		_delay
  1103 ;; This function is called by:
  1104 ;;		_main
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           
  1109                           ;psect for function _temp_disp
  1110  045A                     _temp_disp:
  1111  045A                     l2303:	
  1112                           ;incstack = 0
  1113                           ; Regs used in _temp_disp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1114                           
  1115                           
  1116                           ;Newmain.c: 123:  LCD_cmd(0x01);
  1117  045A  3001               	movlw	1
  1118  045B  120A  118A  274E  120A  118A  	fcall	_LCD_cmd
  1119                           
  1120                           ;Newmain.c: 124:  LCD_cmd(0x80);
  1121  0460  3080               	movlw	128
  1122  0461  120A  118A  274E  120A  118A  	fcall	_LCD_cmd
  1123                           
  1124                           ;Newmain.c: 125:  delay(100);
  1125  0466  3064               	movlw	100
  1126  0467  00F4               	movwf	delay@x
  1127  0468  3000               	movlw	0
  1128  0469  00F5               	movwf	delay@x+1
  1129  046A  120A  118A  27BC  120A  118A  	fcall	_delay
  1130  046F                     l2305:
  1131                           
  1132                           ;Newmain.c: 126:  RC0 = 1;
  1133  046F  1283               	bcf	3,5	;RP0=0, select bank0
  1134  0470  1303               	bcf	3,6	;RP1=0, select bank0
  1135  0471  1407               	bsf	7,0	;volatile
  1136                           
  1137                           ;Newmain.c: 127:  while( *tmp != '\0')
  1138  0472  2CA2               	goto	l2319
  1139  0473                     l137:
  1140                           
  1141                           ;Newmain.c: 128:  {;Newmain.c: 129:   RC1 = 1;
  1142  0473  1487               	bsf	7,1	;volatile
  1143  0474                     l2307:
  1144                           
  1145                           ;Newmain.c: 130:   delay(100);
  1146  0474  3064               	movlw	100
  1147  0475  00F4               	movwf	delay@x
  1148  0476  3000               	movlw	0
  1149  0477  00F5               	movwf	delay@x+1
  1150  0478  120A  118A  27BC  120A  118A  	fcall	_delay
  1151  047D                     l2309:
  1152                           
  1153                           ;Newmain.c: 131:   PORTB = *tmp;
  1154  047D  1283               	bcf	3,5	;RP0=0, select bank0
  1155  047E  1303               	bcf	3,6	;RP1=0, select bank0
  1156  047F  0843               	movf	_tmp,w
  1157  0480  0084               	movwf	4
  1158  0481  120A  118A  2400  120A  118A  	fcall	stringdir
  1159  0486  0086               	movwf	6	;volatile
  1160  0487                     l2311:
  1161                           
  1162                           ;Newmain.c: 132:   delay(100);
  1163  0487  3064               	movlw	100
  1164  0488  00F4               	movwf	delay@x
  1165  0489  3000               	movlw	0
  1166  048A  00F5               	movwf	delay@x+1
  1167  048B  120A  118A  27BC  120A  118A  	fcall	_delay
  1168  0490                     l2313:
  1169                           
  1170                           ;Newmain.c: 133:   RC1 = 0;
  1171  0490  1283               	bcf	3,5	;RP0=0, select bank0
  1172  0491  1303               	bcf	3,6	;RP1=0, select bank0
  1173  0492  1087               	bcf	7,1	;volatile
  1174  0493                     l2315:
  1175                           
  1176                           ;Newmain.c: 134:   delay(100);
  1177  0493  3064               	movlw	100
  1178  0494  00F4               	movwf	delay@x
  1179  0495  3000               	movlw	0
  1180  0496  00F5               	movwf	delay@x+1
  1181  0497  120A  118A  27BC  120A  118A  	fcall	_delay
  1182  049C                     l2317:
  1183                           
  1184                           ;Newmain.c: 135:   tmp++;
  1185  049C  3001               	movlw	1
  1186  049D  1283               	bcf	3,5	;RP0=0, select bank0
  1187  049E  1303               	bcf	3,6	;RP1=0, select bank0
  1188  049F  00A1               	movwf	??_temp_disp
  1189  04A0  0821               	movf	??_temp_disp,w
  1190  04A1  07C3               	addwf	_tmp,f
  1191  04A2                     l2319:
  1192                           
  1193                           ;Newmain.c: 127:  while( *tmp != '\0')
  1194  04A2  0843               	movf	_tmp,w
  1195  04A3  0084               	movwf	4
  1196  04A4  120A  118A  2400  120A  118A  	fcall	stringdir
  1197  04A9  3A00               	xorlw	0
  1198  04AA  1D03               	skipz
  1199  04AB  2CAD               	goto	u2021
  1200  04AC  2CAE               	goto	u2020
  1201  04AD                     u2021:
  1202  04AD  2C73               	goto	l137
  1203  04AE                     u2020:
  1204  04AE                     l139:
  1205  04AE  0008               	return
  1206  04AF                     __end_of_temp_disp:
  1207                           
  1208                           	psect	text2
  1209  07CB                     __ptext2:	
  1210 ;; *************** function _i2c_stop *****************
  1211 ;; Defined at:
  1212 ;;		line 171 in file "Newmain.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		status,2, status,0, pclath, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0
  1229 ;;      Totals:         0       0       0       0       0
  1230 ;;Total ram usage:        0 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    2
  1233 ;; This function calls:
  1234 ;;		_i2c_wait
  1235 ;; This function is called by:
  1236 ;;		_main
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           
  1241                           ;psect for function _i2c_stop
  1242  07CB                     _i2c_stop:
  1243  07CB                     l1841:	
  1244                           ;incstack = 0
  1245                           ; Regs used in _i2c_stop: [status,2+status,0+pclath+cstack]
  1246                           
  1247                           
  1248                           ;Newmain.c: 173:  i2c_wait();
  1249  07CB  120A  118A  27F4  120A  118A  	fcall	_i2c_wait
  1250  07D0                     l1843:
  1251                           
  1252                           ;Newmain.c: 174:  PEN = 1;
  1253  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  1254  07D1  1303               	bcf	3,6	;RP1=0, select bank1
  1255  07D2  1511               	bsf	17,2	;volatile
  1256  07D3                     l166:	
  1257                           ;Newmain.c: 175:  while(PEN);
  1258                           
  1259  07D3  1911               	btfsc	17,2	;volatile
  1260  07D4  2FD6               	goto	u1401
  1261  07D5  2FD7               	goto	u1400
  1262  07D6                     u1401:
  1263  07D6  2FD3               	goto	l166
  1264  07D7                     u1400:
  1265  07D7                     l169:
  1266  07D7  0008               	return
  1267  07D8                     __end_of_i2c_stop:
  1268                           
  1269                           	psect	text3
  1270  07D8                     __ptext3:	
  1271 ;; *************** function _i2c_rx *****************
  1272 ;; Defined at:
  1273 ;;		line 178 in file "Newmain.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;		None
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;		None
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  1    wreg      unsigned char 
  1280 ;; Registers used:
  1281 ;;		wreg
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1287 ;;      Params:         0       0       0       0       0
  1288 ;;      Locals:         0       0       0       0       0
  1289 ;;      Temps:          0       0       0       0       0
  1290 ;;      Totals:         0       0       0       0       0
  1291 ;;Total ram usage:        0 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; Hardware stack levels required when called:    1
  1294 ;; This function calls:
  1295 ;;		Nothing
  1296 ;; This function is called by:
  1297 ;;		_main
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           
  1302                           ;psect for function _i2c_rx
  1303  07D8                     _i2c_rx:
  1304  07D8                     l1845:	
  1305                           ;incstack = 0
  1306                           ; Regs used in _i2c_rx: [wreg]
  1307                           
  1308                           
  1309                           ;Newmain.c: 180:  RCEN = 1;
  1310  07D8  1683               	bsf	3,5	;RP0=1, select bank1
  1311  07D9  1303               	bcf	3,6	;RP1=0, select bank1
  1312  07DA  1591               	bsf	17,3	;volatile
  1313  07DB                     l172:	
  1314                           ;Newmain.c: 181:  while(!BF);
  1315                           
  1316  07DB  1C14               	btfss	20,0	;volatile
  1317  07DC  2FDE               	goto	u1411
  1318  07DD  2FDF               	goto	u1410
  1319  07DE                     u1411:
  1320  07DE  2FDB               	goto	l172
  1321  07DF                     u1410:
  1322  07DF                     l1847:
  1323                           
  1324                           ;Newmain.c: 182:  return SSPBUF;
  1325  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  1326  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  1327  07E1  0813               	movf	19,w	;volatile
  1328  07E2                     l175:
  1329  07E2  0008               	return
  1330  07E3                     __end_of_i2c_rx:
  1331                           
  1332                           	psect	text4
  1333  07EC                     __ptext4:	
  1334 ;; *************** function _i2c_rep_start *****************
  1335 ;; Defined at:
  1336 ;;		line 158 in file "Newmain.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;		None
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;		None
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		None
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1350 ;;      Params:         0       0       0       0       0
  1351 ;;      Locals:         0       0       0       0       0
  1352 ;;      Temps:          0       0       0       0       0
  1353 ;;      Totals:         0       0       0       0       0
  1354 ;;Total ram usage:        0 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; Hardware stack levels required when called:    1
  1357 ;; This function calls:
  1358 ;;		Nothing
  1359 ;; This function is called by:
  1360 ;;		_main
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           
  1365                           ;psect for function _i2c_rep_start
  1366  07EC                     _i2c_rep_start:
  1367  07EC                     l1837:	
  1368                           ;incstack = 0
  1369                           ; Regs used in _i2c_rep_start: []
  1370                           
  1371                           
  1372                           ;Newmain.c: 160:  RSEN = 1;
  1373  07EC  1683               	bsf	3,5	;RP0=1, select bank1
  1374  07ED  1303               	bcf	3,6	;RP1=0, select bank1
  1375  07EE  1491               	bsf	17,1	;volatile
  1376  07EF                     l154:	
  1377                           ;Newmain.c: 161:  while(RSEN);
  1378                           
  1379  07EF  1891               	btfsc	17,1	;volatile
  1380  07F0  2FF2               	goto	u1381
  1381  07F1  2FF3               	goto	u1380
  1382  07F2                     u1381:
  1383  07F2  2FEF               	goto	l154
  1384  07F3                     u1380:
  1385  07F3                     l157:
  1386  07F3  0008               	return
  1387  07F4                     __end_of_i2c_rep_start:
  1388                           
  1389                           	psect	text5
  1390  059E                     __ptext5:	
  1391 ;; *************** function _i2c_init_disp *****************
  1392 ;; Defined at:
  1393 ;;		line 251 in file "Newmain.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;		None
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1407 ;;      Params:         0       0       0       0       0
  1408 ;;      Locals:         0       0       0       0       0
  1409 ;;      Temps:          0       1       0       0       0
  1410 ;;      Totals:         0       1       0       0       0
  1411 ;;Total ram usage:        1 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; Hardware stack levels required when called:    3
  1414 ;; This function calls:
  1415 ;;		_LCD_cmd
  1416 ;;		_delay
  1417 ;; This function is called by:
  1418 ;;		_main
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           
  1423                           ;psect for function _i2c_init_disp
  1424  059E                     _i2c_init_disp:
  1425  059E                     l2339:	
  1426                           ;incstack = 0
  1427                           ; Regs used in _i2c_init_disp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1428                           
  1429                           
  1430                           ;Newmain.c: 253:  LCD_cmd(0x01);
  1431  059E  3001               	movlw	1
  1432  059F  120A  118A  274E  120A  118A  	fcall	_LCD_cmd
  1433                           
  1434                           ;Newmain.c: 254:  LCD_cmd(0x80);
  1435  05A4  3080               	movlw	128
  1436  05A5  120A  118A  274E  120A  118A  	fcall	_LCD_cmd
  1437                           
  1438                           ;Newmain.c: 255:  while( *d3 != '\0')
  1439  05AA  2DD9               	goto	l2353
  1440  05AB                     l197:
  1441                           
  1442                           ;Newmain.c: 256:  {;Newmain.c: 257:   RC0 = 1;
  1443  05AB  1407               	bsf	7,0	;volatile
  1444                           
  1445                           ;Newmain.c: 258:   RC1 = 1;
  1446  05AC  1487               	bsf	7,1	;volatile
  1447  05AD                     l2341:
  1448                           
  1449                           ;Newmain.c: 259:   delay(100);
  1450  05AD  3064               	movlw	100
  1451  05AE  00F4               	movwf	delay@x
  1452  05AF  3000               	movlw	0
  1453  05B0  00F5               	movwf	delay@x+1
  1454  05B1  120A  118A  27BC  120A  118A  	fcall	_delay
  1455  05B6                     l2343:
  1456                           
  1457                           ;Newmain.c: 260:   PORTB = *d3;
  1458  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  1459  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  1460  05B8  0844               	movf	_d3,w
  1461  05B9  0084               	movwf	4
  1462  05BA  120A  118A  2400  120A  118A  	fcall	stringdir
  1463  05BF  0086               	movwf	6	;volatile
  1464  05C0                     l2345:
  1465                           
  1466                           ;Newmain.c: 261:   delay(200);
  1467  05C0  30C8               	movlw	200
  1468  05C1  00F4               	movwf	delay@x
  1469  05C2  3000               	movlw	0
  1470  05C3  00F5               	movwf	delay@x+1
  1471  05C4  120A  118A  27BC  120A  118A  	fcall	_delay
  1472  05C9                     l2347:
  1473                           
  1474                           ;Newmain.c: 262:   RC1 = 0;
  1475  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  1476  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  1477  05CB  1087               	bcf	7,1	;volatile
  1478  05CC                     l2349:
  1479                           
  1480                           ;Newmain.c: 263:   d3++;
  1481  05CC  3001               	movlw	1
  1482  05CD  00A1               	movwf	??_i2c_init_disp
  1483  05CE  0821               	movf	??_i2c_init_disp,w
  1484  05CF  07C4               	addwf	_d3,f
  1485  05D0                     l2351:
  1486                           
  1487                           ;Newmain.c: 264:   delay(100);
  1488  05D0  3064               	movlw	100
  1489  05D1  00F4               	movwf	delay@x
  1490  05D2  3000               	movlw	0
  1491  05D3  00F5               	movwf	delay@x+1
  1492  05D4  120A  118A  27BC  120A  118A  	fcall	_delay
  1493  05D9                     l2353:
  1494                           
  1495                           ;Newmain.c: 255:  while( *d3 != '\0')
  1496  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  1497  05DA  1303               	bcf	3,6	;RP1=0, select bank0
  1498  05DB  0844               	movf	_d3,w
  1499  05DC  0084               	movwf	4
  1500  05DD  120A  118A  2400  120A  118A  	fcall	stringdir
  1501  05E2  3A00               	xorlw	0
  1502  05E3  1D03               	skipz
  1503  05E4  2DE6               	goto	u2031
  1504  05E5  2DE7               	goto	u2030
  1505  05E6                     u2031:
  1506  05E6  2DAB               	goto	l197
  1507  05E7                     u2030:
  1508  05E7                     l199:
  1509  05E7  0008               	return
  1510  05E8                     __end_of_i2c_init_disp:
  1511                           
  1512                           	psect	text6
  1513  076B                     __ptext6:	
  1514 ;; *************** function _i2c_init *****************
  1515 ;; Defined at:
  1516 ;;		line 214 in file "Newmain.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;		None
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;		None
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  1    wreg      void 
  1523 ;; Registers used:
  1524 ;;		wreg, status,2
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1530 ;;      Params:         0       0       0       0       0
  1531 ;;      Locals:         0       0       0       0       0
  1532 ;;      Temps:          0       0       0       0       0
  1533 ;;      Totals:         0       0       0       0       0
  1534 ;;Total ram usage:        0 bytes
  1535 ;; Hardware stack levels used:    1
  1536 ;; Hardware stack levels required when called:    1
  1537 ;; This function calls:
  1538 ;;		Nothing
  1539 ;; This function is called by:
  1540 ;;		_main
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           
  1545                           ;psect for function _i2c_init
  1546  076B                     _i2c_init:
  1547  076B                     l1851:	
  1548                           ;incstack = 0
  1549                           ; Regs used in _i2c_init: [wreg+status,2]
  1550                           
  1551                           
  1552                           ;Newmain.c: 216:  TRISC3 = 1;
  1553  076B  1683               	bsf	3,5	;RP0=1, select bank1
  1554  076C  1303               	bcf	3,6	;RP1=0, select bank1
  1555  076D  1587               	bsf	7,3	;volatile
  1556                           
  1557                           ;Newmain.c: 217:  TRISC4 = 1;
  1558  076E  1607               	bsf	7,4	;volatile
  1559  076F                     l1853:
  1560                           
  1561                           ;Newmain.c: 218:  SSPBUF = 0x00;
  1562  076F  1283               	bcf	3,5	;RP0=0, select bank0
  1563  0770  1303               	bcf	3,6	;RP1=0, select bank0
  1564  0771  0193               	clrf	19	;volatile
  1565  0772                     l1855:
  1566                           
  1567                           ;Newmain.c: 219:  SSPSTAT = 0xc0;
  1568  0772  30C0               	movlw	192
  1569  0773  1683               	bsf	3,5	;RP0=1, select bank1
  1570  0774  1303               	bcf	3,6	;RP1=0, select bank1
  1571  0775  0094               	movwf	20	;volatile
  1572  0776                     l1857:
  1573                           
  1574                           ;Newmain.c: 220:  SSPCON = 0x28;
  1575  0776  3028               	movlw	40
  1576  0777  1283               	bcf	3,5	;RP0=0, select bank0
  1577  0778  1303               	bcf	3,6	;RP1=0, select bank0
  1578  0779  0094               	movwf	20	;volatile
  1579                           
  1580                           ;Newmain.c: 221:  SSPCON2 = 0x00;
  1581  077A  1683               	bsf	3,5	;RP0=1, select bank1
  1582  077B  1303               	bcf	3,6	;RP1=0, select bank1
  1583  077C  0191               	clrf	17	;volatile
  1584  077D                     l1859:
  1585                           
  1586                           ;Newmain.c: 222:  SSPIF = 0;
  1587  077D  1283               	bcf	3,5	;RP0=0, select bank0
  1588  077E  1303               	bcf	3,6	;RP1=0, select bank0
  1589  077F  118C               	bcf	12,3	;volatile
  1590  0780                     l1861:
  1591                           
  1592                           ;Newmain.c: 223:  SSPADD = 9;
  1593  0780  3009               	movlw	9
  1594  0781  1683               	bsf	3,5	;RP0=1, select bank1
  1595  0782  1303               	bcf	3,6	;RP1=0, select bank1
  1596  0783  0093               	movwf	19	;volatile
  1597  0784                     l187:
  1598  0784  0008               	return
  1599  0785                     __end_of_i2c_init:
  1600                           
  1601                           	psect	text7
  1602  07E3                     __ptext7:	
  1603 ;; *************** function _i2c_NACK *****************
  1604 ;; Defined at:
  1605 ;;		line 164 in file "Newmain.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;		None
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;		None
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      void 
  1612 ;; Registers used:
  1613 ;;		None
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1619 ;;      Params:         0       0       0       0       0
  1620 ;;      Locals:         0       0       0       0       0
  1621 ;;      Temps:          0       0       0       0       0
  1622 ;;      Totals:         0       0       0       0       0
  1623 ;;Total ram usage:        0 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; Hardware stack levels required when called:    1
  1626 ;; This function calls:
  1627 ;;		Nothing
  1628 ;; This function is called by:
  1629 ;;		_main
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           
  1634                           ;psect for function _i2c_NACK
  1635  07E3                     _i2c_NACK:
  1636  07E3                     l1839:	
  1637                           ;incstack = 0
  1638                           ; Regs used in _i2c_NACK: []
  1639                           
  1640                           
  1641                           ;Newmain.c: 166:  ACKDT = 1;
  1642  07E3  1683               	bsf	3,5	;RP0=1, select bank1
  1643  07E4  1303               	bcf	3,6	;RP1=0, select bank1
  1644  07E5  1691               	bsf	17,5	;volatile
  1645                           
  1646                           ;Newmain.c: 167:  ACKEN = 1;
  1647  07E6  1611               	bsf	17,4	;volatile
  1648  07E7                     l160:	
  1649                           ;Newmain.c: 168:  while(ACKEN);
  1650                           
  1651  07E7  1A11               	btfsc	17,4	;volatile
  1652  07E8  2FEA               	goto	u1391
  1653  07E9  2FEB               	goto	u1390
  1654  07EA                     u1391:
  1655  07EA  2FE7               	goto	l160
  1656  07EB                     u1390:
  1657  07EB                     l163:
  1658  07EB  0008               	return
  1659  07EC                     __end_of_i2c_NACK:
  1660                           
  1661                           	psect	text8
  1662  0785                     __ptext8:	
  1663 ;; *************** function _funcion *****************
  1664 ;; Defined at:
  1665 ;;		line 379 in file "Newmain.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;		None
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1679 ;;      Params:         0       0       0       0       0
  1680 ;;      Locals:         0       0       0       0       0
  1681 ;;      Temps:          0       3       0       0       0
  1682 ;;      Totals:         0       3       0       0       0
  1683 ;;Total ram usage:        3 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:    3
  1686 ;; This function calls:
  1687 ;;		_sprintf
  1688 ;; This function is called by:
  1689 ;;		_main
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           
  1694                           ;psect for function _funcion
  1695  0785                     _funcion:
  1696  0785                     l2379:	
  1697                           ;incstack = 0
  1698                           ; Regs used in _funcion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1699                           
  1700                           
  1701                           ;Newmain.c: 381:     sprintf(recibo, " %2i ", r);
  1702  0785  304F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1703  0786  1283               	bcf	3,5	;RP0=0, select bank0
  1704  0787  1303               	bcf	3,6	;RP1=0, select bank0
  1705  0788  00BB               	movwf	??_funcion
  1706  0789  083B               	movf	??_funcion,w
  1707  078A  00AC               	movwf	sprintf@f
  1708  078B  0841               	movf	_r,w
  1709  078C  00BC               	movwf	??_funcion+1
  1710  078D  01BD               	clrf	??_funcion+2
  1711  078E  083C               	movf	??_funcion+1,w
  1712  078F  00AD               	movwf	?_sprintf+1
  1713  0790  083D               	movf	??_funcion+2,w
  1714  0791  00AE               	movwf	?_sprintf+2
  1715  0792  3042               	movlw	(low (_recibo| 0))& (0+255)
  1716  0793  120A  118A  2039  120A  118A  	fcall	_sprintf
  1717  0798                     l239:
  1718  0798  0008               	return
  1719  0799                     __end_of_funcion:
  1720                           
  1721                           	psect	text9
  1722  0039                     __ptext9:	
  1723 ;; *************** function _sprintf *****************
  1724 ;; Defined at:
  1725 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  sp              1    wreg     PTR unsigned char 
  1728 ;;		 -> recibo(1), 
  1729 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  1730 ;;		 -> STR_6(6), 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  sp              1   23[BANK0 ] PTR unsigned char 
  1733 ;;		 -> recibo(1), 
  1734 ;;  tmpval          4    0        struct .
  1735 ;;  width           2   24[BANK0 ] int 
  1736 ;;  val             2   21[BANK0 ] unsigned int 
  1737 ;;  cp              2    0        PTR const unsigned char 
  1738 ;;  len             2    0        unsigned int 
  1739 ;;  c               1   26[BANK0 ] unsigned char 
  1740 ;;  flag            1   20[BANK0 ] unsigned char 
  1741 ;;  prec            1   19[BANK0 ] char 
  1742 ;;  ap              1   18[BANK0 ] PTR void [1]
  1743 ;;		 -> ?_sprintf(2), 
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  2   12[BANK0 ] int 
  1746 ;; Registers used:
  1747 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1753 ;;      Params:         0       3       0       0       0
  1754 ;;      Locals:         0       9       0       0       0
  1755 ;;      Temps:          0       3       0       0       0
  1756 ;;      Totals:         0      15       0       0       0
  1757 ;;Total ram usage:       15 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:    2
  1760 ;; This function calls:
  1761 ;;		___lwdiv
  1762 ;;		___lwmod
  1763 ;;		___wmul
  1764 ;;		_isdigit
  1765 ;; This function is called by:
  1766 ;;		_funcion
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           
  1771                           ;psect for function _sprintf
  1772  0039                     _sprintf:
  1773                           
  1774                           ;incstack = 0
  1775                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1776                           ;sprintf@sp stored from wreg
  1777  0039  1283               	bcf	3,5	;RP0=0, select bank0
  1778  003A  1303               	bcf	3,6	;RP1=0, select bank0
  1779  003B  00B7               	movwf	sprintf@sp
  1780  003C                     l2129:
  1781                           
  1782                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  
      +                          signed char prec;
  1783  003C  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1784  003D  00AF               	movwf	??_sprintf
  1785  003E  082F               	movf	??_sprintf,w
  1786  003F  00B2               	movwf	sprintf@ap
  1787                           
  1788                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1789  0040  29AA               	goto	l2211
  1790  0041                     l2131:
  1791                           
  1792                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1793  0041  3025               	movlw	37
  1794  0042  063A               	xorwf	sprintf@c,w
  1795  0043  1903               	btfsc	3,2
  1796  0044  2846               	goto	u1691
  1797  0045  2847               	goto	u1690
  1798  0046                     u1691:
  1799  0046  2853               	goto	l2137
  1800  0047                     u1690:
  1801  0047                     l2133:
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1804  0047  083A               	movf	sprintf@c,w
  1805  0048  00AF               	movwf	??_sprintf
  1806  0049  0837               	movf	sprintf@sp,w
  1807  004A  0084               	movwf	4
  1808  004B  082F               	movf	??_sprintf,w
  1809  004C  1383               	bcf	3,7	;select IRP bank0
  1810  004D  0080               	movwf	0
  1811  004E                     l2135:
  1812  004E  3001               	movlw	1
  1813  004F  00AF               	movwf	??_sprintf
  1814  0050  082F               	movf	??_sprintf,w
  1815  0051  07B7               	addwf	sprintf@sp,f
  1816                           
  1817                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1818  0052  29AA               	goto	l2211
  1819  0053                     l2137:
  1820                           
  1821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1822  0053  01B8               	clrf	sprintf@width
  1823  0054  01B9               	clrf	sprintf@width+1
  1824                           
  1825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1826  0055  01B4               	clrf	sprintf@flag
  1827  0056                     l2139:
  1828                           
  1829                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1830  0056  082C               	movf	sprintf@f,w
  1831  0057  0084               	movwf	4
  1832  0058  120A  118A  2400  120A  118A  	fcall	stringdir
  1833  005D  120A  118A  2799  120A  118A  	fcall	_isdigit
  1834  0062  1C03               	btfss	3,0
  1835  0063  2865               	goto	u1701
  1836  0064  2866               	goto	u1700
  1837  0065                     u1701:
  1838  0065  28A6               	goto	l2153
  1839  0066                     u1700:
  1840  0066                     l2141:
  1841                           
  1842                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1843  0066  1283               	bcf	3,5	;RP0=0, select bank0
  1844  0067  1303               	bcf	3,6	;RP1=0, select bank0
  1845  0068  01B8               	clrf	sprintf@width
  1846  0069  01B9               	clrf	sprintf@width+1
  1847  006A                     l2143:
  1848                           
  1849                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1850  006A  300A               	movlw	10
  1851  006B  1283               	bcf	3,5	;RP0=0, select bank0
  1852  006C  1303               	bcf	3,6	;RP1=0, select bank0
  1853  006D  00A0               	movwf	___wmul@multiplier
  1854  006E  3000               	movlw	0
  1855  006F  00A1               	movwf	___wmul@multiplier+1
  1856  0070  0839               	movf	sprintf@width+1,w
  1857  0071  00A3               	movwf	___wmul@multiplicand+1
  1858  0072  0838               	movf	sprintf@width,w
  1859  0073  00A2               	movwf	___wmul@multiplicand
  1860  0074  120A  118A  2709  120A  118A  	fcall	___wmul
  1861  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1862  007A  1303               	bcf	3,6	;RP1=0, select bank0
  1863  007B  0821               	movf	?___wmul+1,w
  1864  007C  00B9               	movwf	sprintf@width+1
  1865  007D  0820               	movf	?___wmul,w
  1866  007E  00B8               	movwf	sprintf@width
  1867  007F                     l2145:
  1868                           
  1869                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1870  007F  082C               	movf	sprintf@f,w
  1871  0080  0084               	movwf	4
  1872  0081  120A  118A  2400  120A  118A  	fcall	stringdir
  1873  0086  3ED0               	addlw	208
  1874  0087  00AF               	movwf	??_sprintf
  1875  0088  30FF               	movlw	255
  1876  0089  1803               	skipnc
  1877  008A  3000               	movlw	0
  1878  008B  00B0               	movwf	??_sprintf+1
  1879  008C  082F               	movf	??_sprintf,w
  1880  008D  07B8               	addwf	sprintf@width,f
  1881  008E  1803               	skipnc
  1882  008F  0AB9               	incf	sprintf@width+1,f
  1883  0090  0830               	movf	??_sprintf+1,w
  1884  0091  07B9               	addwf	sprintf@width+1,f
  1885  0092                     l2147:
  1886  0092  3001               	movlw	1
  1887  0093  00AF               	movwf	??_sprintf
  1888  0094  082F               	movf	??_sprintf,w
  1889  0095  07AC               	addwf	sprintf@f,f
  1890  0096                     l2149:
  1891                           
  1892                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1893  0096  082C               	movf	sprintf@f,w
  1894  0097  0084               	movwf	4
  1895  0098  120A  118A  2400  120A  118A  	fcall	stringdir
  1896  009D  120A  118A  2799  120A  118A  	fcall	_isdigit
  1897  00A2  1803               	btfsc	3,0
  1898  00A3  28A5               	goto	u1711
  1899  00A4  28A6               	goto	u1710
  1900  00A5                     u1711:
  1901  00A5  286A               	goto	l2143
  1902  00A6                     u1710:
  1903  00A6                     l2153:
  1904  00A6  3001               	movlw	1
  1905  00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1906  00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1907  00A9  07AC               	addwf	sprintf@f,f
  1908  00AA  30FF               	movlw	-1
  1909  00AB  072C               	addwf	sprintf@f,w
  1910  00AC  0084               	movwf	4
  1911  00AD  120A  118A  2400  120A  118A  	fcall	stringdir
  1912  00B2  00BA               	movwf	sprintf@c
  1913  00B3  00AF               	movwf	??_sprintf
  1914  00B4  01B0               	clrf	??_sprintf+1
  1915                           
  1916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1917                           ; Switch size 1, requested type "simple"
  1918                           ; Number of cases is 1, Range of values is 0 to 0
  1919                           ; switch strategies available:
  1920                           ; Name         Instructions Cycles
  1921                           ; simple_byte            4     3 (average)
  1922                           ; direct_byte           11     8 (fixed)
  1923                           ; jumptable            260     6 (fixed)
  1924                           ;	Chosen strategy is simple_byte
  1925  00B5  0830               	movf	??_sprintf+1,w
  1926  00B6  3A00               	xorlw	0	; case 0
  1927  00B7  1903               	skipnz
  1928  00B8  28BA               	goto	l2453
  1929  00B9  29AA               	goto	l2211
  1930  00BA                     l2453:
  1931                           
  1932                           ; Switch size 1, requested type "simple"
  1933                           ; Number of cases is 3, Range of values is 0 to 105
  1934                           ; switch strategies available:
  1935                           ; Name         Instructions Cycles
  1936                           ; simple_byte           10     6 (average)
  1937                           ; jumptable            260     6 (fixed)
  1938                           ;	Chosen strategy is simple_byte
  1939  00BA  082F               	movf	??_sprintf,w
  1940  00BB  3A00               	xorlw	0	; case 0
  1941  00BC  1903               	skipnz
  1942  00BD  29BC               	goto	l2213
  1943  00BE  3A64               	xorlw	100	; case 100
  1944  00BF  1903               	skipnz
  1945  00C0  28C5               	goto	l2155
  1946  00C1  3A0D               	xorlw	13	; case 105
  1947  00C2  1903               	skipnz
  1948  00C3  28C5               	goto	l2155
  1949  00C4  29AA               	goto	l2211
  1950  00C5                     l2155:
  1951                           
  1952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1953  00C5  0832               	movf	sprintf@ap,w
  1954  00C6  0084               	movwf	4
  1955  00C7  1383               	bcf	3,7	;select IRP bank0
  1956  00C8  0800               	movf	0,w
  1957  00C9  00B5               	movwf	sprintf@val
  1958  00CA  0A84               	incf	4,f
  1959  00CB  0800               	movf	0,w
  1960  00CC  00B6               	movwf	sprintf@val+1
  1961  00CD                     l2157:
  1962  00CD  3002               	movlw	2
  1963  00CE  00AF               	movwf	??_sprintf
  1964  00CF  082F               	movf	??_sprintf,w
  1965  00D0  07B2               	addwf	sprintf@ap,f
  1966  00D1                     l2159:
  1967                           
  1968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1969  00D1  1FB6               	btfss	sprintf@val+1,7
  1970  00D2  28D4               	goto	u1721
  1971  00D3  28D5               	goto	u1720
  1972  00D4                     u1721:
  1973  00D4  28DE               	goto	l2165
  1974  00D5                     u1720:
  1975  00D5                     l2161:
  1976                           
  1977                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1978  00D5  3003               	movlw	3
  1979  00D6  00AF               	movwf	??_sprintf
  1980  00D7  082F               	movf	??_sprintf,w
  1981  00D8  04B4               	iorwf	sprintf@flag,f
  1982  00D9                     l2163:
  1983                           
  1984                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1985  00D9  09B5               	comf	sprintf@val,f
  1986  00DA  09B6               	comf	sprintf@val+1,f
  1987  00DB  0AB5               	incf	sprintf@val,f
  1988  00DC  1903               	skipnz
  1989  00DD  0AB6               	incf	sprintf@val+1,f
  1990  00DE                     l2165:
  1991                           
  1992                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1993  00DE  01BA               	clrf	sprintf@c
  1994  00DF  0ABA               	incf	sprintf@c,f
  1995  00E0                     l2171:
  1996                           
  1997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1998  00E0  083A               	movf	sprintf@c,w
  1999  00E1  00AF               	movwf	??_sprintf
  2000  00E2  072F               	addwf	??_sprintf,w
  2001  00E3  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2002  00E4  0084               	movwf	4
  2003  00E5  120A  118A  2400  120A  118A  	fcall	stringdir
  2004  00EA  00B0               	movwf	??_sprintf+1
  2005  00EB  120A  118A  2400  120A  118A  	fcall	stringdir
  2006  00F0  00B1               	movwf	??_sprintf+2
  2007  00F1  0831               	movf	??_sprintf+2,w
  2008  00F2  0236               	subwf	sprintf@val+1,w
  2009  00F3  1D03               	skipz
  2010  00F4  28F7               	goto	u1735
  2011  00F5  0830               	movf	??_sprintf+1,w
  2012  00F6  0235               	subwf	sprintf@val,w
  2013  00F7                     u1735:
  2014  00F7  1803               	skipnc
  2015  00F8  28FA               	goto	u1731
  2016  00F9  28FB               	goto	u1730
  2017  00FA                     u1731:
  2018  00FA  28FC               	goto	l2175
  2019  00FB                     u1730:
  2020  00FB  2906               	goto	l2177
  2021  00FC                     l2175:
  2022  00FC  3001               	movlw	1
  2023  00FD  00AF               	movwf	??_sprintf
  2024  00FE  082F               	movf	??_sprintf,w
  2025  00FF  07BA               	addwf	sprintf@c,f
  2026  0100  3005               	movlw	5
  2027  0101  063A               	xorwf	sprintf@c,w
  2028  0102  1D03               	btfss	3,2
  2029  0103  2905               	goto	u1741
  2030  0104  2906               	goto	u1740
  2031  0105                     u1741:
  2032  0105  28E0               	goto	l2171
  2033  0106                     u1740:
  2034  0106                     l2177:
  2035                           
  2036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  2037  0106  0838               	movf	sprintf@width,w
  2038  0107  0439               	iorwf	sprintf@width+1,w
  2039  0108  1903               	btfsc	3,2
  2040  0109  290B               	goto	u1751
  2041  010A  290C               	goto	u1750
  2042  010B                     u1751:
  2043  010B  2918               	goto	l379
  2044  010C                     u1750:
  2045  010C                     l2179:
  2046  010C  0834               	movf	sprintf@flag,w
  2047  010D  3903               	andlw	3
  2048  010E  1903               	btfsc	3,2
  2049  010F  2911               	goto	u1761
  2050  0110  2912               	goto	u1760
  2051  0111                     u1761:
  2052  0111  2918               	goto	l379
  2053  0112                     u1760:
  2054  0112                     l2181:
  2055                           
  2056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  2057  0112  30FF               	movlw	255
  2058  0113  07B8               	addwf	sprintf@width,f
  2059  0114  1803               	skipnc
  2060  0115  0AB9               	incf	sprintf@width+1,f
  2061  0116  30FF               	movlw	255
  2062  0117  07B9               	addwf	sprintf@width+1,f
  2063  0118                     l379:
  2064                           
  2065                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  2066  0118  0839               	movf	sprintf@width+1,w
  2067  0119  3A80               	xorlw	128
  2068  011A  3C80               	sublw	128
  2069  011B  1D03               	skipz
  2070  011C  291F               	goto	u1775
  2071  011D  0838               	movf	sprintf@width,w
  2072  011E  023A               	subwf	sprintf@c,w
  2073  011F                     u1775:
  2074  011F  1803               	skipnc
  2075  0120  2922               	goto	u1771
  2076  0121  2923               	goto	u1770
  2077  0122                     u1771:
  2078  0122  292F               	goto	l2185
  2079  0123                     u1770:
  2080  0123                     l2183:
  2081                           
  2082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  2083  0123  1283               	bcf	3,5	;RP0=0, select bank0
  2084  0124  1303               	bcf	3,6	;RP1=0, select bank0
  2085  0125  083A               	movf	sprintf@c,w
  2086  0126  00AF               	movwf	??_sprintf
  2087  0127  01B0               	clrf	??_sprintf+1
  2088  0128  082F               	movf	??_sprintf,w
  2089  0129  02B8               	subwf	sprintf@width,f
  2090  012A  0830               	movf	??_sprintf+1,w
  2091  012B  1C03               	skipc
  2092  012C  03B9               	decf	sprintf@width+1,f
  2093  012D  02B9               	subwf	sprintf@width+1,f
  2094  012E  2933               	goto	l2187
  2095  012F                     l2185:
  2096                           
  2097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  2098  012F  1283               	bcf	3,5	;RP0=0, select bank0
  2099  0130  1303               	bcf	3,6	;RP1=0, select bank0
  2100  0131  01B8               	clrf	sprintf@width
  2101  0132  01B9               	clrf	sprintf@width+1
  2102  0133                     l2187:
  2103                           
  2104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  2105  0133  0838               	movf	sprintf@width,w
  2106  0134  0439               	iorwf	sprintf@width+1,w
  2107  0135  1903               	btfsc	3,2
  2108  0136  2938               	goto	u1781
  2109  0137  2939               	goto	u1780
  2110  0138                     u1781:
  2111  0138  2950               	goto	l2195
  2112  0139                     u1780:
  2113  0139                     l2189:
  2114                           
  2115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  2116  0139  3020               	movlw	32
  2117  013A  00AF               	movwf	??_sprintf
  2118  013B  0837               	movf	sprintf@sp,w
  2119  013C  0084               	movwf	4
  2120  013D  082F               	movf	??_sprintf,w
  2121  013E  1383               	bcf	3,7	;select IRP bank0
  2122  013F  0080               	movwf	0
  2123  0140                     l2191:
  2124  0140  3001               	movlw	1
  2125  0141  00AF               	movwf	??_sprintf
  2126  0142  082F               	movf	??_sprintf,w
  2127  0143  07B7               	addwf	sprintf@sp,f
  2128  0144                     l2193:
  2129  0144  30FF               	movlw	255
  2130  0145  07B8               	addwf	sprintf@width,f
  2131  0146  1803               	skipnc
  2132  0147  0AB9               	incf	sprintf@width+1,f
  2133  0148  30FF               	movlw	255
  2134  0149  07B9               	addwf	sprintf@width+1,f
  2135  014A  0838               	movf	sprintf@width,w
  2136  014B  0439               	iorwf	sprintf@width+1,w
  2137  014C  1D03               	btfss	3,2
  2138  014D  294F               	goto	u1791
  2139  014E  2950               	goto	u1790
  2140  014F                     u1791:
  2141  014F  2939               	goto	l2189
  2142  0150                     u1790:
  2143  0150                     l2195:
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  2146  0150  0834               	movf	sprintf@flag,w
  2147  0151  3903               	andlw	3
  2148  0152  1903               	btfsc	3,2
  2149  0153  2955               	goto	u1801
  2150  0154  2956               	goto	u1800
  2151  0155                     u1801:
  2152  0155  2961               	goto	l2201
  2153  0156                     u1800:
  2154  0156                     l2197:
  2155                           
  2156                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2157  0156  302D               	movlw	45
  2158  0157  00AF               	movwf	??_sprintf
  2159  0158  0837               	movf	sprintf@sp,w
  2160  0159  0084               	movwf	4
  2161  015A  082F               	movf	??_sprintf,w
  2162  015B  1383               	bcf	3,7	;select IRP bank0
  2163  015C  0080               	movwf	0
  2164  015D                     l2199:
  2165  015D  3001               	movlw	1
  2166  015E  00AF               	movwf	??_sprintf
  2167  015F  082F               	movf	??_sprintf,w
  2168  0160  07B7               	addwf	sprintf@sp,f
  2169  0161                     l2201:
  2170                           
  2171                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2172  0161  083A               	movf	sprintf@c,w
  2173  0162  00AF               	movwf	??_sprintf
  2174  0163  082F               	movf	??_sprintf,w
  2175  0164  00B3               	movwf	sprintf@prec
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2178  0165  29A1               	goto	l2209
  2179  0166                     l2203:
  2180                           
  2181                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2182  0166  300A               	movlw	10
  2183  0167  00A7               	movwf	___lwmod@divisor
  2184  0168  3000               	movlw	0
  2185  0169  00A8               	movwf	___lwmod@divisor+1
  2186  016A  0833               	movf	sprintf@prec,w
  2187  016B  00AF               	movwf	??_sprintf
  2188  016C  072F               	addwf	??_sprintf,w
  2189  016D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2190  016E  0084               	movwf	4
  2191  016F  120A  118A  2400  120A  118A  	fcall	stringdir
  2192  0174  00A0               	movwf	___lwdiv@divisor
  2193  0175  120A  118A  2400  120A  118A  	fcall	stringdir
  2194  017A  00A1               	movwf	___lwdiv@divisor+1
  2195  017B  0836               	movf	sprintf@val+1,w
  2196  017C  00A3               	movwf	___lwdiv@dividend+1
  2197  017D  0835               	movf	sprintf@val,w
  2198  017E  00A2               	movwf	___lwdiv@dividend
  2199  017F  120A  118A  25E8  120A  118A  	fcall	___lwdiv
  2200  0184  1283               	bcf	3,5	;RP0=0, select bank0
  2201  0185  1303               	bcf	3,6	;RP1=0, select bank0
  2202  0186  0821               	movf	?___lwdiv+1,w
  2203  0187  00AA               	movwf	___lwmod@dividend+1
  2204  0188  0820               	movf	?___lwdiv,w
  2205  0189  00A9               	movwf	___lwmod@dividend
  2206  018A  120A  118A  266C  120A  118A  	fcall	___lwmod
  2207  018F  1283               	bcf	3,5	;RP0=0, select bank0
  2208  0190  1303               	bcf	3,6	;RP1=0, select bank0
  2209  0191  0827               	movf	?___lwmod,w
  2210  0192  3E30               	addlw	48
  2211  0193  00B0               	movwf	??_sprintf+1
  2212  0194  0830               	movf	??_sprintf+1,w
  2213  0195  00BA               	movwf	sprintf@c
  2214  0196                     l2205:
  2215                           
  2216                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2217  0196  083A               	movf	sprintf@c,w
  2218  0197  00AF               	movwf	??_sprintf
  2219  0198  0837               	movf	sprintf@sp,w
  2220  0199  0084               	movwf	4
  2221  019A  082F               	movf	??_sprintf,w
  2222  019B  1383               	bcf	3,7	;select IRP bank0
  2223  019C  0080               	movwf	0
  2224  019D                     l2207:
  2225  019D  3001               	movlw	1
  2226  019E  00AF               	movwf	??_sprintf
  2227  019F  082F               	movf	??_sprintf,w
  2228  01A0  07B7               	addwf	sprintf@sp,f
  2229  01A1                     l2209:
  2230                           
  2231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2232  01A1  30FF               	movlw	255
  2233  01A2  00AF               	movwf	??_sprintf
  2234  01A3  082F               	movf	??_sprintf,w
  2235  01A4  07B3               	addwf	sprintf@prec,f
  2236  01A5  0A33               	incf	sprintf@prec,w
  2237  01A6  1D03               	btfss	3,2
  2238  01A7  29A9               	goto	u1811
  2239  01A8  29AA               	goto	u1810
  2240  01A9                     u1811:
  2241  01A9  2966               	goto	l2203
  2242  01AA                     u1810:
  2243  01AA                     l2211:
  2244                           
  2245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2246  01AA  3001               	movlw	1
  2247  01AB  07AC               	addwf	sprintf@f,f
  2248  01AC  30FF               	movlw	-1
  2249  01AD  072C               	addwf	sprintf@f,w
  2250  01AE  0084               	movwf	4
  2251  01AF  120A  118A  2400  120A  118A  	fcall	stringdir
  2252  01B4  00AF               	movwf	??_sprintf
  2253  01B5  082F               	movf	??_sprintf,w
  2254  01B6  00BA               	movwf	sprintf@c
  2255  01B7  083A               	movf	sprintf@c,w
  2256  01B8  1D03               	btfss	3,2
  2257  01B9  29BB               	goto	u1821
  2258  01BA  29BC               	goto	u1820
  2259  01BB                     u1821:
  2260  01BB  2841               	goto	l2131
  2261  01BC                     u1820:
  2262  01BC                     l2213:
  2263                           
  2264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2265  01BC  0837               	movf	sprintf@sp,w
  2266  01BD  0084               	movwf	4
  2267  01BE  1383               	bcf	3,7	;select IRP bank0
  2268  01BF  0180               	clrf	0
  2269  01C0                     l390:
  2270  01C0  0008               	return
  2271  01C1                     __end_of_sprintf:
  2272                           
  2273                           	psect	text10
  2274  0799                     __ptext10:	
  2275 ;; *************** function _isdigit *****************
  2276 ;; Defined at:
  2277 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  c               1    wreg     unsigned char 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  c               1    5[COMMON] unsigned char 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;		None               void
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2291 ;;      Params:         0       0       0       0       0
  2292 ;;      Locals:         2       0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0
  2294 ;;      Totals:         2       0       0       0       0
  2295 ;;Total ram usage:        2 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    1
  2298 ;; This function calls:
  2299 ;;		Nothing
  2300 ;; This function is called by:
  2301 ;;		_sprintf
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           
  2306                           ;psect for function _isdigit
  2307  0799                     _isdigit:
  2308                           
  2309                           ;incstack = 0
  2310                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2311                           ;isdigit@c stored from wreg
  2312  0799  00F5               	movwf	isdigit@c
  2313  079A                     l1511:
  2314  079A  01F4               	clrf	_isdigit$843
  2315  079B                     l1513:
  2316  079B  303A               	movlw	58
  2317  079C  0275               	subwf	isdigit@c,w
  2318  079D  1803               	skipnc
  2319  079E  2FA0               	goto	u801
  2320  079F  2FA1               	goto	u800
  2321  07A0                     u801:
  2322  07A0  2FA9               	goto	l1519
  2323  07A1                     u800:
  2324  07A1                     l1515:
  2325  07A1  3030               	movlw	48
  2326  07A2  0275               	subwf	isdigit@c,w
  2327  07A3  1C03               	skipc
  2328  07A4  2FA6               	goto	u811
  2329  07A5  2FA7               	goto	u810
  2330  07A6                     u811:
  2331  07A6  2FA9               	goto	l1519
  2332  07A7                     u810:
  2333  07A7                     l1517:
  2334  07A7  01F4               	clrf	_isdigit$843
  2335  07A8  0AF4               	incf	_isdigit$843,f
  2336  07A9                     l1519:
  2337  07A9  0C74               	rrf	_isdigit$843,w
  2338  07AA                     l847:
  2339  07AA  0008               	return
  2340  07AB                     __end_of_isdigit:
  2341                           
  2342                           	psect	text11
  2343  0709                     __ptext11:	
  2344 ;; *************** function ___wmul *****************
  2345 ;; Defined at:
  2346 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2347 ;; Parameters:    Size  Location     Type
  2348 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2349 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  product         2    4[COMMON] unsigned int 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  2    0[BANK0 ] unsigned int 
  2354 ;; Registers used:
  2355 ;;		wreg, status,2, status,0
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2361 ;;      Params:         0       4       0       0       0
  2362 ;;      Locals:         2       0       0       0       0
  2363 ;;      Temps:          0       0       0       0       0
  2364 ;;      Totals:         2       4       0       0       0
  2365 ;;Total ram usage:        6 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; Hardware stack levels required when called:    1
  2368 ;; This function calls:
  2369 ;;		Nothing
  2370 ;; This function is called by:
  2371 ;;		_sprintf
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           
  2376                           ;psect for function ___wmul
  2377  0709                     ___wmul:
  2378  0709                     l2029:	
  2379                           ;incstack = 0
  2380                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2381                           
  2382  0709  01F4               	clrf	___wmul@product
  2383  070A  01F5               	clrf	___wmul@product+1
  2384  070B                     l2031:
  2385  070B  1283               	bcf	3,5	;RP0=0, select bank0
  2386  070C  1303               	bcf	3,6	;RP1=0, select bank0
  2387  070D  1C20               	btfss	___wmul@multiplier,0
  2388  070E  2F10               	goto	u1531
  2389  070F  2F11               	goto	u1530
  2390  0710                     u1531:
  2391  0710  2F17               	goto	l394
  2392  0711                     u1530:
  2393  0711                     l2033:
  2394  0711  0822               	movf	___wmul@multiplicand,w
  2395  0712  07F4               	addwf	___wmul@product,f
  2396  0713  1803               	skipnc
  2397  0714  0AF5               	incf	___wmul@product+1,f
  2398  0715  0823               	movf	___wmul@multiplicand+1,w
  2399  0716  07F5               	addwf	___wmul@product+1,f
  2400  0717                     l394:
  2401  0717  3001               	movlw	1
  2402  0718                     u1545:
  2403  0718  1003               	clrc
  2404  0719  0DA2               	rlf	___wmul@multiplicand,f
  2405  071A  0DA3               	rlf	___wmul@multiplicand+1,f
  2406  071B  3EFF               	addlw	-1
  2407  071C  1D03               	skipz
  2408  071D  2F18               	goto	u1545
  2409  071E                     l2035:
  2410  071E  3001               	movlw	1
  2411  071F                     u1555:
  2412  071F  1003               	clrc
  2413  0720  0CA1               	rrf	___wmul@multiplier+1,f
  2414  0721  0CA0               	rrf	___wmul@multiplier,f
  2415  0722  3EFF               	addlw	-1
  2416  0723  1D03               	skipz
  2417  0724  2F1F               	goto	u1555
  2418  0725                     l2037:
  2419  0725  0820               	movf	___wmul@multiplier,w
  2420  0726  0421               	iorwf	___wmul@multiplier+1,w
  2421  0727  1D03               	btfss	3,2
  2422  0728  2F2A               	goto	u1561
  2423  0729  2F2B               	goto	u1560
  2424  072A                     u1561:
  2425  072A  2F0B               	goto	l2031
  2426  072B                     u1560:
  2427  072B                     l2039:
  2428  072B  0875               	movf	___wmul@product+1,w
  2429  072C  00A1               	movwf	?___wmul+1
  2430  072D  0874               	movf	___wmul@product,w
  2431  072E  00A0               	movwf	?___wmul
  2432  072F                     l396:
  2433  072F  0008               	return
  2434  0730                     __end_of___wmul:
  2435                           
  2436                           	psect	text12
  2437  066C                     __ptext12:	
  2438 ;; *************** function ___lwmod *****************
  2439 ;; Defined at:
  2440 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  divisor         2    7[BANK0 ] unsigned int 
  2443 ;;  dividend        2    9[BANK0 ] unsigned int 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  counter         1   11[BANK0 ] unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  2    7[BANK0 ] unsigned int 
  2448 ;; Registers used:
  2449 ;;		wreg, status,2, status,0
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2455 ;;      Params:         0       4       0       0       0
  2456 ;;      Locals:         0       1       0       0       0
  2457 ;;      Temps:          1       0       0       0       0
  2458 ;;      Totals:         1       5       0       0       0
  2459 ;;Total ram usage:        6 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    1
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_sprintf
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           
  2470                           ;psect for function ___lwmod
  2471  066C                     ___lwmod:
  2472  066C                     l1563:	
  2473                           ;incstack = 0
  2474                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2475                           
  2476  066C  1283               	bcf	3,5	;RP0=0, select bank0
  2477  066D  1303               	bcf	3,6	;RP1=0, select bank0
  2478  066E  0827               	movf	___lwmod@divisor,w
  2479  066F  0428               	iorwf	___lwmod@divisor+1,w
  2480  0670  1903               	btfsc	3,2
  2481  0671  2E73               	goto	u931
  2482  0672  2E74               	goto	u930
  2483  0673                     u931:
  2484  0673  2EA3               	goto	l1581
  2485  0674                     u930:
  2486  0674                     l1565:
  2487  0674  01AB               	clrf	___lwmod@counter
  2488  0675  0AAB               	incf	___lwmod@counter,f
  2489  0676  2E82               	goto	l1571
  2490  0677                     l1567:
  2491  0677  3001               	movlw	1
  2492  0678                     u945:
  2493  0678  1003               	clrc
  2494  0679  0DA7               	rlf	___lwmod@divisor,f
  2495  067A  0DA8               	rlf	___lwmod@divisor+1,f
  2496  067B  3EFF               	addlw	-1
  2497  067C  1D03               	skipz
  2498  067D  2E78               	goto	u945
  2499  067E                     l1569:
  2500  067E  3001               	movlw	1
  2501  067F  00F5               	movwf	??___lwmod
  2502  0680  0875               	movf	??___lwmod,w
  2503  0681  07AB               	addwf	___lwmod@counter,f
  2504  0682                     l1571:
  2505  0682  1FA8               	btfss	___lwmod@divisor+1,7
  2506  0683  2E85               	goto	u951
  2507  0684  2E86               	goto	u950
  2508  0685                     u951:
  2509  0685  2E77               	goto	l1567
  2510  0686                     u950:
  2511  0686                     l1573:
  2512  0686  0828               	movf	___lwmod@divisor+1,w
  2513  0687  022A               	subwf	___lwmod@dividend+1,w
  2514  0688  1D03               	skipz
  2515  0689  2E8C               	goto	u965
  2516  068A  0827               	movf	___lwmod@divisor,w
  2517  068B  0229               	subwf	___lwmod@dividend,w
  2518  068C                     u965:
  2519  068C  1C03               	skipc
  2520  068D  2E8F               	goto	u961
  2521  068E  2E90               	goto	u960
  2522  068F                     u961:
  2523  068F  2E96               	goto	l1577
  2524  0690                     u960:
  2525  0690                     l1575:
  2526  0690  0827               	movf	___lwmod@divisor,w
  2527  0691  02A9               	subwf	___lwmod@dividend,f
  2528  0692  0828               	movf	___lwmod@divisor+1,w
  2529  0693  1C03               	skipc
  2530  0694  03AA               	decf	___lwmod@dividend+1,f
  2531  0695  02AA               	subwf	___lwmod@dividend+1,f
  2532  0696                     l1577:
  2533  0696  3001               	movlw	1
  2534  0697                     u975:
  2535  0697  1003               	clrc
  2536  0698  0CA8               	rrf	___lwmod@divisor+1,f
  2537  0699  0CA7               	rrf	___lwmod@divisor,f
  2538  069A  3EFF               	addlw	-1
  2539  069B  1D03               	skipz
  2540  069C  2E97               	goto	u975
  2541  069D                     l1579:
  2542  069D  3001               	movlw	1
  2543  069E  02AB               	subwf	___lwmod@counter,f
  2544  069F  1D03               	btfss	3,2
  2545  06A0  2EA2               	goto	u981
  2546  06A1  2EA3               	goto	u980
  2547  06A2                     u981:
  2548  06A2  2E86               	goto	l1573
  2549  06A3                     u980:
  2550  06A3                     l1581:
  2551  06A3  082A               	movf	___lwmod@dividend+1,w
  2552  06A4  00A8               	movwf	?___lwmod+1
  2553  06A5  0829               	movf	___lwmod@dividend,w
  2554  06A6  00A7               	movwf	?___lwmod
  2555  06A7                     l676:
  2556  06A7  0008               	return
  2557  06A8                     __end_of___lwmod:
  2558                           
  2559                           	psect	text13
  2560  05E8                     __ptext13:	
  2561 ;; *************** function ___lwdiv *****************
  2562 ;; Defined at:
  2563 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  divisor         2    0[BANK0 ] unsigned int 
  2566 ;;  dividend        2    2[BANK0 ] unsigned int 
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;  quotient        2    5[BANK0 ] unsigned int 
  2569 ;;  counter         1    4[BANK0 ] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  2    0[BANK0 ] unsigned int 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2, status,0
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2579 ;;      Params:         0       4       0       0       0
  2580 ;;      Locals:         0       3       0       0       0
  2581 ;;      Temps:          1       0       0       0       0
  2582 ;;      Totals:         1       7       0       0       0
  2583 ;;Total ram usage:        8 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; Hardware stack levels required when called:    1
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_sprintf
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           
  2594                           ;psect for function ___lwdiv
  2595  05E8                     ___lwdiv:
  2596  05E8                     l2043:	
  2597                           ;incstack = 0
  2598                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2599                           
  2600  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  2601  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  2602  05EA  01A5               	clrf	___lwdiv@quotient
  2603  05EB  01A6               	clrf	___lwdiv@quotient+1
  2604  05EC                     l2045:
  2605  05EC  0820               	movf	___lwdiv@divisor,w
  2606  05ED  0421               	iorwf	___lwdiv@divisor+1,w
  2607  05EE  1903               	btfsc	3,2
  2608  05EF  2DF1               	goto	u1571
  2609  05F0  2DF2               	goto	u1570
  2610  05F1                     u1571:
  2611  05F1  2E29               	goto	l2065
  2612  05F2                     u1570:
  2613  05F2                     l2047:
  2614  05F2  01A4               	clrf	___lwdiv@counter
  2615  05F3  0AA4               	incf	___lwdiv@counter,f
  2616  05F4  2E00               	goto	l2053
  2617  05F5                     l2049:
  2618  05F5  3001               	movlw	1
  2619  05F6                     u1585:
  2620  05F6  1003               	clrc
  2621  05F7  0DA0               	rlf	___lwdiv@divisor,f
  2622  05F8  0DA1               	rlf	___lwdiv@divisor+1,f
  2623  05F9  3EFF               	addlw	-1
  2624  05FA  1D03               	skipz
  2625  05FB  2DF6               	goto	u1585
  2626  05FC                     l2051:
  2627  05FC  3001               	movlw	1
  2628  05FD  00F4               	movwf	??___lwdiv
  2629  05FE  0874               	movf	??___lwdiv,w
  2630  05FF  07A4               	addwf	___lwdiv@counter,f
  2631  0600                     l2053:
  2632  0600  1FA1               	btfss	___lwdiv@divisor+1,7
  2633  0601  2E03               	goto	u1591
  2634  0602  2E04               	goto	u1590
  2635  0603                     u1591:
  2636  0603  2DF5               	goto	l2049
  2637  0604                     u1590:
  2638  0604                     l2055:
  2639  0604  3001               	movlw	1
  2640  0605                     u1605:
  2641  0605  1003               	clrc
  2642  0606  0DA5               	rlf	___lwdiv@quotient,f
  2643  0607  0DA6               	rlf	___lwdiv@quotient+1,f
  2644  0608  3EFF               	addlw	-1
  2645  0609  1D03               	skipz
  2646  060A  2E05               	goto	u1605
  2647  060B  0821               	movf	___lwdiv@divisor+1,w
  2648  060C  0223               	subwf	___lwdiv@dividend+1,w
  2649  060D  1D03               	skipz
  2650  060E  2E11               	goto	u1615
  2651  060F  0820               	movf	___lwdiv@divisor,w
  2652  0610  0222               	subwf	___lwdiv@dividend,w
  2653  0611                     u1615:
  2654  0611  1C03               	skipc
  2655  0612  2E14               	goto	u1611
  2656  0613  2E15               	goto	u1610
  2657  0614                     u1611:
  2658  0614  2E1C               	goto	l2061
  2659  0615                     u1610:
  2660  0615                     l2057:
  2661  0615  0820               	movf	___lwdiv@divisor,w
  2662  0616  02A2               	subwf	___lwdiv@dividend,f
  2663  0617  0821               	movf	___lwdiv@divisor+1,w
  2664  0618  1C03               	skipc
  2665  0619  03A3               	decf	___lwdiv@dividend+1,f
  2666  061A  02A3               	subwf	___lwdiv@dividend+1,f
  2667  061B                     l2059:
  2668  061B  1425               	bsf	___lwdiv@quotient,0
  2669  061C                     l2061:
  2670  061C  3001               	movlw	1
  2671  061D                     u1625:
  2672  061D  1003               	clrc
  2673  061E  0CA1               	rrf	___lwdiv@divisor+1,f
  2674  061F  0CA0               	rrf	___lwdiv@divisor,f
  2675  0620  3EFF               	addlw	-1
  2676  0621  1D03               	skipz
  2677  0622  2E1D               	goto	u1625
  2678  0623                     l2063:
  2679  0623  3001               	movlw	1
  2680  0624  02A4               	subwf	___lwdiv@counter,f
  2681  0625  1D03               	btfss	3,2
  2682  0626  2E28               	goto	u1631
  2683  0627  2E29               	goto	u1630
  2684  0628                     u1631:
  2685  0628  2E04               	goto	l2055
  2686  0629                     u1630:
  2687  0629                     l2065:
  2688  0629  0826               	movf	___lwdiv@quotient+1,w
  2689  062A  00A1               	movwf	?___lwdiv+1
  2690  062B  0825               	movf	___lwdiv@quotient,w
  2691  062C  00A0               	movwf	?___lwdiv
  2692  062D                     l666:
  2693  062D  0008               	return
  2694  062E                     __end_of___lwdiv:
  2695                           
  2696                           	psect	text14
  2697  0271                     __ptext14:	
  2698 ;; *************** function _check_dev_disp *****************
  2699 ;; Defined at:
  2700 ;;		line 285 in file "Newmain.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;		None
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;		None
  2705 ;; Return value:  Size  Location     Type
  2706 ;;                  1    wreg      void 
  2707 ;; Registers used:
  2708 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2714 ;;      Params:         0       0       0       0       0
  2715 ;;      Locals:         0       0       0       0       0
  2716 ;;      Temps:          0       1       0       0       0
  2717 ;;      Totals:         0       1       0       0       0
  2718 ;;Total ram usage:        1 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    4
  2721 ;; This function calls:
  2722 ;;		_LCD_cmd
  2723 ;;		_check_dev
  2724 ;;		_delay
  2725 ;;		_dev_found_disp
  2726 ;;		_no_dev_disp
  2727 ;; This function is called by:
  2728 ;;		_main
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           
  2733                           ;psect for function _check_dev_disp
  2734  0271                     _check_dev_disp:
  2735  0271                     l2355:	
  2736                           ;incstack = 0
  2737                           ; Regs used in _check_dev_disp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2738                           
  2739                           
  2740                           ;Newmain.c: 287:  LCD_cmd(0x01);
  2741  0271  3001               	movlw	1
  2742  0272  120A  118A  274E  120A  118A  	fcall	_LCD_cmd
  2743                           
  2744                           ;Newmain.c: 288:  LCD_cmd(0x80);
  2745  0277  3080               	movlw	128
  2746  0278  120A  118A  274E  120A  118A  	fcall	_LCD_cmd
  2747                           
  2748                           ;Newmain.c: 289:  delay(100);
  2749  027D  3064               	movlw	100
  2750  027E  00F4               	movwf	delay@x
  2751  027F  3000               	movlw	0
  2752  0280  00F5               	movwf	delay@x+1
  2753  0281  120A  118A  27BC  120A  118A  	fcall	_delay
  2754  0286                     l2357:
  2755                           
  2756                           ;Newmain.c: 290:  RC0 = 1;
  2757  0286  1283               	bcf	3,5	;RP0=0, select bank0
  2758  0287  1303               	bcf	3,6	;RP1=0, select bank0
  2759  0288  1407               	bsf	7,0	;volatile
  2760                           
  2761                           ;Newmain.c: 291:  delay(100);
  2762  0289  3064               	movlw	100
  2763  028A  00F4               	movwf	delay@x
  2764  028B  3000               	movlw	0
  2765  028C  00F5               	movwf	delay@x+1
  2766  028D  120A  118A  27BC  120A  118A  	fcall	_delay
  2767                           
  2768                           ;Newmain.c: 292:  while( *d != '\0')
  2769  0292  2AC4               	goto	l2371
  2770  0293                     l213:
  2771                           
  2772                           ;Newmain.c: 293:  {;Newmain.c: 294:   RC1 = 1;
  2773  0293  1283               	bcf	3,5	;RP0=0, select bank0
  2774  0294  1303               	bcf	3,6	;RP1=0, select bank0
  2775  0295  1487               	bsf	7,1	;volatile
  2776  0296                     l2359:
  2777                           
  2778                           ;Newmain.c: 295:   delay(100);
  2779  0296  3064               	movlw	100
  2780  0297  00F4               	movwf	delay@x
  2781  0298  3000               	movlw	0
  2782  0299  00F5               	movwf	delay@x+1
  2783  029A  120A  118A  27BC  120A  118A  	fcall	_delay
  2784  029F                     l2361:
  2785                           
  2786                           ;Newmain.c: 296:   PORTB = *d;
  2787  029F  0879               	movf	_d,w
  2788  02A0  0084               	movwf	4
  2789  02A1  120A  118A  2400  120A  118A  	fcall	stringdir
  2790  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2791  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2792  02A8  0086               	movwf	6	;volatile
  2793  02A9                     l2363:
  2794                           
  2795                           ;Newmain.c: 297:   delay(100);
  2796  02A9  3064               	movlw	100
  2797  02AA  00F4               	movwf	delay@x
  2798  02AB  3000               	movlw	0
  2799  02AC  00F5               	movwf	delay@x+1
  2800  02AD  120A  118A  27BC  120A  118A  	fcall	_delay
  2801  02B2                     l2365:
  2802                           
  2803                           ;Newmain.c: 298:   RC1 = 0;
  2804  02B2  1283               	bcf	3,5	;RP0=0, select bank0
  2805  02B3  1303               	bcf	3,6	;RP1=0, select bank0
  2806  02B4  1087               	bcf	7,1	;volatile
  2807  02B5                     l2367:
  2808                           
  2809                           ;Newmain.c: 299:   delay(100);
  2810  02B5  3064               	movlw	100
  2811  02B6  00F4               	movwf	delay@x
  2812  02B7  3000               	movlw	0
  2813  02B8  00F5               	movwf	delay@x+1
  2814  02B9  120A  118A  27BC  120A  118A  	fcall	_delay
  2815  02BE                     l2369:
  2816                           
  2817                           ;Newmain.c: 300:   d++;
  2818  02BE  3001               	movlw	1
  2819  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  2820  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  2821  02C1  00A4               	movwf	??_check_dev_disp
  2822  02C2  0824               	movf	??_check_dev_disp,w
  2823  02C3  07F9               	addwf	_d,f
  2824  02C4                     l2371:
  2825                           
  2826                           ;Newmain.c: 292:  while( *d != '\0')
  2827  02C4  0879               	movf	_d,w
  2828  02C5  0084               	movwf	4
  2829  02C6  120A  118A  2400  120A  118A  	fcall	stringdir
  2830  02CB  3A00               	xorlw	0
  2831  02CC  1D03               	skipz
  2832  02CD  2ACF               	goto	u2041
  2833  02CE  2AD0               	goto	u2040
  2834  02CF                     u2041:
  2835  02CF  2A93               	goto	l213
  2836  02D0                     u2040:
  2837  02D0                     l2373:
  2838                           
  2839                           ;Newmain.c: 302:  delay(65000);
  2840  02D0  30E8               	movlw	232
  2841  02D1  00F4               	movwf	delay@x
  2842  02D2  30FD               	movlw	253
  2843  02D3  00F5               	movwf	delay@x+1
  2844  02D4  120A  118A  27BC  120A  118A  	fcall	_delay
  2845                           
  2846                           ;Newmain.c: 303:  (check_dev() ? no_dev_disp() : dev_found_disp());
  2847  02D9  120A  118A  26A8  120A  118A  	fcall	_check_dev
  2848  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  2849  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  2850  02E0  0820               	movf	?_check_dev,w
  2851  02E1  0421               	iorwf	?_check_dev+1,w
  2852  02E2  1903               	btfsc	3,2
  2853  02E3  2AE5               	goto	u2051
  2854  02E4  2AE6               	goto	u2050
  2855  02E5                     u2051:
  2856  02E5  2AEC               	goto	l2377
  2857  02E6                     u2050:
  2858  02E6                     l2375:
  2859  02E6  120A  118A  24AF  120A  118A  	fcall	_no_dev_disp
  2860  02EB  2AF1               	goto	l219
  2861  02EC                     l2377:
  2862  02EC  120A  118A  254F  120A  118A  	fcall	_dev_found_disp
  2863  02F1                     l219:
  2864  02F1  0008               	return
  2865  02F2                     __end_of_check_dev_disp:
  2866                           
  2867                           	psect	text15
  2868  04AF                     __ptext15:	
  2869 ;; *************** function _no_dev_disp *****************
  2870 ;; Defined at:
  2871 ;;		line 86 in file "Newmain.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;		None
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;		None
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      void 
  2878 ;; Registers used:
  2879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2885 ;;      Params:         0       0       0       0       0
  2886 ;;      Locals:         0       0       0       0       0
  2887 ;;      Temps:          0       1       0       0       0
  2888 ;;      Totals:         0       1       0       0       0
  2889 ;;Total ram usage:        1 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; Hardware stack levels required when called:    3
  2892 ;; This function calls:
  2893 ;;		_LCD_cmd
  2894 ;;		_delay
  2895 ;; This function is called by:
  2896 ;;		_check_dev_disp
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           
  2901                           ;psect for function _no_dev_disp
  2902  04AF                     _no_dev_disp:
  2903  04AF                     l2079:	
  2904                           ;incstack = 0
  2905                           ; Regs used in _no_dev_disp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2906                           
  2907                           
  2908                           ;Newmain.c: 88:  LCD_cmd(0xc0);
  2909  04AF  30C0               	movlw	192
  2910  04B0  120A  118A  274E  120A  118A  	fcall	_LCD_cmd
  2911                           
  2912                           ;Newmain.c: 89:  delay(100);
  2913  04B5  3064               	movlw	100
  2914  04B6  00F4               	movwf	delay@x
  2915  04B7  3000               	movlw	0
  2916  04B8  00F5               	movwf	delay@x+1
  2917  04B9  120A  118A  27BC  120A  118A  	fcall	_delay
  2918  04BE                     l2081:
  2919                           
  2920                           ;Newmain.c: 90:  RC0 = 1;
  2921  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  2922  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  2923  04C0  1407               	bsf	7,0	;volatile
  2924                           
  2925                           ;Newmain.c: 91:  while( *d2 != '\0')
  2926  04C1  2CF1               	goto	l2095
  2927  04C2                     l122:
  2928                           
  2929                           ;Newmain.c: 92:  {;Newmain.c: 93:   RC1 = 1;
  2930  04C2  1487               	bsf	7,1	;volatile
  2931  04C3                     l2083:
  2932                           
  2933                           ;Newmain.c: 94:   delay(100);
  2934  04C3  3064               	movlw	100
  2935  04C4  00F4               	movwf	delay@x
  2936  04C5  3000               	movlw	0
  2937  04C6  00F5               	movwf	delay@x+1
  2938  04C7  120A  118A  27BC  120A  118A  	fcall	_delay
  2939  04CC                     l2085:
  2940                           
  2941                           ;Newmain.c: 95:   PORTB = *d2;
  2942  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  2943  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  2944  04CE  0845               	movf	_d2,w
  2945  04CF  0084               	movwf	4
  2946  04D0  120A  118A  2400  120A  118A  	fcall	stringdir
  2947  04D5  0086               	movwf	6	;volatile
  2948  04D6                     l2087:
  2949                           
  2950                           ;Newmain.c: 96:   delay(100);
  2951  04D6  3064               	movlw	100
  2952  04D7  00F4               	movwf	delay@x
  2953  04D8  3000               	movlw	0
  2954  04D9  00F5               	movwf	delay@x+1
  2955  04DA  120A  118A  27BC  120A  118A  	fcall	_delay
  2956  04DF                     l2089:
  2957                           
  2958                           ;Newmain.c: 97:   RC1 = 0;
  2959  04DF  1283               	bcf	3,5	;RP0=0, select bank0
  2960  04E0  1303               	bcf	3,6	;RP1=0, select bank0
  2961  04E1  1087               	bcf	7,1	;volatile
  2962  04E2                     l2091:
  2963                           
  2964                           ;Newmain.c: 98:   delay(100);
  2965  04E2  3064               	movlw	100
  2966  04E3  00F4               	movwf	delay@x
  2967  04E4  3000               	movlw	0
  2968  04E5  00F5               	movwf	delay@x+1
  2969  04E6  120A  118A  27BC  120A  118A  	fcall	_delay
  2970  04EB                     l2093:
  2971                           
  2972                           ;Newmain.c: 99:   *d2++;
  2973  04EB  3001               	movlw	1
  2974  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  2975  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  2976  04EE  00A1               	movwf	??_no_dev_disp
  2977  04EF  0821               	movf	??_no_dev_disp,w
  2978  04F0  07C5               	addwf	_d2,f
  2979  04F1                     l2095:
  2980                           
  2981                           ;Newmain.c: 91:  while( *d2 != '\0')
  2982  04F1  0845               	movf	_d2,w
  2983  04F2  0084               	movwf	4
  2984  04F3  120A  118A  2400  120A  118A  	fcall	stringdir
  2985  04F8  3A00               	xorlw	0
  2986  04F9  1D03               	skipz
  2987  04FA  2CFC               	goto	u1641
  2988  04FB  2CFD               	goto	u1640
  2989  04FC                     u1641:
  2990  04FC  2CC2               	goto	l122
  2991  04FD                     u1640:
  2992  04FD                     l124:	
  2993                           ;Newmain.c: 101:  while(1);
  2994                           
  2995  04FD  2CFD               	goto	l124
  2996  04FE  0008               	return
  2997  04FF                     __end_of_no_dev_disp:
  2998                           
  2999                           	psect	text16
  3000  054F                     __ptext16:	
  3001 ;; *************** function _dev_found_disp *****************
  3002 ;; Defined at:
  3003 ;;		line 104 in file "Newmain.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;		None
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3017 ;;      Params:         0       0       0       0       0
  3018 ;;      Locals:         0       0       0       0       0
  3019 ;;      Temps:          0       1       0       0       0
  3020 ;;      Totals:         0       1       0       0       0
  3021 ;;Total ram usage:        1 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; Hardware stack levels required when called:    3
  3024 ;; This function calls:
  3025 ;;		_LCD_cmd
  3026 ;;		_delay
  3027 ;; This function is called by:
  3028 ;;		_check_dev_disp
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           
  3033                           ;psect for function _dev_found_disp
  3034  054F                     _dev_found_disp:
  3035  054F                     l2097:	
  3036                           ;incstack = 0
  3037                           ; Regs used in _dev_found_disp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3038                           
  3039                           
  3040                           ;Newmain.c: 106:  LCD_cmd(0xc0);
  3041  054F  30C0               	movlw	192
  3042  0550  120A  118A  274E  120A  118A  	fcall	_LCD_cmd
  3043                           
  3044                           ;Newmain.c: 107:  delay(100);
  3045  0555  3064               	movlw	100
  3046  0556  00F4               	movwf	delay@x
  3047  0557  3000               	movlw	0
  3048  0558  00F5               	movwf	delay@x+1
  3049  0559  120A  118A  27BC  120A  118A  	fcall	_delay
  3050  055E                     l2099:
  3051                           
  3052                           ;Newmain.c: 108:  RC0 = 1;
  3053  055E  1283               	bcf	3,5	;RP0=0, select bank0
  3054  055F  1303               	bcf	3,6	;RP1=0, select bank0
  3055  0560  1407               	bsf	7,0	;volatile
  3056                           
  3057                           ;Newmain.c: 109:  while(*d1 != '\0')
  3058  0561  2D91               	goto	l2113
  3059  0562                     l131:
  3060                           
  3061                           ;Newmain.c: 110:  {;Newmain.c: 111:   RC1 = 1;
  3062  0562  1487               	bsf	7,1	;volatile
  3063  0563                     l2101:
  3064                           
  3065                           ;Newmain.c: 112:   delay(100);
  3066  0563  3064               	movlw	100
  3067  0564  00F4               	movwf	delay@x
  3068  0565  3000               	movlw	0
  3069  0566  00F5               	movwf	delay@x+1
  3070  0567  120A  118A  27BC  120A  118A  	fcall	_delay
  3071  056C                     l2103:
  3072                           
  3073                           ;Newmain.c: 113:   PORTB = *d1;
  3074  056C  0878               	movf	_d1,w
  3075  056D  0084               	movwf	4
  3076  056E  120A  118A  2400  120A  118A  	fcall	stringdir
  3077  0573  1283               	bcf	3,5	;RP0=0, select bank0
  3078  0574  1303               	bcf	3,6	;RP1=0, select bank0
  3079  0575  0086               	movwf	6	;volatile
  3080  0576                     l2105:
  3081                           
  3082                           ;Newmain.c: 114:   delay(100);
  3083  0576  3064               	movlw	100
  3084  0577  00F4               	movwf	delay@x
  3085  0578  3000               	movlw	0
  3086  0579  00F5               	movwf	delay@x+1
  3087  057A  120A  118A  27BC  120A  118A  	fcall	_delay
  3088  057F                     l2107:
  3089                           
  3090                           ;Newmain.c: 115:   RC1 = 0;
  3091  057F  1283               	bcf	3,5	;RP0=0, select bank0
  3092  0580  1303               	bcf	3,6	;RP1=0, select bank0
  3093  0581  1087               	bcf	7,1	;volatile
  3094  0582                     l2109:
  3095                           
  3096                           ;Newmain.c: 116:   delay(100);
  3097  0582  3064               	movlw	100
  3098  0583  00F4               	movwf	delay@x
  3099  0584  3000               	movlw	0
  3100  0585  00F5               	movwf	delay@x+1
  3101  0586  120A  118A  27BC  120A  118A  	fcall	_delay
  3102  058B                     l2111:
  3103                           
  3104                           ;Newmain.c: 117:   *d1++;
  3105  058B  3001               	movlw	1
  3106  058C  1283               	bcf	3,5	;RP0=0, select bank0
  3107  058D  1303               	bcf	3,6	;RP1=0, select bank0
  3108  058E  00A1               	movwf	??_dev_found_disp
  3109  058F  0821               	movf	??_dev_found_disp,w
  3110  0590  07F8               	addwf	_d1,f
  3111  0591                     l2113:
  3112                           
  3113                           ;Newmain.c: 109:  while(*d1 != '\0')
  3114  0591  0878               	movf	_d1,w
  3115  0592  0084               	movwf	4
  3116  0593  120A  118A  2400  120A  118A  	fcall	stringdir
  3117  0598  3A00               	xorlw	0
  3118  0599  1D03               	skipz
  3119  059A  2D9C               	goto	u1651
  3120  059B  2D9D               	goto	u1650
  3121  059C                     u1651:
  3122  059C  2D62               	goto	l131
  3123  059D                     u1650:
  3124  059D                     l133:
  3125  059D  0008               	return
  3126  059E                     __end_of_dev_found_disp:
  3127                           
  3128                           	psect	text17
  3129  06A8                     __ptext17:	
  3130 ;; *************** function _check_dev *****************
  3131 ;; Defined at:
  3132 ;;		line 269 in file "Newmain.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;		None
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;		None
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  2    0[BANK0 ] int 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0, pclath, cstack
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3146 ;;      Params:         0       2       0       0       0
  3147 ;;      Locals:         0       0       0       0       0
  3148 ;;      Temps:          0       2       0       0       0
  3149 ;;      Totals:         0       4       0       0       0
  3150 ;;Total ram usage:        4 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    3
  3153 ;; This function calls:
  3154 ;;		_delay
  3155 ;;		_i2c_send
  3156 ;; This function is called by:
  3157 ;;		_check_dev_disp
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           
  3162                           ;psect for function _check_dev
  3163  06A8                     _check_dev:
  3164  06A8                     l2115:	
  3165                           ;incstack = 0
  3166                           ; Regs used in _check_dev: [wreg+status,2+status,0+pclath+cstack]
  3167                           
  3168                           
  3169                           ;Newmain.c: 271:  SEN = 1;
  3170  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  3171  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  3172  06AA  1411               	bsf	17,0	;volatile
  3173  06AB                     l202:	
  3174                           ;Newmain.c: 272:  while(SEN);
  3175                           
  3176  06AB  1811               	btfsc	17,0	;volatile
  3177  06AC  2EAE               	goto	u1661
  3178  06AD  2EAF               	goto	u1660
  3179  06AE                     u1661:
  3180  06AE  2EAB               	goto	l202
  3181  06AF                     u1660:
  3182  06AF                     l2117:
  3183                           
  3184                           ;Newmain.c: 273:  i2c_send(0b10010000);
  3185  06AF  3090               	movlw	144
  3186  06B0  120A  118A  27AB  120A  118A  	fcall	_i2c_send
  3187  06B5                     l2119:
  3188                           
  3189                           ;Newmain.c: 274:  if(ACKSTAT)
  3190  06B5  1683               	bsf	3,5	;RP0=1, select bank1
  3191  06B6  1303               	bcf	3,6	;RP1=0, select bank1
  3192  06B7  1F11               	btfss	17,6	;volatile
  3193  06B8  2EBA               	goto	u1671
  3194  06B9  2EBB               	goto	u1670
  3195  06BA                     u1671:
  3196  06BA  2EBE               	goto	l205
  3197  06BB                     u1670:
  3198  06BB                     l2121:
  3199                           
  3200                           ;Newmain.c: 275:  {;Newmain.c: 276:   RC2 = 1;
  3201  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  3202  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  3203  06BD  1507               	bsf	7,2	;volatile
  3204  06BE                     l205:	
  3205                           ;Newmain.c: 277:  }
  3206                           
  3207                           
  3208                           ;Newmain.c: 278:  PEN = 1;
  3209  06BE  1683               	bsf	3,5	;RP0=1, select bank1
  3210  06BF  1303               	bcf	3,6	;RP1=0, select bank1
  3211  06C0  1511               	bsf	17,2	;volatile
  3212  06C1                     l206:	
  3213                           ;Newmain.c: 279:  while(PEN);
  3214                           
  3215  06C1  1911               	btfsc	17,2	;volatile
  3216  06C2  2EC4               	goto	u1681
  3217  06C3  2EC5               	goto	u1680
  3218  06C4                     u1681:
  3219  06C4  2EC1               	goto	l206
  3220  06C5                     u1680:
  3221  06C5                     l2123:
  3222                           
  3223                           ;Newmain.c: 280:  delay(65000);
  3224  06C5  30E8               	movlw	232
  3225  06C6  00F4               	movwf	delay@x
  3226  06C7  30FD               	movlw	253
  3227  06C8  00F5               	movwf	delay@x+1
  3228  06C9  120A  118A  27BC  120A  118A  	fcall	_delay
  3229  06CE                     l2125:
  3230                           
  3231                           ;Newmain.c: 281:  return RC2;
  3232  06CE  1003               	clrc
  3233  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  3234  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  3235  06D1  1907               	btfsc	7,2	;volatile
  3236  06D2  1403               	setc
  3237  06D3  3000               	movlw	0
  3238  06D4  1803               	skipnc
  3239  06D5  3001               	movlw	1
  3240  06D6  00A2               	movwf	??_check_dev
  3241  06D7  01A3               	clrf	??_check_dev+1
  3242  06D8  0822               	movf	??_check_dev,w
  3243  06D9  00A0               	movwf	?_check_dev
  3244  06DA  0823               	movf	??_check_dev+1,w
  3245  06DB  00A1               	movwf	?_check_dev+1
  3246  06DC                     l209:
  3247  06DC  0008               	return
  3248  06DD                     __end_of_check_dev:
  3249                           
  3250                           	psect	text18
  3251  07AB                     __ptext18:	
  3252 ;; *************** function _i2c_send *****************
  3253 ;; Defined at:
  3254 ;;		line 185 in file "Newmain.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;  c               1    wreg     unsigned char 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;  c               1    4[COMMON] unsigned char 
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  1    wreg      unsigned char 
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0, pclath, cstack
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3268 ;;      Params:         0       0       0       0       0
  3269 ;;      Locals:         1       0       0       0       0
  3270 ;;      Temps:          0       0       0       0       0
  3271 ;;      Totals:         1       0       0       0       0
  3272 ;;Total ram usage:        1 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; Hardware stack levels required when called:    2
  3275 ;; This function calls:
  3276 ;;		_i2c_wait
  3277 ;; This function is called by:
  3278 ;;		_check_dev
  3279 ;;		_main
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           
  3284                           ;psect for function _i2c_send
  3285  07AB                     _i2c_send:
  3286                           
  3287                           ;incstack = 0
  3288                           ; Regs used in _i2c_send: [wreg+status,2+status,0+pclath+cstack]
  3289                           ;i2c_send@c stored from wreg
  3290  07AB  00F4               	movwf	i2c_send@c
  3291  07AC                     l1507:
  3292                           
  3293                           ;Newmain.c: 185: unsigned char i2c_send(unsigned char c);Newmain.c: 186: {;Newmain.c: 18
      +                          7:  SSPBUF = c;
  3294  07AC  0874               	movf	i2c_send@c,w
  3295  07AD  1283               	bcf	3,5	;RP0=0, select bank0
  3296  07AE  1303               	bcf	3,6	;RP1=0, select bank0
  3297  07AF  0093               	movwf	19	;volatile
  3298  07B0                     l178:	
  3299                           ;Newmain.c: 188:  while(BF);
  3300                           
  3301  07B0  1683               	bsf	3,5	;RP0=1, select bank1
  3302  07B1  1303               	bcf	3,6	;RP1=0, select bank1
  3303  07B2  1814               	btfsc	20,0	;volatile
  3304  07B3  2FB5               	goto	u791
  3305  07B4  2FB6               	goto	u790
  3306  07B5                     u791:
  3307  07B5  2FB0               	goto	l178
  3308  07B6                     u790:
  3309  07B6                     l1509:
  3310                           
  3311                           ;Newmain.c: 189:  i2c_wait();
  3312  07B6  120A  118A  27F4  120A  118A  	fcall	_i2c_wait
  3313  07BB                     l181:
  3314  07BB  0008               	return
  3315  07BC                     __end_of_i2c_send:
  3316                           
  3317                           	psect	text19
  3318  07F4                     __ptext19:	
  3319 ;; *************** function _i2c_wait *****************
  3320 ;; Defined at:
  3321 ;;		line 152 in file "Newmain.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;		None
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;		None
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  1    wreg      void 
  3328 ;; Registers used:
  3329 ;;		None
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/0
  3332 ;;		On exit  : 0/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3335 ;;      Params:         0       0       0       0       0
  3336 ;;      Locals:         0       0       0       0       0
  3337 ;;      Temps:          0       0       0       0       0
  3338 ;;      Totals:         0       0       0       0       0
  3339 ;;Total ram usage:        0 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    1
  3342 ;; This function calls:
  3343 ;;		Nothing
  3344 ;; This function is called by:
  3345 ;;		_i2c_stop
  3346 ;;		_i2c_send
  3347 ;;		_main
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           
  3352                           ;psect for function _i2c_wait
  3353  07F4                     _i2c_wait:
  3354  07F4                     l1495:	
  3355                           ;incstack = 0
  3356                           ; Regs used in _i2c_wait: []
  3357                           
  3358  07F4                     l148:	
  3359                           ;Newmain.c: 154:  while(SSPIF==0);
  3360                           
  3361  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  3362  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  3363  07F6  1D8C               	btfss	12,3	;volatile
  3364  07F7  2FF9               	goto	u781
  3365  07F8  2FFA               	goto	u780
  3366  07F9                     u781:
  3367  07F9  2FF4               	goto	l148
  3368  07FA                     u780:
  3369  07FA                     l150:
  3370                           
  3371                           ;Newmain.c: 155:  SSPIF = 0;
  3372  07FA  118C               	bcf	12,3	;volatile
  3373  07FB                     l151:
  3374  07FB  0008               	return
  3375  07FC                     __end_of_i2c_wait:
  3376                           
  3377                           	psect	text20
  3378  06DD                     __ptext20:	
  3379 ;; *************** function _LCD_init *****************
  3380 ;; Defined at:
  3381 ;;		line 226 in file "Newmain.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;		None
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;		None
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      void 
  3388 ;; Registers used:
  3389 ;;		wreg, status,2, status,0, pclath, cstack
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3395 ;;      Params:         0       0       0       0       0
  3396 ;;      Locals:         0       0       0       0       0
  3397 ;;      Temps:          0       0       0       0       0
  3398 ;;      Totals:         0       0       0       0       0
  3399 ;;Total ram usage:        0 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    3
  3402 ;; This function calls:
  3403 ;;		_LCD_cmd
  3404 ;;		_delay
  3405 ;; This function is called by:
  3406 ;;		_main
  3407 ;; This function uses a non-reentrant model
  3408 ;;
  3409                           
  3410                           
  3411                           ;psect for function _LCD_init
  3412  06DD                     _LCD_init:
  3413  06DD                     l2321:	
  3414                           ;incstack = 0
  3415                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  3416                           
  3417                           
  3418                           ;Newmain.c: 228:  TRISB = 0x00;
  3419  06DD  1683               	bsf	3,5	;RP0=1, select bank1
  3420  06DE  1303               	bcf	3,6	;RP1=0, select bank1
  3421  06DF  0186               	clrf	6	;volatile
  3422                           
  3423                           ;Newmain.c: 229:  PORTB = 0x00;
  3424  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  3425  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  3426  06E2  0186               	clrf	6	;volatile
  3427  06E3                     l2323:
  3428                           
  3429                           ;Newmain.c: 230:  TRISC0 = 0;
  3430  06E3  1683               	bsf	3,5	;RP0=1, select bank1
  3431  06E4  1303               	bcf	3,6	;RP1=0, select bank1
  3432  06E5  1007               	bcf	7,0	;volatile
  3433  06E6                     l2325:
  3434                           
  3435                           ;Newmain.c: 231:  TRISC1 = 0;
  3436  06E6  1087               	bcf	7,1	;volatile
  3437  06E7                     l2327:
  3438                           
  3439                           ;Newmain.c: 232:  delay(200);
  3440  06E7  30C8               	movlw	200
  3441  06E8  00F4               	movwf	delay@x
  3442  06E9  3000               	movlw	0
  3443  06EA  00F5               	movwf	delay@x+1
  3444  06EB  120A  118A  27BC  120A  118A  	fcall	_delay
  3445  06F0                     l2329:
  3446                           
  3447                           ;Newmain.c: 233:  LCD_cmd(0x0c);
  3448  06F0  300C               	movlw	12
  3449  06F1  120A  118A  274E  120A  118A  	fcall	_LCD_cmd
  3450  06F6                     l2331:
  3451                           
  3452                           ;Newmain.c: 234:  LCD_cmd(0x06);
  3453  06F6  3006               	movlw	6
  3454  06F7  120A  118A  274E  120A  118A  	fcall	_LCD_cmd
  3455  06FC                     l2333:
  3456                           
  3457                           ;Newmain.c: 235:  LCD_cmd(0x38);
  3458  06FC  3038               	movlw	56
  3459  06FD  120A  118A  274E  120A  118A  	fcall	_LCD_cmd
  3460  0702                     l2335:
  3461                           
  3462                           ;Newmain.c: 236:  LCD_cmd(0x80);
  3463  0702  3080               	movlw	128
  3464  0703  120A  118A  274E  120A  118A  	fcall	_LCD_cmd
  3465  0708                     l190:
  3466  0708  0008               	return
  3467  0709                     __end_of_LCD_init:
  3468                           
  3469                           	psect	text21
  3470  074E                     __ptext21:	
  3471 ;; *************** function _LCD_cmd *****************
  3472 ;; Defined at:
  3473 ;;		line 65 in file "Newmain.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  y               1    wreg     unsigned char 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  y               1    0[BANK0 ] unsigned char 
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, status,2, status,0, pclath, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3487 ;;      Params:         0       0       0       0       0
  3488 ;;      Locals:         0       1       0       0       0
  3489 ;;      Temps:          0       0       0       0       0
  3490 ;;      Totals:         0       1       0       0       0
  3491 ;;Total ram usage:        1 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    2
  3494 ;; This function calls:
  3495 ;;		_delay
  3496 ;; This function is called by:
  3497 ;;		_no_dev_disp
  3498 ;;		_dev_found_disp
  3499 ;;		_temp_disp
  3500 ;;		_LCD_init
  3501 ;;		_i2c_init_disp
  3502 ;;		_check_dev_disp
  3503 ;;		_main
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           
  3508                           ;psect for function _LCD_cmd
  3509  074E                     _LCD_cmd:
  3510                           
  3511                           ;incstack = 0
  3512                           ; Regs used in _LCD_cmd: [wreg+status,2+status,0+pclath+cstack]
  3513                           ;LCD_cmd@y stored from wreg
  3514  074E  1283               	bcf	3,5	;RP0=0, select bank0
  3515  074F  1303               	bcf	3,6	;RP1=0, select bank0
  3516  0750  00A0               	movwf	LCD_cmd@y
  3517  0751                     l2019:
  3518                           
  3519                           ;Newmain.c: 65: void LCD_cmd(char y);Newmain.c: 66: {;Newmain.c: 67:  RC0 = 0;
  3520  0751  1007               	bcf	7,0	;volatile
  3521                           
  3522                           ;Newmain.c: 68:  RC1 = 1;
  3523  0752  1487               	bsf	7,1	;volatile
  3524  0753                     l2021:
  3525                           
  3526                           ;Newmain.c: 69:  PORTB = y;
  3527  0753  0820               	movf	LCD_cmd@y,w
  3528  0754  0086               	movwf	6	;volatile
  3529  0755                     l2023:
  3530                           
  3531                           ;Newmain.c: 70:  delay(100);
  3532  0755  3064               	movlw	100
  3533  0756  00F4               	movwf	delay@x
  3534  0757  3000               	movlw	0
  3535  0758  00F5               	movwf	delay@x+1
  3536  0759  120A  118A  27BC  120A  118A  	fcall	_delay
  3537  075E                     l2025:
  3538                           
  3539                           ;Newmain.c: 71:     RC1 = 0;
  3540  075E  1283               	bcf	3,5	;RP0=0, select bank0
  3541  075F  1303               	bcf	3,6	;RP1=0, select bank0
  3542  0760  1087               	bcf	7,1	;volatile
  3543  0761                     l2027:
  3544                           
  3545                           ;Newmain.c: 72:     delay(100);
  3546  0761  3064               	movlw	100
  3547  0762  00F4               	movwf	delay@x
  3548  0763  3000               	movlw	0
  3549  0764  00F5               	movwf	delay@x+1
  3550  0765  120A  118A  27BC  120A  118A  	fcall	_delay
  3551  076A                     l115:
  3552  076A  0008               	return
  3553  076B                     __end_of_LCD_cmd:
  3554                           
  3555                           	psect	text22
  3556  04FF                     __ptext22:	
  3557 ;; *************** function _LCD_disp *****************
  3558 ;; Defined at:
  3559 ;;		line 240 in file "Newmain.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  y               1    wreg     unsigned char 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  y               1   10[BANK0 ] unsigned char 
  3564 ;;  temp            2   11[BANK0 ] int 
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  1    wreg      void 
  3567 ;; Registers used:
  3568 ;;		wreg, status,2, status,0, pclath, cstack
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3574 ;;      Params:         0       0       0       0       0
  3575 ;;      Locals:         0       3       0       0       0
  3576 ;;      Temps:          0       2       0       0       0
  3577 ;;      Totals:         0       5       0       0       0
  3578 ;;Total ram usage:        5 bytes
  3579 ;; Hardware stack levels used:    1
  3580 ;; Hardware stack levels required when called:    3
  3581 ;; This function calls:
  3582 ;;		_LCD_data
  3583 ;;		___awdiv
  3584 ;;		___awmod
  3585 ;;		_delay
  3586 ;; This function is called by:
  3587 ;;		_main
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           
  3592                           ;psect for function _LCD_disp
  3593  04FF                     _LCD_disp:
  3594                           
  3595                           ;incstack = 0
  3596                           ; Regs used in _LCD_disp: [wreg+status,2+status,0+pclath+cstack]
  3597                           ;LCD_disp@y stored from wreg
  3598  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  3599  0500  1303               	bcf	3,6	;RP1=0, select bank0
  3600  0501  00AA               	movwf	LCD_disp@y
  3601  0502                     l2337:
  3602                           
  3603                           ;Newmain.c: 240: void LCD_disp(unsigned char y);Newmain.c: 241: {;Newmain.c: 242:  int t
      +                          emp = y/10;
  3604  0502  300A               	movlw	10
  3605  0503  00A0               	movwf	___awdiv@divisor
  3606  0504  3000               	movlw	0
  3607  0505  00A1               	movwf	___awdiv@divisor+1
  3608  0506  082A               	movf	LCD_disp@y,w
  3609  0507  00A8               	movwf	??_LCD_disp
  3610  0508  01A9               	clrf	??_LCD_disp+1
  3611  0509  0828               	movf	??_LCD_disp,w
  3612  050A  00A2               	movwf	___awdiv@dividend
  3613  050B  0829               	movf	??_LCD_disp+1,w
  3614  050C  00A3               	movwf	___awdiv@dividend+1
  3615  050D  120A  118A  22F2  120A  118A  	fcall	___awdiv
  3616  0512  1283               	bcf	3,5	;RP0=0, select bank0
  3617  0513  1303               	bcf	3,6	;RP1=0, select bank0
  3618  0514  0821               	movf	?___awdiv+1,w
  3619  0515  00AC               	movwf	LCD_disp@temp+1
  3620  0516  0820               	movf	?___awdiv,w
  3621  0517  00AB               	movwf	LCD_disp@temp
  3622                           
  3623                           ;Newmain.c: 243:  LCD_data(temp);
  3624  0518  082B               	movf	LCD_disp@temp,w
  3625  0519  120A  118A  2730  120A  118A  	fcall	_LCD_data
  3626                           
  3627                           ;Newmain.c: 244:  delay(100);
  3628  051E  3064               	movlw	100
  3629  051F  00F4               	movwf	delay@x
  3630  0520  3000               	movlw	0
  3631  0521  00F5               	movwf	delay@x+1
  3632  0522  120A  118A  27BC  120A  118A  	fcall	_delay
  3633                           
  3634                           ;Newmain.c: 245:  temp = y%10;
  3635  0527  300A               	movlw	10
  3636  0528  1283               	bcf	3,5	;RP0=0, select bank0
  3637  0529  1303               	bcf	3,6	;RP1=0, select bank0
  3638  052A  00A0               	movwf	___awmod@divisor
  3639  052B  3000               	movlw	0
  3640  052C  00A1               	movwf	___awmod@divisor+1
  3641  052D  082A               	movf	LCD_disp@y,w
  3642  052E  00A8               	movwf	??_LCD_disp
  3643  052F  01A9               	clrf	??_LCD_disp+1
  3644  0530  0828               	movf	??_LCD_disp,w
  3645  0531  00A2               	movwf	___awmod@dividend
  3646  0532  0829               	movf	??_LCD_disp+1,w
  3647  0533  00A3               	movwf	___awmod@dividend+1
  3648  0534  120A  118A  235B  120A  118A  	fcall	___awmod
  3649  0539  1283               	bcf	3,5	;RP0=0, select bank0
  3650  053A  1303               	bcf	3,6	;RP1=0, select bank0
  3651  053B  0821               	movf	?___awmod+1,w
  3652  053C  00AC               	movwf	LCD_disp@temp+1
  3653  053D  0820               	movf	?___awmod,w
  3654  053E  00AB               	movwf	LCD_disp@temp
  3655                           
  3656                           ;Newmain.c: 246:  LCD_data(temp);
  3657  053F  082B               	movf	LCD_disp@temp,w
  3658  0540  120A  118A  2730  120A  118A  	fcall	_LCD_data
  3659                           
  3660                           ;Newmain.c: 247:  delay(100);
  3661  0545  3064               	movlw	100
  3662  0546  00F4               	movwf	delay@x
  3663  0547  3000               	movlw	0
  3664  0548  00F5               	movwf	delay@x+1
  3665  0549  120A  118A  27BC  120A  118A  	fcall	_delay
  3666  054E                     l193:
  3667  054E  0008               	return
  3668  054F                     __end_of_LCD_disp:
  3669                           
  3670                           	psect	text23
  3671  035B                     __ptext23:	
  3672 ;; *************** function ___awmod *****************
  3673 ;; Defined at:
  3674 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;  divisor         2    0[BANK0 ] int 
  3677 ;;  dividend        2    2[BANK0 ] int 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  sign            1    5[BANK0 ] unsigned char 
  3680 ;;  counter         1    4[BANK0 ] unsigned char 
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  2    0[BANK0 ] int 
  3683 ;; Registers used:
  3684 ;;		wreg, status,2, status,0
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3690 ;;      Params:         0       4       0       0       0
  3691 ;;      Locals:         0       2       0       0       0
  3692 ;;      Temps:          1       0       0       0       0
  3693 ;;      Totals:         1       6       0       0       0
  3694 ;;Total ram usage:        7 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; Hardware stack levels required when called:    1
  3697 ;; This function calls:
  3698 ;;		Nothing
  3699 ;; This function is called by:
  3700 ;;		_LCD_disp
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           
  3705                           ;psect for function ___awmod
  3706  035B                     ___awmod:
  3707  035B                     l2265:	
  3708                           ;incstack = 0
  3709                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3710                           
  3711  035B  1283               	bcf	3,5	;RP0=0, select bank0
  3712  035C  1303               	bcf	3,6	;RP1=0, select bank0
  3713  035D  01A5               	clrf	___awmod@sign
  3714  035E                     l2267:
  3715  035E  1FA3               	btfss	___awmod@dividend+1,7
  3716  035F  2B61               	goto	u1931
  3717  0360  2B62               	goto	u1930
  3718  0361                     u1931:
  3719  0361  2B69               	goto	l2273
  3720  0362                     u1930:
  3721  0362                     l2269:
  3722  0362  09A2               	comf	___awmod@dividend,f
  3723  0363  09A3               	comf	___awmod@dividend+1,f
  3724  0364  0AA2               	incf	___awmod@dividend,f
  3725  0365  1903               	skipnz
  3726  0366  0AA3               	incf	___awmod@dividend+1,f
  3727  0367                     l2271:
  3728  0367  01A5               	clrf	___awmod@sign
  3729  0368  0AA5               	incf	___awmod@sign,f
  3730  0369                     l2273:
  3731  0369  1FA1               	btfss	___awmod@divisor+1,7
  3732  036A  2B6C               	goto	u1941
  3733  036B  2B6D               	goto	u1940
  3734  036C                     u1941:
  3735  036C  2B72               	goto	l2277
  3736  036D                     u1940:
  3737  036D                     l2275:
  3738  036D  09A0               	comf	___awmod@divisor,f
  3739  036E  09A1               	comf	___awmod@divisor+1,f
  3740  036F  0AA0               	incf	___awmod@divisor,f
  3741  0370  1903               	skipnz
  3742  0371  0AA1               	incf	___awmod@divisor+1,f
  3743  0372                     l2277:
  3744  0372  0820               	movf	___awmod@divisor,w
  3745  0373  0421               	iorwf	___awmod@divisor+1,w
  3746  0374  1903               	btfsc	3,2
  3747  0375  2B77               	goto	u1951
  3748  0376  2B78               	goto	u1950
  3749  0377                     u1951:
  3750  0377  2BA7               	goto	l2295
  3751  0378                     u1950:
  3752  0378                     l2279:
  3753  0378  01A4               	clrf	___awmod@counter
  3754  0379  0AA4               	incf	___awmod@counter,f
  3755  037A  2B86               	goto	l2285
  3756  037B                     l2281:
  3757  037B  3001               	movlw	1
  3758  037C                     u1965:
  3759  037C  1003               	clrc
  3760  037D  0DA0               	rlf	___awmod@divisor,f
  3761  037E  0DA1               	rlf	___awmod@divisor+1,f
  3762  037F  3EFF               	addlw	-1
  3763  0380  1D03               	skipz
  3764  0381  2B7C               	goto	u1965
  3765  0382                     l2283:
  3766  0382  3001               	movlw	1
  3767  0383  00F4               	movwf	??___awmod
  3768  0384  0874               	movf	??___awmod,w
  3769  0385  07A4               	addwf	___awmod@counter,f
  3770  0386                     l2285:
  3771  0386  1FA1               	btfss	___awmod@divisor+1,7
  3772  0387  2B89               	goto	u1971
  3773  0388  2B8A               	goto	u1970
  3774  0389                     u1971:
  3775  0389  2B7B               	goto	l2281
  3776  038A                     u1970:
  3777  038A                     l2287:
  3778  038A  0821               	movf	___awmod@divisor+1,w
  3779  038B  0223               	subwf	___awmod@dividend+1,w
  3780  038C  1D03               	skipz
  3781  038D  2B90               	goto	u1985
  3782  038E  0820               	movf	___awmod@divisor,w
  3783  038F  0222               	subwf	___awmod@dividend,w
  3784  0390                     u1985:
  3785  0390  1C03               	skipc
  3786  0391  2B93               	goto	u1981
  3787  0392  2B94               	goto	u1980
  3788  0393                     u1981:
  3789  0393  2B9A               	goto	l2291
  3790  0394                     u1980:
  3791  0394                     l2289:
  3792  0394  0820               	movf	___awmod@divisor,w
  3793  0395  02A2               	subwf	___awmod@dividend,f
  3794  0396  0821               	movf	___awmod@divisor+1,w
  3795  0397  1C03               	skipc
  3796  0398  03A3               	decf	___awmod@dividend+1,f
  3797  0399  02A3               	subwf	___awmod@dividend+1,f
  3798  039A                     l2291:
  3799  039A  3001               	movlw	1
  3800  039B                     u1995:
  3801  039B  1003               	clrc
  3802  039C  0CA1               	rrf	___awmod@divisor+1,f
  3803  039D  0CA0               	rrf	___awmod@divisor,f
  3804  039E  3EFF               	addlw	-1
  3805  039F  1D03               	skipz
  3806  03A0  2B9B               	goto	u1995
  3807  03A1                     l2293:
  3808  03A1  3001               	movlw	1
  3809  03A2  02A4               	subwf	___awmod@counter,f
  3810  03A3  1D03               	btfss	3,2
  3811  03A4  2BA6               	goto	u2001
  3812  03A5  2BA7               	goto	u2000
  3813  03A6                     u2001:
  3814  03A6  2B8A               	goto	l2287
  3815  03A7                     u2000:
  3816  03A7                     l2295:
  3817  03A7  0825               	movf	___awmod@sign,w
  3818  03A8  1903               	btfsc	3,2
  3819  03A9  2BAB               	goto	u2011
  3820  03AA  2BAC               	goto	u2010
  3821  03AB                     u2011:
  3822  03AB  2BB1               	goto	l2299
  3823  03AC                     u2010:
  3824  03AC                     l2297:
  3825  03AC  09A2               	comf	___awmod@dividend,f
  3826  03AD  09A3               	comf	___awmod@dividend+1,f
  3827  03AE  0AA2               	incf	___awmod@dividend,f
  3828  03AF  1903               	skipnz
  3829  03B0  0AA3               	incf	___awmod@dividend+1,f
  3830  03B1                     l2299:
  3831  03B1  0823               	movf	___awmod@dividend+1,w
  3832  03B2  00A1               	movwf	?___awmod+1
  3833  03B3  0822               	movf	___awmod@dividend,w
  3834  03B4  00A0               	movwf	?___awmod
  3835  03B5                     l560:
  3836  03B5  0008               	return
  3837  03B6                     __end_of___awmod:
  3838                           
  3839                           	psect	text24
  3840  02F2                     __ptext24:	
  3841 ;; *************** function ___awdiv *****************
  3842 ;; Defined at:
  3843 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;  divisor         2    0[BANK0 ] int 
  3846 ;;  dividend        2    2[BANK0 ] int 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;  quotient        2    6[BANK0 ] int 
  3849 ;;  sign            1    5[BANK0 ] unsigned char 
  3850 ;;  counter         1    4[BANK0 ] unsigned char 
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  2    0[BANK0 ] int 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3860 ;;      Params:         0       4       0       0       0
  3861 ;;      Locals:         0       4       0       0       0
  3862 ;;      Temps:          1       0       0       0       0
  3863 ;;      Totals:         1       8       0       0       0
  3864 ;;Total ram usage:        9 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; Hardware stack levels required when called:    1
  3867 ;; This function calls:
  3868 ;;		Nothing
  3869 ;; This function is called by:
  3870 ;;		_LCD_disp
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           
  3875                           ;psect for function ___awdiv
  3876  02F2                     ___awdiv:
  3877  02F2                     l2221:	
  3878                           ;incstack = 0
  3879                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3880                           
  3881  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  3882  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  3883  02F4  01A5               	clrf	___awdiv@sign
  3884  02F5                     l2223:
  3885  02F5  1FA1               	btfss	___awdiv@divisor+1,7
  3886  02F6  2AF8               	goto	u1831
  3887  02F7  2AF9               	goto	u1830
  3888  02F8                     u1831:
  3889  02F8  2B00               	goto	l2229
  3890  02F9                     u1830:
  3891  02F9                     l2225:
  3892  02F9  09A0               	comf	___awdiv@divisor,f
  3893  02FA  09A1               	comf	___awdiv@divisor+1,f
  3894  02FB  0AA0               	incf	___awdiv@divisor,f
  3895  02FC  1903               	skipnz
  3896  02FD  0AA1               	incf	___awdiv@divisor+1,f
  3897  02FE                     l2227:
  3898  02FE  01A5               	clrf	___awdiv@sign
  3899  02FF  0AA5               	incf	___awdiv@sign,f
  3900  0300                     l2229:
  3901  0300  1FA3               	btfss	___awdiv@dividend+1,7
  3902  0301  2B03               	goto	u1841
  3903  0302  2B04               	goto	u1840
  3904  0303                     u1841:
  3905  0303  2B0D               	goto	l2235
  3906  0304                     u1840:
  3907  0304                     l2231:
  3908  0304  09A2               	comf	___awdiv@dividend,f
  3909  0305  09A3               	comf	___awdiv@dividend+1,f
  3910  0306  0AA2               	incf	___awdiv@dividend,f
  3911  0307  1903               	skipnz
  3912  0308  0AA3               	incf	___awdiv@dividend+1,f
  3913  0309                     l2233:
  3914  0309  3001               	movlw	1
  3915  030A  00F4               	movwf	??___awdiv
  3916  030B  0874               	movf	??___awdiv,w
  3917  030C  06A5               	xorwf	___awdiv@sign,f
  3918  030D                     l2235:
  3919  030D  01A6               	clrf	___awdiv@quotient
  3920  030E  01A7               	clrf	___awdiv@quotient+1
  3921  030F                     l2237:
  3922  030F  0820               	movf	___awdiv@divisor,w
  3923  0310  0421               	iorwf	___awdiv@divisor+1,w
  3924  0311  1903               	btfsc	3,2
  3925  0312  2B14               	goto	u1851
  3926  0313  2B15               	goto	u1850
  3927  0314                     u1851:
  3928  0314  2B4C               	goto	l2257
  3929  0315                     u1850:
  3930  0315                     l2239:
  3931  0315  01A4               	clrf	___awdiv@counter
  3932  0316  0AA4               	incf	___awdiv@counter,f
  3933  0317  2B23               	goto	l2245
  3934  0318                     l2241:
  3935  0318  3001               	movlw	1
  3936  0319                     u1865:
  3937  0319  1003               	clrc
  3938  031A  0DA0               	rlf	___awdiv@divisor,f
  3939  031B  0DA1               	rlf	___awdiv@divisor+1,f
  3940  031C  3EFF               	addlw	-1
  3941  031D  1D03               	skipz
  3942  031E  2B19               	goto	u1865
  3943  031F                     l2243:
  3944  031F  3001               	movlw	1
  3945  0320  00F4               	movwf	??___awdiv
  3946  0321  0874               	movf	??___awdiv,w
  3947  0322  07A4               	addwf	___awdiv@counter,f
  3948  0323                     l2245:
  3949  0323  1FA1               	btfss	___awdiv@divisor+1,7
  3950  0324  2B26               	goto	u1871
  3951  0325  2B27               	goto	u1870
  3952  0326                     u1871:
  3953  0326  2B18               	goto	l2241
  3954  0327                     u1870:
  3955  0327                     l2247:
  3956  0327  3001               	movlw	1
  3957  0328                     u1885:
  3958  0328  1003               	clrc
  3959  0329  0DA6               	rlf	___awdiv@quotient,f
  3960  032A  0DA7               	rlf	___awdiv@quotient+1,f
  3961  032B  3EFF               	addlw	-1
  3962  032C  1D03               	skipz
  3963  032D  2B28               	goto	u1885
  3964  032E  0821               	movf	___awdiv@divisor+1,w
  3965  032F  0223               	subwf	___awdiv@dividend+1,w
  3966  0330  1D03               	skipz
  3967  0331  2B34               	goto	u1895
  3968  0332  0820               	movf	___awdiv@divisor,w
  3969  0333  0222               	subwf	___awdiv@dividend,w
  3970  0334                     u1895:
  3971  0334  1C03               	skipc
  3972  0335  2B37               	goto	u1891
  3973  0336  2B38               	goto	u1890
  3974  0337                     u1891:
  3975  0337  2B3F               	goto	l2253
  3976  0338                     u1890:
  3977  0338                     l2249:
  3978  0338  0820               	movf	___awdiv@divisor,w
  3979  0339  02A2               	subwf	___awdiv@dividend,f
  3980  033A  0821               	movf	___awdiv@divisor+1,w
  3981  033B  1C03               	skipc
  3982  033C  03A3               	decf	___awdiv@dividend+1,f
  3983  033D  02A3               	subwf	___awdiv@dividend+1,f
  3984  033E                     l2251:
  3985  033E  1426               	bsf	___awdiv@quotient,0
  3986  033F                     l2253:
  3987  033F  3001               	movlw	1
  3988  0340                     u1905:
  3989  0340  1003               	clrc
  3990  0341  0CA1               	rrf	___awdiv@divisor+1,f
  3991  0342  0CA0               	rrf	___awdiv@divisor,f
  3992  0343  3EFF               	addlw	-1
  3993  0344  1D03               	skipz
  3994  0345  2B40               	goto	u1905
  3995  0346                     l2255:
  3996  0346  3001               	movlw	1
  3997  0347  02A4               	subwf	___awdiv@counter,f
  3998  0348  1D03               	btfss	3,2
  3999  0349  2B4B               	goto	u1911
  4000  034A  2B4C               	goto	u1910
  4001  034B                     u1911:
  4002  034B  2B27               	goto	l2247
  4003  034C                     u1910:
  4004  034C                     l2257:
  4005  034C  0825               	movf	___awdiv@sign,w
  4006  034D  1903               	btfsc	3,2
  4007  034E  2B50               	goto	u1921
  4008  034F  2B51               	goto	u1920
  4009  0350                     u1921:
  4010  0350  2B56               	goto	l2261
  4011  0351                     u1920:
  4012  0351                     l2259:
  4013  0351  09A6               	comf	___awdiv@quotient,f
  4014  0352  09A7               	comf	___awdiv@quotient+1,f
  4015  0353  0AA6               	incf	___awdiv@quotient,f
  4016  0354  1903               	skipnz
  4017  0355  0AA7               	incf	___awdiv@quotient+1,f
  4018  0356                     l2261:
  4019  0356  0827               	movf	___awdiv@quotient+1,w
  4020  0357  00A1               	movwf	?___awdiv+1
  4021  0358  0826               	movf	___awdiv@quotient,w
  4022  0359  00A0               	movwf	?___awdiv
  4023  035A                     l547:
  4024  035A  0008               	return
  4025  035B                     __end_of___awdiv:
  4026                           
  4027                           	psect	text25
  4028  0730                     __ptext25:	
  4029 ;; *************** function _LCD_data *****************
  4030 ;; Defined at:
  4031 ;;		line 75 in file "Newmain.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  y               1    wreg     unsigned char 
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;  y               1    0[BANK0 ] unsigned char 
  4036 ;; Return value:  Size  Location     Type
  4037 ;;                  1    wreg      void 
  4038 ;; Registers used:
  4039 ;;		wreg, status,2, status,0, pclath, cstack
  4040 ;; Tracked objects:
  4041 ;;		On entry : 0/0
  4042 ;;		On exit  : 0/0
  4043 ;;		Unchanged: 0/0
  4044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4045 ;;      Params:         0       0       0       0       0
  4046 ;;      Locals:         0       1       0       0       0
  4047 ;;      Temps:          0       0       0       0       0
  4048 ;;      Totals:         0       1       0       0       0
  4049 ;;Total ram usage:        1 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; Hardware stack levels required when called:    2
  4052 ;; This function calls:
  4053 ;;		_delay
  4054 ;; This function is called by:
  4055 ;;		_LCD_disp
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058                           
  4059                           
  4060                           ;psect for function _LCD_data
  4061  0730                     _LCD_data:
  4062                           
  4063                           ;incstack = 0
  4064                           ; Regs used in _LCD_data: [wreg+status,2+status,0+pclath+cstack]
  4065                           ;LCD_data@y stored from wreg
  4066  0730  1283               	bcf	3,5	;RP0=0, select bank0
  4067  0731  1303               	bcf	3,6	;RP1=0, select bank0
  4068  0732  00A0               	movwf	LCD_data@y
  4069  0733                     l2069:
  4070                           
  4071                           ;Newmain.c: 75: void LCD_data(char y);Newmain.c: 76: {;Newmain.c: 77:  RC0 = 1;
  4072  0733  1407               	bsf	7,0	;volatile
  4073                           
  4074                           ;Newmain.c: 78:  RC1 = 1;
  4075  0734  1487               	bsf	7,1	;volatile
  4076  0735                     l2071:
  4077                           
  4078                           ;Newmain.c: 79:  PORTB = y + 48;
  4079  0735  0820               	movf	LCD_data@y,w
  4080  0736  3E30               	addlw	48
  4081  0737  0086               	movwf	6	;volatile
  4082  0738                     l2073:
  4083                           
  4084                           ;Newmain.c: 80:  delay(100);
  4085  0738  3064               	movlw	100
  4086  0739  00F4               	movwf	delay@x
  4087  073A  3000               	movlw	0
  4088  073B  00F5               	movwf	delay@x+1
  4089  073C  120A  118A  27BC  120A  118A  	fcall	_delay
  4090  0741                     l2075:
  4091                           
  4092                           ;Newmain.c: 81:  RC1 = 0;
  4093  0741  1283               	bcf	3,5	;RP0=0, select bank0
  4094  0742  1303               	bcf	3,6	;RP1=0, select bank0
  4095  0743  1087               	bcf	7,1	;volatile
  4096  0744                     l2077:
  4097                           
  4098                           ;Newmain.c: 82:  delay(200);
  4099  0744  30C8               	movlw	200
  4100  0745  00F4               	movwf	delay@x
  4101  0746  3000               	movlw	0
  4102  0747  00F5               	movwf	delay@x+1
  4103  0748  120A  118A  27BC  120A  118A  	fcall	_delay
  4104  074D                     l118:
  4105  074D  0008               	return
  4106  074E                     __end_of_LCD_data:
  4107                           
  4108                           	psect	text26
  4109  07BC                     __ptext26:	
  4110 ;; *************** function _delay *****************
  4111 ;; Defined at:
  4112 ;;		line 60 in file "Newmain.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;  x               2    4[COMMON] unsigned int 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;		None
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      void 
  4119 ;; Registers used:
  4120 ;;		wreg, status,2, status,0
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4126 ;;      Params:         2       0       0       0       0
  4127 ;;      Locals:         0       0       0       0       0
  4128 ;;      Temps:          0       0       0       0       0
  4129 ;;      Totals:         2       0       0       0       0
  4130 ;;Total ram usage:        2 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:    1
  4133 ;; This function calls:
  4134 ;;		Nothing
  4135 ;; This function is called by:
  4136 ;;		_LCD_cmd
  4137 ;;		_LCD_data
  4138 ;;		_no_dev_disp
  4139 ;;		_dev_found_disp
  4140 ;;		_temp_disp
  4141 ;;		_LCD_init
  4142 ;;		_LCD_disp
  4143 ;;		_i2c_init_disp
  4144 ;;		_check_dev
  4145 ;;		_check_dev_disp
  4146 ;;		_main
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           
  4151                           ;psect for function _delay
  4152  07BC                     _delay:
  4153  07BC                     l2015:	
  4154                           ;incstack = 0
  4155                           ; Regs used in _delay: [wreg+status,2+status,0]
  4156                           
  4157  07BC                     l2017:	
  4158                           ;Newmain.c: 60: void delay(unsigned int x);Newmain.c: 61: {;Newmain.c: 62:  while(x--);
  4159                           
  4160  07BC  3001               	movlw	1
  4161  07BD  02F4               	subwf	delay@x,f
  4162  07BE  3000               	movlw	0
  4163  07BF  1C03               	skipc
  4164  07C0  03F5               	decf	delay@x+1,f
  4165  07C1  02F5               	subwf	delay@x+1,f
  4166  07C2  0A74               	incf	delay@x,w
  4167  07C3  1D03               	skipz
  4168  07C4  2FC9               	goto	u1521
  4169  07C5  0A75               	incf	delay@x+1,w
  4170  07C6  1D03               	btfss	3,2
  4171  07C7  2FC9               	goto	u1521
  4172  07C8  2FCA               	goto	u1520
  4173  07C9                     u1521:
  4174  07C9  2FBC               	goto	l2017
  4175  07CA                     u1520:
  4176  07CA                     l112:
  4177  07CA  0008               	return
  4178  07CB                     __end_of_delay:
  4179                           
  4180                           	psect	text27
  4181  062E                     __ptext27:	
  4182 ;; *************** function _isr *****************
  4183 ;; Defined at:
  4184 ;;		line 358 in file "Newmain.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;		None
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;		None
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  1    wreg      void 
  4191 ;; Registers used:
  4192 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4198 ;;      Params:         0       0       0       0       0
  4199 ;;      Locals:         0       0       0       0       0
  4200 ;;      Temps:          4       0       0       0       0
  4201 ;;      Totals:         4       0       0       0       0
  4202 ;;Total ram usage:        4 bytes
  4203 ;; Hardware stack levels used:    1
  4204 ;; This function calls:
  4205 ;;		Nothing
  4206 ;; This function is called by:
  4207 ;;		Interrupt level 1
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211                           
  4212                           ;psect for function _isr
  4213  062E                     _isr:
  4214  062E                     i1l1975:
  4215                           
  4216                           ;Newmain.c: 361:     if (PIE1bits.TXIE && PIR1bits.TXIF)
  4217  062E  1683               	bsf	3,5	;RP0=1, select bank1
  4218  062F  1303               	bcf	3,6	;RP1=0, select bank1
  4219  0630  1E0C               	btfss	12,4	;volatile
  4220  0631  2E33               	goto	u145_21
  4221  0632  2E34               	goto	u145_20
  4222  0633                     u145_21:
  4223  0633  2E5A               	goto	i1l1991
  4224  0634                     u145_20:
  4225  0634                     i1l1977:
  4226  0634  1283               	bcf	3,5	;RP0=0, select bank0
  4227  0635  1303               	bcf	3,6	;RP1=0, select bank0
  4228  0636  1E0C               	btfss	12,4	;volatile
  4229  0637  2E39               	goto	u146_21
  4230  0638  2E3A               	goto	u146_20
  4231  0639                     u146_21:
  4232  0639  2E5A               	goto	i1l1991
  4233  063A                     u146_20:
  4234  063A                     i1l1979:
  4235                           
  4236                           ;Newmain.c: 362:     {;Newmain.c: 363:         if (eusart_flag)
  4237  063A  0876               	movf	_eusart_flag,w
  4238  063B  1903               	btfsc	3,2
  4239  063C  2E3E               	goto	u147_21
  4240  063D  2E3F               	goto	u147_20
  4241  063E                     u147_21:
  4242  063E  2E45               	goto	i1l1983
  4243  063F                     u147_20:
  4244  063F                     i1l1981:
  4245                           
  4246                           ;Newmain.c: 364:         {;Newmain.c: 365:             TXREG = recibo[str_pos];
  4247  063F  0877               	movf	_str_pos,w
  4248  0640  3E42               	addlw	(low (_recibo| 0))& (0+255)
  4249  0641  0084               	movwf	4
  4250  0642  1383               	bcf	3,7	;select IRP bank0
  4251  0643  0800               	movf	0,w
  4252  0644  0099               	movwf	25	;volatile
  4253  0645                     i1l1983:
  4254                           
  4255                           ;Newmain.c: 367:         str_pos++;
  4256  0645  3001               	movlw	1
  4257  0646  00F0               	movwf	??_isr
  4258  0647  0870               	movf	??_isr,w
  4259  0648  07F7               	addwf	_str_pos,f
  4260  0649                     i1l1985:
  4261                           
  4262                           ;Newmain.c: 368:         if (str_pos == 5)
  4263  0649  3005               	movlw	5
  4264  064A  0677               	xorwf	_str_pos,w
  4265  064B  1D03               	btfss	3,2
  4266  064C  2E4E               	goto	u148_21
  4267  064D  2E4F               	goto	u148_20
  4268  064E                     u148_21:
  4269  064E  2E5A               	goto	i1l1991
  4270  064F                     u148_20:
  4271  064F                     i1l1987:
  4272                           
  4273                           ;Newmain.c: 369:         {;Newmain.c: 370:             eusart_flag = !eusart_flag;
  4274  064F  0876               	movf	_eusart_flag,w
  4275  0650  1903               	btfsc	3,2
  4276  0651  2E53               	goto	u149_21
  4277  0652  2E55               	goto	u149_20
  4278  0653                     u149_21:
  4279  0653  3001               	movlw	1
  4280  0654  2E56               	goto	u150_20
  4281  0655                     u149_20:
  4282  0655  3000               	movlw	0
  4283  0656                     u150_20:
  4284  0656  00F0               	movwf	??_isr
  4285  0657  0870               	movf	??_isr,w
  4286  0658  00F6               	movwf	_eusart_flag
  4287  0659                     i1l1989:
  4288                           
  4289                           ;Newmain.c: 371:             str_pos = 0;
  4290  0659  01F7               	clrf	_str_pos
  4291  065A                     i1l1991:
  4292                           
  4293                           ;Newmain.c: 374:     if (PIR1bits.RCIF)
  4294  065A  1283               	bcf	3,5	;RP0=0, select bank0
  4295  065B  1E8C               	btfss	12,5	;volatile
  4296  065C  2E5E               	goto	u151_21
  4297  065D  2E5F               	goto	u151_20
  4298  065E                     u151_21:
  4299  065E  2E63               	goto	i1l236
  4300  065F                     u151_20:
  4301  065F                     i1l1993:
  4302                           
  4303                           ;Newmain.c: 375:     {;Newmain.c: 376:         uart_data = RCREG;
  4304  065F  081A               	movf	26,w	;volatile
  4305  0660  00F0               	movwf	??_isr
  4306  0661  0870               	movf	??_isr,w
  4307  0662  00C0               	movwf	_uart_data
  4308  0663                     i1l236:
  4309  0663  0873               	movf	??_isr+3,w
  4310  0664  008A               	movwf	10
  4311  0665  0872               	movf	??_isr+2,w
  4312  0666  0084               	movwf	4
  4313  0667  0E71               	swapf	??_isr+1,w
  4314  0668  0083               	movwf	3
  4315  0669  0EFE               	swapf	btemp,f
  4316  066A  0E7E               	swapf	btemp,w
  4317  066B  0009               	retfie
  4318  066C                     __end_of_isr:
  4319  007E                     btemp	set	126	;btemp
  4320  007E                     wtemp0	set	126
  4321                           
  4322                           	psect	intentry
  4323  0004                     __pintentry:	
  4324                           ;incstack = 0
  4325                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  4326                           
  4327  0004                     interrupt_function:
  4328  007E                     saved_w	set	btemp
  4329  0004  00FE               	movwf	btemp
  4330  0005  0E03               	swapf	3,w
  4331  0006  00F1               	movwf	??_isr+1
  4332  0007  0804               	movf	4,w
  4333  0008  00F2               	movwf	??_isr+2
  4334  0009  080A               	movf	10,w
  4335  000A  00F3               	movwf	??_isr+3
  4336  000B  120A  118A  2E2E   	ljmp	_isr
  4337                           
  4338                           	psect	config
  4339                           
  4340                           ;Config register CONFIG1 @ 0x2007
  4341                           ;	Oscillator Selection bits
  4342                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4343                           ;	Watchdog Timer Enable bit
  4344                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4345                           ;	Power-up Timer Enable bit
  4346                           ;	PWRTE = OFF, PWRT disabled
  4347                           ;	RE3/MCLR pin function select bit
  4348                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  4349                           ;	Code Protection bit
  4350                           ;	CP = OFF, Program memory code protection is disabled
  4351                           ;	Data Code Protection bit
  4352                           ;	CPD = OFF, Data memory code protection is disabled
  4353                           ;	Brown Out Reset Selection bits
  4354                           ;	BOREN = OFF, BOR disabled
  4355                           ;	Internal External Switchover bit
  4356                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4357                           ;	Fail-Safe Clock Monitor Enabled bit
  4358                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4359                           ;	Low Voltage Programming Enable bit
  4360                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4361                           ;	In-Circuit Debugger Mode bit
  4362                           ;	DEBUG = 0x1, unprogrammed default
  4363  2007                     	org	8199
  4364  2007  20F4               	dw	8436
  4365                           
  4366                           ;Config register CONFIG2 @ 0x2008
  4367                           ;	Brown-out Reset Selection bit
  4368                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4369                           ;	Flash Program Memory Self Write Enable bits
  4370                           ;	WRT = OFF, Write protection off
  4371  2008                     	org	8200
  4372  2008  3FFF               	dw	16383

Data Sizes:
    Strings     74
    Constant    10
    Data        5
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     31      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_6(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 1
		 -> recibo(BANK0[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    recibo	PTR unsigned char [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    tmp	PTR unsigned char  size(1) Largest target is 12
		 -> STR_5(CODE[12]), 

    d3	PTR unsigned char  size(1) Largest target is 14
		 -> STR_4(CODE[14]), 

    d2	PTR unsigned char  size(1) Largest target is 14
		 -> STR_3(CODE[14]), 

    d1	PTR unsigned char  size(1) Largest target is 13
		 -> STR_2(CODE[13]), 

    d	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_delay
    _temp_disp->_delay
    _i2c_init_disp->_delay
    _sprintf->___lwmod
    _sprintf->___wmul
    _sprintf->_isdigit
    ___lwmod->___lwdiv
    _check_dev_disp->_delay
    _no_dev_disp->_delay
    _dev_found_disp->_delay
    _check_dev->_delay
    _LCD_init->_delay
    _LCD_cmd->_delay
    _LCD_disp->_delay
    _LCD_data->_delay

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_funcion
    _temp_disp->_LCD_cmd
    _i2c_init_disp->_LCD_cmd
    _funcion->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _check_dev_disp->_check_dev
    _no_dev_disp->_LCD_cmd
    _dev_found_disp->_LCD_cmd
    _LCD_init->_LCD_cmd
    _LCD_disp->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   59714
                                             30 BANK0      1     1      0
                            _LCD_cmd
                           _LCD_disp
                           _LCD_init
                     _check_dev_disp
                              _delay
                            _funcion
                           _i2c_NACK
                           _i2c_init
                      _i2c_init_disp
                      _i2c_rep_start
                             _i2c_rx
                           _i2c_send
                           _i2c_stop
                           _i2c_wait
                          _temp_disp
 ---------------------------------------------------------------------------------
 (1) _temp_disp                                            1     1      0    6573
                                              1 BANK0      1     1      0
                            _LCD_cmd
                              _delay
 ---------------------------------------------------------------------------------
 (1) _i2c_stop                                             0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (1) _i2c_rx                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_rep_start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_init_disp                                        1     1      0    6573
                                              1 BANK0      1     1      0
                            _LCD_cmd
                              _delay
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_NACK                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _funcion                                              3     3      0    2447
                                             27 BANK0      3     3      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    20      3    2447
                                             12 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     426
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _check_dev_disp                                       1     1      0   23012
                                              4 BANK0      1     1      0
                            _LCD_cmd
                          _check_dev
                              _delay
                     _dev_found_disp
                        _no_dev_disp
 ---------------------------------------------------------------------------------
 (2) _no_dev_disp                                          1     1      0    6573
                                              1 BANK0      1     1      0
                            _LCD_cmd
                              _delay
 ---------------------------------------------------------------------------------
 (2) _dev_found_disp                                       1     1      0    6573
                                              1 BANK0      1     1      0
                            _LCD_cmd
                              _delay
 ---------------------------------------------------------------------------------
 (2) _check_dev                                            4     2      2    3293
                                              0 BANK0      4     2      2
                              _delay
                           _i2c_send
 ---------------------------------------------------------------------------------
 (1) _i2c_send                                             1     1      0      22
                                              4 COMMON     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (1) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0    6573
                            _LCD_cmd
                              _delay
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              1     1      0    3302
                                              0 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _LCD_disp                                             5     5      0    7941
                                              8 BANK0      5     5      0
                           _LCD_data
                            ___awdiv
                            ___awmod
                              _delay
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCD_data                                             1     1      0    3302
                                              0 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                2     0      2    3271
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_cmd
     _delay
   _LCD_disp
     _LCD_data
       _delay
     ___awdiv
     ___awmod
     _delay
   _LCD_init
     _LCD_cmd
       _delay
     _delay
   _check_dev_disp
     _LCD_cmd
       _delay
     _check_dev
       _delay
       _i2c_send
         _i2c_wait
     _delay
     _dev_found_disp
       _LCD_cmd
         _delay
       _delay
     _no_dev_disp
       _LCD_cmd
         _delay
       _delay
   _delay
   _funcion
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _i2c_NACK
   _i2c_init
   _i2c_init_disp
     _LCD_cmd
       _delay
     _delay
   _i2c_rep_start
   _i2c_rx
   _i2c_send
     _i2c_wait
   _i2c_stop
     _i2c_wait
   _i2c_wait
   _temp_disp
     _LCD_cmd
       _delay
     _delay

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1F      26       5       47.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      30      12        0.0%
ABS                  0      0      30       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Mar 10 22:12:02 2021

                      _d 0079                        _r 0041                        pc 0002  
                     _BF 04A0                       _d1 0078                       _d2 0045  
                     _d3 0044             ___awdiv@sign 0025                       fsr 0004  
    ___wmul@multiplicand 0022           _check_dev_disp 0271                      l112 07CA  
                    l202 06AB                      l122 04C2                      l115 076A  
                    l131 0562                      l124 04FD                      l205 06BE  
                    l133 059D                      l213 0293                      l118 074D  
                    l150 07FA                      l206 06C1                      l151 07FB  
                    l160 07E7                      l209 06DC                      l137 0473  
                    l154 07EF                      l219 02F1                      l163 07EB  
                    l139 04AE                      l148 07F4                      l172 07DB  
                    l181 07BB                      l157 07F3                      l190 0708  
                    l166 07D3                      l239 0798                      l175 07E2  
                    l193 054E                      l169 07D7                      l178 07B0  
                    l187 0784                      l197 05AB                      l390 01C0  
                    l199 05E7                      l560 03B5                      l394 0717  
                    l547 035A                      l379 0118                      l396 072F  
                    l666 062D                      l676 06A7                      l847 07AA  
                    _RC0 0038                      _RC1 0039                      _RC2 003A  
                    _PEN 048A                      u800 07A1                      u801 07A0  
                    u810 07A7                      u811 07A6                      _SEN 0488  
                    u930 0674                      u931 0673                      u780 07FA  
                    u781 07F9                      u790 07B6                      u950 0686  
                    u791 07B5                      u951 0685                      u960 0690  
                    u961 068F                      u945 0678                      u980 06A3  
                    u981 06A2                      u965 068C                      u975 0697  
                    _isr 062E                      fsr0 0004                      _tmp 0043  
                    indf 0000             ___awmod@sign 0025          __end_of_LCD_cmd 076B  
                   l2021 0753                     l2101 0563                     l2015 07BC  
                   l2023 0755                     l2111 058B                     l2103 056C  
                   l2031 070B                     l2017 07BC                     l2025 075E  
                   l2121 06BB                     l2105 0576                     l2113 0591  
                   l2033 0711                     l2201 0161                     l2027 0761  
                   l2019 0751                     l2123 06C5                     l2115 06A8  
                   l2107 057F                     l2051 05FC                     l2043 05E8  
                   l2035 071E                     l2203 0166                     l2131 0041  
                   l2211 01AA                     l2221 02F2                     l2125 06CE  
                   l2117 06AF                     l2109 0582                     l2061 061C  
                   l2053 0600                     l2045 05EC                     l2037 0725  
                   l2029 0709                     l2205 0196                     l2213 01BC  
                   l2141 0066                     l2133 0047                     l2071 0735  
                   l2231 0304                     l2223 02F5                     l2119 06B5  
                   l2063 0623                     l2055 0604                     l2047 05F2  
                   l2039 072B                     l1511 079A                     l2207 019D  
                   l2143 006A                     l2135 004E                     l2311 0487  
                   l2303 045A                     l2073 0738                     l2241 0318  
                   l2233 0309                     l2225 02F9                     l2321 06DD  
                   l2081 04BE                     l2057 0615                     l2049 05F5  
                   l2065 0629                     l1513 079B                     l2209 01A1  
                   l2161 00D5                     l2145 007F                     l2153 00A6  
                   l2137 0053                     l2129 003C                     l2313 0490  
                   l2305 046F                     l2401 0200                     l2075 0741  
                   l2251 033E                     l2243 031F                     l2235 030D  
                   l2227 02FE                     l2331 06F6                     l2323 06E3  
                   l1507 07AC                     l2091 04E2                     l2083 04C3  
                   l2059 061B                     l1515 07A1                     l2171 00E0  
                   l2163 00D9                     l2155 00C5                     l2147 0092  
                   l2139 0056                     l2315 0493                     l2307 0474  
                   l2411 0223                     l2403 0209                     l2077 0744  
                   l2069 0733                     l2261 0356                     l2253 033F  
                   l2245 0323                     l2237 030F                     l2229 0300  
                   l2333 06FC                     l2325 06E6                     l1509 07B6  
                   l2093 04EB                     l2085 04CC                     l1517 07A7  
                   l2181 0112                     l2165 00DE                     l2157 00CD  
                   l2149 0096                     l2341 05AD                     l2317 049C  
                   l2309 047D                     l2421 0244                     l2413 0227  
                   l2405 020F                     l2255 0346                     l2247 0327  
                   l2239 0315                     l2271 0367                     l2335 0702  
                   l2327 06E7                     l2087 04D6                     l2095 04F1  
                   l2079 04AF                     l1519 07A9                     l2191 0140  
                   l2183 0123                     l2175 00FC                     l2159 00D1  
                   l2351 05D0                     l2343 05B6                     l2319 04A2  
                   l2431 0268                     l2423 0249                     l2415 022C  
                   l2407 0215                     l2249 0338                     l2257 034C  
                   l2281 037B                     l2273 0369                     l2265 035B  
                   l2337 0502                     l2329 06F0                     l2097 054F  
                   l2089 04DF                     l2361 029F                     l2193 0144  
                   l2185 012F                     l2177 0106                     l2345 05C0  
                   l2353 05D9                     l2425 0252                     l2417 0235  
                   l2409 021A                     l2259 0351                     l2291 039A  
                   l2283 0382                     l2275 036D                     l2267 035E  
                   l2099 055E                     l2363 02A9                     l2371 02C4  
                   l2355 0271                     l1571 0682                     l1563 066C  
                   l2195 0150                     l2187 0133                     l2179 010C  
                   l2347 05C9                     l2339 059E                     l2427 0257  
                   l2419 023F                     l2293 03A1                     l2285 0386  
                   l2277 0372                     l2269 0362                     l2373 02D0  
                   l2365 02B2                     l2357 0286                     l1573 0686  
                   l1565 0674                     l1581 06A3                     l2197 0156  
                   l2189 0139                     l2453 00BA                     l2349 05CC  
                   l2429 0260                     l2381 01C1                     l2287 038A  
                   l2279 0378                     l2295 03A7                     l1495 07F4  
                   l2375 02E6                     l2367 02B5                     l2359 0296  
                   l1575 0690                     l1567 0677                     l2199 015D  
                   l2391 01DF                     l2383 01C7                     l2297 03AC  
                   l2289 0394                     l2377 02EC                     l2369 02BE  
                   l1577 0696                     l1569 067E                     l1841 07CB  
                   l2393 01ED                     l2385 01CC                     l2299 03B1  
                   l1579 069D                     l2379 0785                     l1851 076B  
                   l1843 07D0                     l2395 01F2                     l2387 01D1  
                   l1861 0780                     l1853 076F                     l1837 07EC  
                   l1845 07D8                     l2397 01F5                     l2389 01DA  
                   l1839 07E3                     l1855 0772                     l1847 07DF  
                   l2399 01FB                     l1857 0776                     l1859 077D  
                   ?_isr 0070                     STR_1 0410                     STR_2 043B  
                   STR_3 042D                     STR_4 041F                     STR_5 0448  
                   STR_6 0454                     u2000 03A7                     u2001 03A6  
                   u2010 03AC                     u2011 03AB                     u2020 04AE  
                   u2021 04AD                     u2030 05E7                     u2031 05E6  
                   u2040 02D0                     u1400 07D7                     u2041 02CF  
                   u1401 07D6                     u2050 02E6                     u1410 07DF  
                   u2051 02E5                     u1411 07DE                     u1520 07CA  
                   u1521 07C9                     u1610 0615                     u1530 0711  
                   u1611 0614                     u1531 0710                     u1700 0066  
                   u1380 07F3                     u1605 0605                     u1701 0065  
                   u1381 07F2                     u1630 0629                     u1710 00A6  
                   u1390 07EB                     u1631 0628                     u1615 0611  
                   u1711 00A5                     u1391 07EA                     u1640 04FD  
                   u1560 072B                     u1800 0156                     u1720 00D5  
                   u1641 04FC                     u1625 061D                     u1561 072A  
                   u1545 0718                     u1801 0155                     u1721 00D4  
                   u1650 059D                     u1570 05F2                     u1810 01AA  
                   u1730 00FB                     u1651 059C                     u1571 05F1  
                   u1555 071F                     u1811 01A9                     u1731 00FA  
                   u1660 06AF                     u1820 01BC                     u1740 0106  
                   u1661 06AE                     u1821 01BB                     u1741 0105  
                   u1910 034C                     u1830 02F9                     u1670 06BB  
                   u1590 0604                     u1750 010C                     u1911 034B  
                   u1831 02F8                     u1671 06BA                     u1591 0603  
                   u1751 010B                     u1735 00F7                     u1920 0351  
                   u1840 0304                     u1680 06C5                     u1760 0112  
                   u1921 0350                     u1905 0340                     u1841 0303  
                   u1681 06C4                     u1585 05F6                     u1761 0111  
                   u1850 0315                     u1930 0362                     u1770 0123  
                   u1690 0047                     u1851 0314                     u1931 0361  
                   u1771 0122                     u1691 0046                     u1940 036D  
                   u1780 0139                     u1941 036C                     u1781 0138  
                   u1870 0327                     u1950 0378                     u1790 0150  
                   u1871 0326                     u1951 0377                     u1791 014F  
                   u1775 011F                     u1865 0319                     u1890 0338  
                   u1970 038A                     u1891 0337                     u1971 0389  
                   u1980 0394                     u1885 0328                     u1981 0393  
                   u1965 037C                     u1895 0334                     u1985 0390  
                   u1995 039B                     _RCEN 048B                     _RSEN 0489  
          _i2c_init_disp 059E                     _main 01C1                     btemp 007E  
                   start 000E            _i2c_rep_start 07EC   __end_of_check_dev_disp 02F2  
                  ??_isr 0070         __end_of_LCD_data 074E         __end_of_LCD_disp 054F  
       __end_of_LCD_init 0709                    ?_main 0070                    _ACKEN 048C  
                  _ACKDT 048D          __end_of___awdiv 035B          __end_of___awmod 03B6  
                  _ANSEL 0188          ___awdiv@divisor 0020          __end_of___lwdiv 062E  
                  i1l236 0663          __end_of___lwmod 06A8          ___awdiv@counter 0024  
                  _RCREG 001A                    _SPBRG 0099                    _PORTB 0006  
                  _PORTC 0007                    _PORTE 0009                    _TRISB 0086  
                  _TRISE 0089                    _SSPIF 0063                    _TXREG 0019  
                  _delay 07BC          __end_of_dpowers 0410          __end_of_funcion 0799  
        __end_of_isdigit 07AB           ?_i2c_init_disp 0070                    pclath 000A  
           ?_no_dev_disp 0070                    status 0003                    wtemp0 007E  
        __end_of_sprintf 01C1          __initialization 0011           ?_i2c_rep_start 0070  
       __end_of_i2c_NACK 07EC             __end_of_main 0271          ?_check_dev_disp 0070  
       __end_of_i2c_init 0785         __end_of_i2c_send 07BC         __end_of_i2c_wait 07FC  
       __end_of_i2c_stop 07D8                   ??_main 003E                ??_LCD_cmd 0076  
                 ?_delay 0074         ___awdiv@dividend 0022                   _ANSELH 0189  
                 i1l1981 063F                   i1l1983 0645                   i1l1991 065A  
                 i1l1975 062E                   i1l1993 065F                   i1l1985 0649  
                 i1l1977 0634                   i1l1987 064F                   i1l1979 063A  
                 i1l1989 0659                   u150_20 0656                   u151_20 065F  
                 u151_21 065E                   u145_20 0634                   u145_21 0633  
                 u146_20 063A                   u146_21 0639                   u147_20 063F  
                 u147_21 063E                   u148_20 064F                   u148_21 064E  
                 u149_20 0655                   u149_21 0653                   _OSCCON 008F  
                 _SPBRGH 009A                   _SSPADD 0093                   _TRISC0 0438  
                 _TRISC1 0439                   _TRISC2 043A                   _TRISC3 043B  
                 _TRISC4 043C                   _SSPBUF 0013                   _SSPCON 0014  
                 _i2c_rx 07D8                   ___wmul 0709                ??___awdiv 0074  
              ??___awmod 0074                ??___lwdiv 0074                ??___lwmod 0075  
                 _recibo 0042                   delay@x 0074         ___awdiv@quotient 0026  
        ___awmod@divisor 0020          ___awmod@counter 0024             __pdataCOMMON 0078  
              ??_funcion 003B                ??_isdigit 0074                   saved_w 007E  
        ??_i2c_init_disp 0021                ??_sprintf 002F             LCD_disp@temp 002B  
__end_of__initialization 0035                ?_LCD_data 0070                ?_LCD_disp 0070  
              ?_LCD_init 0070          ??_i2c_rep_start 0074           __pcstackCOMMON 0070  
           __pidataBANK0 07FC            __end_of_delay 07CB       __size_of_check_dev 0035  
              LCD_data@y 0020                LCD_disp@y 002A                  ??_delay 0076  
              ?_i2c_NACK 0070             sprintf@width 0038               __pbssBANK0 003F  
              ?_i2c_init 0070                ?_i2c_send 0070                ?_i2c_wait 0070  
              ?_i2c_stop 0070  __size_of_dev_found_disp 004F               ??_LCD_data 0076  
             ??_LCD_disp 0028               ??_LCD_init 0076     __size_of_no_dev_disp 0050  
                ?_i2c_rx 0070               __pmaintext 01C1                  ?___wmul 0020  
             __pintentry 0004                  _ACKSTAT 048E       __size_of_temp_disp 0055  
                _LCD_cmd 074E                  _SSPCON2 0091               ??_i2c_NACK 0074  
                _SSPSTAT 0094        __end_of_check_dev 06DD               __stringtab 0400  
             ??_i2c_init 0074               ??_i2c_send 0074               ??_i2c_wait 0074  
             ??_i2c_stop 0074         ??_check_dev_disp 0024          __size_of_i2c_rx 000B  
                ___awdiv 02F2                  ___awmod 035B          __size_of___wmul 0027  
                ___lwdiv 05E8                  ___lwmod 066C                  __ptext1 045A  
                __ptext2 07CB                  __ptext3 07D8                  __ptext4 07EC  
                __ptext5 059E                  __ptext6 076B                  __ptext7 07E3  
                __ptext8 0785                  __ptext9 0039                  _dpowers 0406  
                _funcion 0785                  _isdigit 0799             __size_of_isr 003E  
       ___awmod@dividend 0022                  _sprintf 0039                  _str_pos 0077  
   end_of_initialization 0035        __end_of_temp_disp 04AF                _RCSTAbits 0018  
              _TRISCbits 0087           _dev_found_disp 054F                _TXSTAbits 0098  
              i2c_send@c 0074        __size_of_LCD_data 001E        __size_of_LCD_disp 0050  
      __size_of_LCD_init 002C           __end_of_i2c_rx 07E3           __end_of___wmul 0730  
          __pidataCOMMON 03B6      start_initialization 0011              __end_of_isr 066C  
 __end_of_dev_found_disp 059E    __end_of_i2c_init_disp 05E8        __size_of_i2c_NACK 0009  
      __size_of_i2c_init 001A        __size_of_i2c_send 0011        __size_of_i2c_wait 0008  
      __size_of_i2c_stop 000D                 ??_i2c_rx 0074    __end_of_i2c_rep_start 07F4  
               ??___wmul 0074              __pdataBANK0 0043                 ?_LCD_cmd 0070  
            __pbssCOMMON 0076                ___latbits 0002            __pcstackBANK0 0020  
               LCD_cmd@y 0020          ?_dev_found_disp 0070            ??_no_dev_disp 0021  
            sprintf@flag 0034              sprintf@prec 0033                _check_dev 06A8  
       ___lwdiv@dividend 0022                 ?___awdiv 0020                 ?___awmod 0020  
               ?___lwdiv 0020                 ?___lwmod 0027                __pstrings 0400  
               ?_funcion 0070                 ?_isdigit 0070         ___lwdiv@quotient 0025  
         __size_of_delay 000F                 ?_sprintf 002C        interrupt_function 0004  
         ___wmul@product 0074                 _LCD_data 0730                 _LCD_disp 04FF  
               _LCD_init 06DD               ?_check_dev 0020                 _PIE1bits 008C  
               _PIR1bits 000C      __end_of_no_dev_disp 04FF                _temp_disp 045A  
              _uart_data 0040                _uart_cont 003F              __stringbase 0405  
      ___wmul@multiplier 0020         __size_of_LCD_cmd 001D                 _i2c_NACK 07E3  
               _i2c_init 076B                 _i2c_send 07AB                 _i2c_wait 07F4  
               _i2c_stop 07CB               ?_temp_disp 0070         __size_of___awdiv 0069  
       __size_of___awmod 005B         __size_of___lwdiv 0046         __size_of___lwmod 003C  
__size_of_check_dev_disp 0081       __end_of__stringtab 0406              _isdigit$843 0074  
             sprintf@val 0035         __size_of_funcion 0014         __size_of_isdigit 0012  
        ___lwdiv@divisor 0020          ___lwdiv@counter 0024                 __ptext10 0799  
               __ptext11 0709                 __ptext20 06DD                 __ptext12 066C  
               __ptext21 074E                 __ptext13 05E8                 __ptext22 04FF  
               __ptext14 0271                 __ptext23 035B                 __ptext15 04AF  
               __ptext24 02F2                 __ptext16 054F                 __ptext25 0730  
               __ptext17 06A8                 __ptext26 07BC                 __ptext18 07AB  
               __ptext27 062E                 __ptext19 07F4              _eusart_flag 0076  
       __size_of_sprintf 0188              _no_dev_disp 04AF            __size_of_main 00B0  
            ??_check_dev 0022         ??_dev_found_disp 0021               _INTCONbits 000B  
               isdigit@c 0075                 intlevel1 0000                sprintf@ap 0032  
              sprintf@sp 0037         ___lwmod@dividend 0029                stringcode 0400  
            ??_temp_disp 0021   __size_of_i2c_init_disp 004A                 sprintf@c 003A  
               sprintf@f 002C          ___lwmod@divisor 0027          ___lwmod@counter 002B  
               stringdir 0400                 stringtab 0400   __size_of_i2c_rep_start 0008  
