

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 05 19:43:17 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207                           
   208                           	psect	idataBANK0
   209  063E                     __pidataBANK0:
   210                           
   211                           ;initializer for _todo
   212  063E  3401               	retlw	1
   213                           
   214                           ;initializer for _ciclo
   215  063F  3401               	retlw	1
   216                           
   217                           	psect	strings
   218  0003                     __pstrings:
   219  0003                     stringtab:
   220  0003                     __stringtab:
   221  0003                     stringcode:	
   222                           ;	String table - string pointers are 1 byte each
   223                           
   224  0003                     stringdir:
   225  0003  3000               	movlw	high stringdir
   226  0004  008A               	movwf	10
   227  0005  0804               	movf	4,w
   228  0006  0A84               	incf	4,f
   229  0007  0782               	addwf	2,f
   230  0008                     __stringbase:
   231  0008  3400               	retlw	0
   232  0009                     __end_of__stringtab:
   233  0009                     _display:
   234  0009  343F               	retlw	63
   235  000A  3406               	retlw	6
   236  000B  345B               	retlw	91
   237  000C  344F               	retlw	79
   238  000D  3466               	retlw	102
   239  000E  346D               	retlw	109
   240  000F  347D               	retlw	125
   241  0010  3407               	retlw	7
   242  0011  347F               	retlw	127
   243  0012  3467               	retlw	103
   244  0013  3477               	retlw	119
   245  0014  347C               	retlw	124
   246  0015  3439               	retlw	57
   247  0016  345E               	retlw	94
   248  0017  3479               	retlw	121
   249  0018  3471               	retlw	113
   250  0019                     __end_of_display:
   251  0007                     _PORTCbits	set	7
   252  001E                     _ADRESH	set	30
   253  000B                     _INTCONbits	set	11
   254  001F                     _ADCON0bits	set	31
   255  0009                     _PORTE	set	9
   256  0008                     _PORTD	set	8
   257  0007                     _PORTC	set	7
   258  0006                     _PORTB	set	6
   259  0005                     _PORTA	set	5
   260  0006                     _PORTBbits	set	6
   261  0096                     _IOCBbits	set	150
   262  0096                     _IOCB	set	150
   263  008C                     _PIE1bits	set	140
   264  009F                     _ADCON1bits	set	159
   265  0089                     _TRISE	set	137
   266  0088                     _TRISD	set	136
   267  0087                     _TRISC	set	135
   268  0086                     _TRISB	set	134
   269  0085                     _TRISA	set	133
   270  008F                     _OSCCONbits	set	143
   271  0188                     _ANSELbits	set	392
   272  0189                     _ANSELH	set	393
   273                           
   274                           	psect	cinit
   275  07E2                     start_initialization:	
   276                           ; #config settings
   277                           
   278  07E2                     __initialization:
   279                           
   280                           ; Initialize objects allocated to BANK0
   281  07E2  120A  118A  263E  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   282  07E7  00AE               	movwf	__pdataBANK0& (0+127)
   283  07E8  120A  118A  263F  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   284  07ED  00AF               	movwf	(__pdataBANK0+1)& (0+127)
   285                           
   286                           ; Clear objects allocated to BANK0
   287  07EE  01A0               	clrf	__pbssBANK0& (0+127)
   288  07EF  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   289  07F0  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   290  07F1  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   291  07F2  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   292  07F3  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   293  07F4  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   294  07F5  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   295  07F6  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   296  07F7  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   297  07F8  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   298  07F9  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   299  07FA  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   300  07FB  01AD               	clrf	(__pbssBANK0+13)& (0+127)
   301  07FC                     end_of_initialization:	
   302                           ;End of C runtime variable initialization code
   303                           
   304  07FC                     __end_of__initialization:
   305  07FC  0183               	clrf	3
   306  07FD  120A  118A  2E40   	ljmp	_main	;jump to C main() function
   307                           
   308                           	psect	bssBANK0
   309  0020                     __pbssBANK0:
   310  0020                     _volt:
   311  0020                     	ds	4
   312  0024                     _suma:
   313  0024                     	ds	2
   314  0026                     _L:
   315  0026                     	ds	2
   316  0028                     _H:
   317  0028                     	ds	2
   318  002A                     _adc:
   319  002A                     	ds	2
   320  002C                     _cont0:
   321  002C                     	ds	2
   322                           
   323                           	psect	dataBANK0
   324  002E                     __pdataBANK0:
   325  002E                     _todo:
   326  002E                     	ds	1
   327  002F                     _ciclo:
   328  002F                     	ds	1
   329                           
   330                           	psect	cstackCOMMON
   331  0070                     __pcstackCOMMON:
   332  0070                     ?_setup:
   333  0070                     ??_setup:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_contadorbinario:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?_main:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?___awdiv:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ___awdiv@divisor:	
   346                           ; 2 bytes @ 0x0
   347                           
   348                           
   349                           ; 2 bytes @ 0x0
   350  0070                     	ds	2
   351  0072                     ___awdiv@dividend:
   352                           
   353                           ; 2 bytes @ 0x2
   354  0072                     	ds	2
   355  0074                     ??___awdiv:
   356                           
   357                           ; 1 bytes @ 0x4
   358  0074                     	ds	1
   359  0075                     ___awdiv@counter:
   360                           
   361                           ; 1 bytes @ 0x5
   362  0075                     	ds	1
   363  0076                     ___awdiv@sign:
   364                           
   365                           ; 1 bytes @ 0x6
   366  0076                     	ds	1
   367  0077                     ___awdiv@quotient:
   368                           
   369                           ; 2 bytes @ 0x7
   370  0077                     	ds	2
   371  0079                     ??_contadorbinario:
   372                           
   373                           ; 1 bytes @ 0x9
   374  0079                     	ds	3
   375  007C                     _contadorbinario$355:
   376                           
   377                           ; 1 bytes @ 0xC
   378  007C                     	ds	1
   379  007D                     _contadorbinario$356:
   380                           
   381                           ; 1 bytes @ 0xD
   382  007D                     	ds	1
   383  007E                     ??_main:
   384                           
   385                           	psect	maintext
   386  0640                     __pmaintext:	
   387                           ; 1 bytes @ 0xE
   388 ;;
   389 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   390 ;;
   391 ;; *************** function _main *****************
   392 ;; Defined at:
   393 ;;		line 61 in file "Lab2_Erick.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;		None
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   402 ;; Tracked objects:
   403 ;;		On entry : B00/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   407 ;;      Params:         0       0       0       0       0
   408 ;;      Locals:         0       0       0       0       0
   409 ;;      Temps:          0       0       0       0       0
   410 ;;      Totals:         0       0       0       0       0
   411 ;;Total ram usage:        0 bytes
   412 ;; Hardware stack levels required when called:    2
   413 ;; This function calls:
   414 ;;		_contadorbinario
   415 ;;		_setup
   416 ;; This function is called by:
   417 ;;		Startup code after reset
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           
   422                           ;psect for function _main
   423  0640                     _main:
   424  0640                     l981:	
   425                           ;incstack = 0
   426                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   427                           
   428                           
   429                           ;Lab2_Erick.c: 64:     setup();
   430  0640  120A  118A  264D  120A  118A  	fcall	_setup
   431  0645                     l983:
   432                           
   433                           ;Lab2_Erick.c: 68:     contadorbinario();
   434  0645  120A  118A  26EA  120A  118A  	fcall	_contadorbinario
   435  064A                     l73:
   436  064A  120A  118A  2800   	ljmp	start
   437  064D                     __end_of_main:
   438                           
   439                           	psect	text1
   440  064D                     __ptext1:	
   441 ;; *************** function _setup *****************
   442 ;; Defined at:
   443 ;;		line 75 in file "Lab2_Erick.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;		None
   446 ;; Auto vars:     Size  Location     Type
   447 ;;		None
   448 ;; Return value:  Size  Location     Type
   449 ;;                  1    wreg      void 
   450 ;; Registers used:
   451 ;;		wreg, status,2, status,0
   452 ;; Tracked objects:
   453 ;;		On entry : 0/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   457 ;;      Params:         0       0       0       0       0
   458 ;;      Locals:         0       0       0       0       0
   459 ;;      Temps:          0       0       0       0       0
   460 ;;      Totals:         0       0       0       0       0
   461 ;;Total ram usage:        0 bytes
   462 ;; Hardware stack levels used:    1
   463 ;; This function calls:
   464 ;;		Nothing
   465 ;; This function is called by:
   466 ;;		_main
   467 ;; This function uses a non-reentrant model
   468 ;;
   469                           
   470                           
   471                           ;psect for function _setup
   472  064D                     _setup:
   473  064D                     l731:	
   474                           ;incstack = 0
   475                           ; Regs used in _setup: [wreg+status,2+status,0]
   476                           
   477                           
   478                           ;Lab2_Erick.c: 78:     OSCCONbits.IRCF = 0b111;
   479  064D  3070               	movlw	112
   480  064E  1683               	bsf	3,5	;RP0=1, select bank1
   481  064F  1303               	bcf	3,6	;RP1=0, select bank1
   482  0650  048F               	iorwf	15,f	;volatile
   483  0651                     l733:
   484                           
   485                           ;Lab2_Erick.c: 79:     OSCCONbits.SCS = 0b00;
   486  0651  100F               	bcf	15,0	;volatile
   487  0652                     l735:
   488                           
   489                           ;Lab2_Erick.c: 82:     TRISA = 0b00000000;
   490  0652  0185               	clrf	5	;volatile
   491  0653                     l737:
   492                           
   493                           ;Lab2_Erick.c: 83:     TRISB = 0b01111111;
   494  0653  307F               	movlw	127
   495  0654  0086               	movwf	6	;volatile
   496  0655                     l739:
   497                           
   498                           ;Lab2_Erick.c: 84:     TRISC = 0b00000000;
   499  0655  0187               	clrf	7	;volatile
   500  0656                     l741:
   501                           
   502                           ;Lab2_Erick.c: 85:     TRISD = 0b00000000;
   503  0656  0188               	clrf	8	;volatile
   504  0657                     l743:
   505                           
   506                           ;Lab2_Erick.c: 86:     TRISE = 1;
   507  0657  3001               	movlw	1
   508  0658  0089               	movwf	9	;volatile
   509  0659                     l745:
   510                           
   511                           ;Lab2_Erick.c: 88:     PORTA = 0b00000000;
   512  0659  1283               	bcf	3,5	;RP0=0, select bank0
   513  065A  1303               	bcf	3,6	;RP1=0, select bank0
   514  065B  0185               	clrf	5	;volatile
   515  065C                     l747:
   516                           
   517                           ;Lab2_Erick.c: 89:     PORTB = 0b00000000;
   518  065C  0186               	clrf	6	;volatile
   519  065D                     l749:
   520                           
   521                           ;Lab2_Erick.c: 90:     PORTC = 0b00000000;
   522  065D  0187               	clrf	7	;volatile
   523  065E                     l751:
   524                           
   525                           ;Lab2_Erick.c: 91:     PORTD = 0b00000000;
   526  065E  0188               	clrf	8	;volatile
   527  065F                     l753:
   528                           
   529                           ;Lab2_Erick.c: 92:     PORTE = 0b00010;
   530  065F  3002               	movlw	2
   531  0660  0089               	movwf	9	;volatile
   532  0661                     l755:
   533                           
   534                           ;Lab2_Erick.c: 93:     ANSELH = 0;
   535  0661  1683               	bsf	3,5	;RP0=1, select bank3
   536  0662  1703               	bsf	3,6	;RP1=1, select bank3
   537  0663  0189               	clrf	9	;volatile
   538  0664                     l757:
   539                           
   540                           ;Lab2_Erick.c: 97:     ANSELbits.ANS6 = 0;
   541  0664  1308               	bcf	8,6	;volatile
   542  0665                     l759:
   543                           
   544                           ;Lab2_Erick.c: 100:     ADCON0bits.ADCS0 = 1;
   545  0665  1283               	bcf	3,5	;RP0=0, select bank0
   546  0666  1303               	bcf	3,6	;RP1=0, select bank0
   547  0667  171F               	bsf	31,6	;volatile
   548  0668                     l761:
   549                           
   550                           ;Lab2_Erick.c: 101:     ADCON0bits.ADCS1 = 0;
   551  0668  139F               	bcf	31,7	;volatile
   552  0669                     l763:
   553                           
   554                           ;Lab2_Erick.c: 104:     ADCON0bits.CHS0 = 0;
   555  0669  111F               	bcf	31,2	;volatile
   556  066A                     l765:
   557                           
   558                           ;Lab2_Erick.c: 105:     ADCON0bits.CHS1 = 1;
   559  066A  159F               	bsf	31,3	;volatile
   560  066B                     l767:
   561                           
   562                           ;Lab2_Erick.c: 106:     ADCON0bits.CHS2 = 1;
   563  066B  161F               	bsf	31,4	;volatile
   564  066C                     l769:
   565                           
   566                           ;Lab2_Erick.c: 107:     ADCON0bits.CHS3 = 0;
   567  066C  129F               	bcf	31,5	;volatile
   568  066D                     l771:
   569                           
   570                           ;Lab2_Erick.c: 110:     ADCON1bits.VCFG0 = 0;
   571  066D  1683               	bsf	3,5	;RP0=1, select bank1
   572  066E  1303               	bcf	3,6	;RP1=0, select bank1
   573  066F  121F               	bcf	31,4	;volatile
   574  0670                     l773:
   575                           
   576                           ;Lab2_Erick.c: 111:     ADCON1bits.VCFG1 = 0;
   577  0670  129F               	bcf	31,5	;volatile
   578  0671                     l775:
   579                           
   580                           ;Lab2_Erick.c: 113:     ADCON1bits.ADFM = 0;
   581  0671  139F               	bcf	31,7	;volatile
   582  0672                     l777:
   583                           
   584                           ;Lab2_Erick.c: 119:     ADCON0bits.GO_DONE = 1;
   585  0672  1283               	bcf	3,5	;RP0=0, select bank0
   586  0673  1303               	bcf	3,6	;RP1=0, select bank0
   587  0674  149F               	bsf	31,1	;volatile
   588  0675                     l779:
   589                           
   590                           ;Lab2_Erick.c: 122:     ADCON0bits.ADON = 1;
   591  0675  141F               	bsf	31,0	;volatile
   592  0676                     l781:
   593                           
   594                           ;Lab2_Erick.c: 126:     INTCONbits.GIE = 1;
   595  0676  178B               	bsf	11,7	;volatile
   596  0677                     l783:
   597                           
   598                           ;Lab2_Erick.c: 127:     PIE1bits.ADIE = 0;
   599  0677  1683               	bsf	3,5	;RP0=1, select bank1
   600  0678  1303               	bcf	3,6	;RP1=0, select bank1
   601  0679  130C               	bcf	12,6	;volatile
   602  067A                     l785:
   603                           
   604                           ;Lab2_Erick.c: 128:     PIE1bits.ADIE = 1;
   605  067A  170C               	bsf	12,6	;volatile
   606  067B                     l787:
   607                           
   608                           ;Lab2_Erick.c: 138:     INTCONbits.GIE = 1;
   609  067B  178B               	bsf	11,7	;volatile
   610  067C                     l789:
   611                           
   612                           ;Lab2_Erick.c: 139:     INTCONbits.RBIF = 0;
   613  067C  100B               	bcf	11,0	;volatile
   614  067D                     l791:
   615                           
   616                           ;Lab2_Erick.c: 140:     INTCONbits.RBIF = 1;
   617  067D  140B               	bsf	11,0	;volatile
   618  067E                     l793:
   619                           
   620                           ;Lab2_Erick.c: 141:     IOCB = 1;
   621  067E  3001               	movlw	1
   622  067F  0096               	movwf	22	;volatile
   623  0680                     l795:
   624                           
   625                           ;Lab2_Erick.c: 142:     IOCBbits.IOCB0 = 1;
   626  0680  1416               	bsf	22,0	;volatile
   627  0681                     l797:
   628                           
   629                           ;Lab2_Erick.c: 143:     IOCBbits.IOCB3 = 1;
   630  0681  1596               	bsf	22,3	;volatile
   631  0682                     l76:
   632  0682  0008               	return
   633  0683                     __end_of_setup:
   634                           
   635                           	psect	text2
   636  06EA                     __ptext2:	
   637 ;; *************** function _contadorbinario *****************
   638 ;; Defined at:
   639 ;;		line 151 in file "Lab2_Erick.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         0       0       0       0       0
   654 ;;      Locals:         2       0       0       0       0
   655 ;;      Temps:          3       0       0       0       0
   656 ;;      Totals:         5       0       0       0       0
   657 ;;Total ram usage:        5 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:    1
   660 ;; This function calls:
   661 ;;		___awdiv
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           
   668                           ;psect for function _contadorbinario
   669  06EA                     _contadorbinario:
   670  06EA                     l915:	
   671                           ;incstack = 0
   672                           ; Regs used in _contadorbinario: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   673                           
   674                           
   675                           ;Lab2_Erick.c: 152:     _delay((unsigned long)((300)*(8000000/4000.0)));
   676  06EA  3004               	movlw	4
   677  06EB  00FB               	movwf	??_contadorbinario+2
   678  06EC  300C               	movlw	12
   679  06ED  00FA               	movwf	??_contadorbinario+1
   680  06EE  3033               	movlw	51
   681  06EF  00F9               	movwf	??_contadorbinario
   682  06F0                     u397:
   683  06F0  0BF9               	decfsz	??_contadorbinario,f
   684  06F1  2EF0               	goto	u397
   685  06F2  0BFA               	decfsz	??_contadorbinario+1,f
   686  06F3  2EF0               	goto	u397
   687  06F4  0BFB               	decfsz	??_contadorbinario+2,f
   688  06F5  2EF0               	goto	u397
   689  06F6  2EF7               	nop2
   690  06F7                     l917:
   691                           
   692                           ;Lab2_Erick.c: 154:         if (IOCBbits.IOCB0 = 1 && PORTBbits.RB0 == 1) {
   693  06F7  01FC               	clrf	_contadorbinario$355
   694  06F8                     l919:
   695  06F8  1283               	bcf	3,5	;RP0=0, select bank0
   696  06F9  1303               	bcf	3,6	;RP1=0, select bank0
   697  06FA  1C06               	btfss	6,0	;volatile
   698  06FB  2EFD               	goto	u301
   699  06FC  2EFE               	goto	u300
   700  06FD                     u301:
   701  06FD  2F00               	goto	l923
   702  06FE                     u300:
   703  06FE                     l921:
   704  06FE  01FC               	clrf	_contadorbinario$355
   705  06FF  0AFC               	incf	_contadorbinario$355,f
   706  0700                     l923:
   707  0700  1683               	bsf	3,5	;RP0=1, select bank1
   708  0701  1303               	bcf	3,6	;RP1=0, select bank1
   709  0702  0816               	movf	22,w	;volatile
   710  0703  067C               	xorwf	_contadorbinario$355,w
   711  0704  39FE               	andlw	-2
   712  0705  067C               	xorwf	_contadorbinario$355,w
   713  0706  0096               	movwf	22	;volatile
   714  0707  0816               	movf	22,w	;volatile
   715  0708  3901               	andlw	1
   716  0709  3A00               	xorlw	0
   717  070A  1903               	skipnz
   718  070B  2F0D               	goto	u311
   719  070C  2F0E               	goto	u310
   720  070D                     u311:
   721  070D  2F2D               	goto	l933
   722  070E                     u310:
   723  070E                     l925:
   724                           
   725                           ;Lab2_Erick.c: 156:             cont0++;
   726  070E  3001               	movlw	1
   727  070F  1283               	bcf	3,5	;RP0=0, select bank0
   728  0710  1303               	bcf	3,6	;RP1=0, select bank0
   729  0711  07AC               	addwf	_cont0,f
   730  0712  1803               	skipnc
   731  0713  0AAD               	incf	_cont0+1,f
   732  0714  3000               	movlw	0
   733  0715  07AD               	addwf	_cont0+1,f
   734                           
   735                           ;Lab2_Erick.c: 157:             _delay((unsigned long)((500)*(8000000/4000.0)));
   736  0716  3006               	movlw	6
   737  0717  00FB               	movwf	??_contadorbinario+2
   738  0718  3013               	movlw	19
   739  0719  00FA               	movwf	??_contadorbinario+1
   740  071A  30AD               	movlw	173
   741  071B  00F9               	movwf	??_contadorbinario
   742  071C                     u407:
   743  071C  0BF9               	decfsz	??_contadorbinario,f
   744  071D  2F1C               	goto	u407
   745  071E  0BFA               	decfsz	??_contadorbinario+1,f
   746  071F  2F1C               	goto	u407
   747  0720  0BFB               	decfsz	??_contadorbinario+2,f
   748  0721  2F1C               	goto	u407
   749  0722  2F23               	nop2
   750  0723                     l927:
   751                           
   752                           ;Lab2_Erick.c: 158:             IOCBbits.IOCB0 = 0;
   753  0723  1683               	bsf	3,5	;RP0=1, select bank1
   754  0724  1303               	bcf	3,6	;RP1=0, select bank1
   755  0725  1016               	bcf	22,0	;volatile
   756  0726                     l929:
   757                           
   758                           ;Lab2_Erick.c: 161:             } while (PORTBbits.RB0 == 1);
   759  0726  1283               	bcf	3,5	;RP0=0, select bank0
   760  0727  1806               	btfsc	6,0	;volatile
   761  0728  2F2A               	goto	u321
   762  0729  2F2B               	goto	u320
   763  072A                     u321:
   764  072A  2F26               	goto	l929
   765  072B                     u320:
   766  072B                     l931:
   767                           
   768                           ;Lab2_Erick.c: 162:             PORTA = cont0;
   769  072B  082C               	movf	_cont0,w
   770  072C  0085               	movwf	5	;volatile
   771  072D                     l933:
   772                           
   773                           ;Lab2_Erick.c: 164:         if (IOCBbits.IOCB3 = 1 && PORTBbits.RB3 == 1) {
   774  072D  01FD               	clrf	_contadorbinario$356
   775  072E                     l935:
   776  072E  1283               	bcf	3,5	;RP0=0, select bank0
   777  072F  1D86               	btfss	6,3	;volatile
   778  0730  2F32               	goto	u331
   779  0731  2F33               	goto	u330
   780  0732                     u331:
   781  0732  2F35               	goto	l939
   782  0733                     u330:
   783  0733                     l937:
   784  0733  01FD               	clrf	_contadorbinario$356
   785  0734  0AFD               	incf	_contadorbinario$356,f
   786  0735                     l939:
   787  0735  087D               	movf	_contadorbinario$356,w
   788  0736  00F9               	movwf	??_contadorbinario
   789  0737  0DF9               	rlf	??_contadorbinario,f
   790  0738  0DF9               	rlf	??_contadorbinario,f
   791  0739  0DF9               	rlf	??_contadorbinario,f
   792  073A  1683               	bsf	3,5	;RP0=1, select bank1
   793  073B  1303               	bcf	3,6	;RP1=0, select bank1
   794  073C  0816               	movf	22,w	;volatile
   795  073D  0679               	xorwf	??_contadorbinario,w
   796  073E  39F7               	andlw	-9
   797  073F  0679               	xorwf	??_contadorbinario,w
   798  0740  0096               	movwf	22	;volatile
   799  0741  0C16               	rrf	22,w	;volatile
   800  0742  00FA               	movwf	??_contadorbinario+1
   801  0743  0CFA               	rrf	??_contadorbinario+1,f
   802  0744  0C7A               	rrf	??_contadorbinario+1,w
   803  0745  3901               	andlw	1
   804  0746  3A00               	xorlw	0
   805  0747  1903               	skipnz
   806  0748  2F4A               	goto	u341
   807  0749  2F4B               	goto	u340
   808  074A                     u341:
   809  074A  2F6B               	goto	l949
   810  074B                     u340:
   811  074B                     l941:
   812                           
   813                           ;Lab2_Erick.c: 165:             cont0--;
   814  074B  30FF               	movlw	255
   815  074C  1283               	bcf	3,5	;RP0=0, select bank0
   816  074D  1303               	bcf	3,6	;RP1=0, select bank0
   817  074E  07AC               	addwf	_cont0,f
   818  074F  1803               	skipnc
   819  0750  0AAD               	incf	_cont0+1,f
   820  0751  30FF               	movlw	255
   821  0752  07AD               	addwf	_cont0+1,f
   822                           
   823                           ;Lab2_Erick.c: 166:             _delay((unsigned long)((500)*(8000000/4000.0)));
   824  0753  3006               	movlw	6
   825  0754  00FB               	movwf	??_contadorbinario+2
   826  0755  3013               	movlw	19
   827  0756  00FA               	movwf	??_contadorbinario+1
   828  0757  30AD               	movlw	173
   829  0758  00F9               	movwf	??_contadorbinario
   830  0759                     u417:
   831  0759  0BF9               	decfsz	??_contadorbinario,f
   832  075A  2F59               	goto	u417
   833  075B  0BFA               	decfsz	??_contadorbinario+1,f
   834  075C  2F59               	goto	u417
   835  075D  0BFB               	decfsz	??_contadorbinario+2,f
   836  075E  2F59               	goto	u417
   837  075F  2F60               	nop2
   838  0760                     l943:
   839                           
   840                           ;Lab2_Erick.c: 169:             } while (PORTBbits.RB3 == 1);
   841  0760  1283               	bcf	3,5	;RP0=0, select bank0
   842  0761  1303               	bcf	3,6	;RP1=0, select bank0
   843  0762  1986               	btfsc	6,3	;volatile
   844  0763  2F65               	goto	u351
   845  0764  2F66               	goto	u350
   846  0765                     u351:
   847  0765  2F60               	goto	l943
   848  0766                     u350:
   849  0766                     l945:
   850                           
   851                           ;Lab2_Erick.c: 170:             PORTA = cont0;
   852  0766  082C               	movf	_cont0,w
   853  0767  0085               	movwf	5	;volatile
   854  0768                     l947:
   855                           
   856                           ;Lab2_Erick.c: 171:             IOCBbits.IOCB3 = 0;
   857  0768  1683               	bsf	3,5	;RP0=1, select bank1
   858  0769  1303               	bcf	3,6	;RP1=0, select bank1
   859  076A  1196               	bcf	22,3	;volatile
   860  076B                     l949:
   861                           
   862                           ;Lab2_Erick.c: 173:         if (cont0 > 255) {
   863  076B  1283               	bcf	3,5	;RP0=0, select bank0
   864  076C  1303               	bcf	3,6	;RP1=0, select bank0
   865  076D  082D               	movf	_cont0+1,w
   866  076E  3A80               	xorlw	128
   867  076F  00FF               	movwf	btemp+1
   868  0770  3081               	movlw	129
   869  0771  027F               	subwf	btemp+1,w
   870  0772  1D03               	skipz
   871  0773  2F76               	goto	u365
   872  0774  3000               	movlw	0
   873  0775  022C               	subwf	_cont0,w
   874  0776                     u365:
   875  0776  1C03               	skipc
   876  0777  2F79               	goto	u361
   877  0778  2F7A               	goto	u360
   878  0779                     u361:
   879  0779  2F7E               	goto	l953
   880  077A                     u360:
   881  077A                     l951:
   882                           
   883                           ;Lab2_Erick.c: 174:             cont0 = 0;
   884  077A  1283               	bcf	3,5	;RP0=0, select bank0
   885  077B  1303               	bcf	3,6	;RP1=0, select bank0
   886  077C  01AC               	clrf	_cont0
   887  077D  01AD               	clrf	_cont0+1
   888  077E                     l953:
   889                           
   890                           ;Lab2_Erick.c: 177:         if (ADCON0bits.GO_DONE == 0) {
   891  077E  1283               	bcf	3,5	;RP0=0, select bank0
   892  077F  1303               	bcf	3,6	;RP1=0, select bank0
   893  0780  189F               	btfsc	31,1	;volatile
   894  0781  2F83               	goto	u371
   895  0782  2F84               	goto	u370
   896  0783                     u371:
   897  0783  2FCB               	goto	l977
   898  0784                     u370:
   899  0784                     l955:
   900                           
   901                           ;Lab2_Erick.c: 179:             H = ADRESH;
   902  0784  081E               	movf	30,w	;volatile
   903  0785  00F9               	movwf	??_contadorbinario
   904  0786  01FA               	clrf	??_contadorbinario+1
   905  0787  0879               	movf	??_contadorbinario,w
   906  0788  00A8               	movwf	_H
   907  0789  087A               	movf	??_contadorbinario+1,w
   908  078A  00A9               	movwf	_H+1
   909                           
   910                           ;Lab2_Erick.c: 180:             L = ADRESH;
   911  078B  081E               	movf	30,w	;volatile
   912  078C  00F9               	movwf	??_contadorbinario
   913  078D  01FA               	clrf	??_contadorbinario+1
   914  078E  0879               	movf	??_contadorbinario,w
   915  078F  00A6               	movwf	_L
   916  0790  087A               	movf	??_contadorbinario+1,w
   917  0791  00A7               	movwf	_L+1
   918  0792                     l957:
   919                           
   920                           ;Lab2_Erick.c: 182:             H = ((H/16)%16);
   921  0792  3010               	movlw	16
   922  0793  00F0               	movwf	___awdiv@divisor
   923  0794  3000               	movlw	0
   924  0795  00F1               	movwf	___awdiv@divisor+1
   925  0796  0829               	movf	_H+1,w
   926  0797  00F3               	movwf	___awdiv@dividend+1
   927  0798  0828               	movf	_H,w
   928  0799  00F2               	movwf	___awdiv@dividend
   929  079A  120A  118A  2683  120A  118A  	fcall	___awdiv
   930  079F  300F               	movlw	15
   931  07A0  0570               	andwf	?___awdiv,w
   932  07A1  1283               	bcf	3,5	;RP0=0, select bank0
   933  07A2  1303               	bcf	3,6	;RP1=0, select bank0
   934  07A3  00A8               	movwf	_H
   935  07A4  3000               	movlw	0
   936  07A5  0571               	andwf	?___awdiv+1,w
   937  07A6  00A9               	movwf	_H+1
   938  07A7                     l959:
   939                           
   940                           ;Lab2_Erick.c: 183:             L = (L%16);
   941  07A7  300F               	movlw	15
   942  07A8  0526               	andwf	_L,w
   943  07A9  00A6               	movwf	_L
   944  07AA  3000               	movlw	0
   945  07AB  0527               	andwf	_L+1,w
   946  07AC  00A7               	movwf	_L+1
   947  07AD                     l961:
   948                           
   949                           ;Lab2_Erick.c: 184:             suma = ADRESH;
   950  07AD  081E               	movf	30,w	;volatile
   951  07AE  00F9               	movwf	??_contadorbinario
   952  07AF  01FA               	clrf	??_contadorbinario+1
   953  07B0  0879               	movf	??_contadorbinario,w
   954  07B1  00A4               	movwf	_suma
   955  07B2  087A               	movf	??_contadorbinario+1,w
   956  07B3  00A5               	movwf	_suma+1
   957  07B4                     l963:
   958                           
   959                           ;Lab2_Erick.c: 185:             PORTD = display[H];
   960  07B4  0828               	movf	_H,w
   961  07B5  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
   962  07B6  0084               	movwf	4
   963  07B7  120A  118A  2003  120A  118A  	fcall	stringdir
   964  07BC  0088               	movwf	8	;volatile
   965  07BD                     l965:
   966                           
   967                           ;Lab2_Erick.c: 186:             PORTCbits.RC0 = 1;
   968  07BD  1407               	bsf	7,0	;volatile
   969  07BE                     l967:
   970                           
   971                           ;Lab2_Erick.c: 187:             PORTCbits.RC0 = 0;
   972  07BE  1007               	bcf	7,0	;volatile
   973  07BF                     l969:
   974                           
   975                           ;Lab2_Erick.c: 189:             PORTD = display[L];
   976  07BF  0826               	movf	_L,w
   977  07C0  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
   978  07C1  0084               	movwf	4
   979  07C2  120A  118A  2003  120A  118A  	fcall	stringdir
   980  07C7  0088               	movwf	8	;volatile
   981  07C8                     l971:
   982                           
   983                           ;Lab2_Erick.c: 191:             PORTCbits.RC1 = 1;
   984  07C8  1487               	bsf	7,1	;volatile
   985  07C9                     l973:
   986                           
   987                           ;Lab2_Erick.c: 192:             PORTCbits.RC1 = 0;
   988  07C9  1087               	bcf	7,1	;volatile
   989  07CA                     l975:
   990                           
   991                           ;Lab2_Erick.c: 193:             ADCON0bits.GO_DONE =1;
   992  07CA  149F               	bsf	31,1	;volatile
   993  07CB                     l977:
   994                           
   995                           ;Lab2_Erick.c: 200:         if (cont0<suma){
   996  07CB  082D               	movf	_cont0+1,w
   997  07CC  3A80               	xorlw	128
   998  07CD  00F9               	movwf	??_contadorbinario
   999  07CE  0825               	movf	_suma+1,w
  1000  07CF  3A80               	xorlw	128
  1001  07D0  0279               	subwf	??_contadorbinario,w
  1002  07D1  1D03               	skipz
  1003  07D2  2FD5               	goto	u385
  1004  07D3  0824               	movf	_suma,w
  1005  07D4  022C               	subwf	_cont0,w
  1006  07D5                     u385:
  1007  07D5  1803               	skipnc
  1008  07D6  2FD8               	goto	u381
  1009  07D7  2FD9               	goto	u380
  1010  07D8                     u381:
  1011  07D8  2FDD               	goto	l92
  1012  07D9                     u380:
  1013  07D9                     l979:
  1014                           
  1015                           ;Lab2_Erick.c: 201:             PORTBbits.RB7 = 1;
  1016  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  1017  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  1018  07DB  1786               	bsf	6,7	;volatile
  1019                           
  1020                           ;Lab2_Erick.c: 202:         }
  1021  07DC  2EF7               	goto	l917
  1022  07DD                     l92:	
  1023                           ;Lab2_Erick.c: 203:         else{
  1024                           
  1025                           
  1026                           ;Lab2_Erick.c: 204:             PORTBbits.RB7 = 0;
  1027  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  1028  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  1029  07DF  1386               	bcf	6,7	;volatile
  1030  07E0  2EF7               	goto	l917
  1031  07E1  0008               	return
  1032  07E2                     __end_of_contadorbinario:
  1033                           
  1034                           	psect	text3
  1035  0683                     __ptext3:	
  1036 ;; *************** function ___awdiv *****************
  1037 ;; Defined at:
  1038 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  divisor         2    0[COMMON] int 
  1041 ;;  dividend        2    2[COMMON] int 
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;  quotient        2    7[COMMON] int 
  1044 ;;  sign            1    6[COMMON] unsigned char 
  1045 ;;  counter         1    5[COMMON] unsigned char 
  1046 ;; Return value:  Size  Location     Type
  1047 ;;                  2    0[COMMON] int 
  1048 ;; Registers used:
  1049 ;;		wreg, status,2, status,0
  1050 ;; Tracked objects:
  1051 ;;		On entry : 0/0
  1052 ;;		On exit  : 0/0
  1053 ;;		Unchanged: 0/0
  1054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1055 ;;      Params:         4       0       0       0       0
  1056 ;;      Locals:         4       0       0       0       0
  1057 ;;      Temps:          1       0       0       0       0
  1058 ;;      Totals:         9       0       0       0       0
  1059 ;;Total ram usage:        9 bytes
  1060 ;; Hardware stack levels used:    1
  1061 ;; This function calls:
  1062 ;;		Nothing
  1063 ;; This function is called by:
  1064 ;;		_contadorbinario
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           
  1069                           ;psect for function ___awdiv
  1070  0683                     ___awdiv:
  1071  0683                     l871:	
  1072                           ;incstack = 0
  1073                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1074                           
  1075  0683  01F6               	clrf	___awdiv@sign
  1076  0684                     l873:
  1077  0684  1FF1               	btfss	___awdiv@divisor+1,7
  1078  0685  2E87               	goto	u201
  1079  0686  2E88               	goto	u200
  1080  0687                     u201:
  1081  0687  2E8F               	goto	l879
  1082  0688                     u200:
  1083  0688                     l875:
  1084  0688  09F0               	comf	___awdiv@divisor,f
  1085  0689  09F1               	comf	___awdiv@divisor+1,f
  1086  068A  0AF0               	incf	___awdiv@divisor,f
  1087  068B  1903               	skipnz
  1088  068C  0AF1               	incf	___awdiv@divisor+1,f
  1089  068D                     l877:
  1090  068D  01F6               	clrf	___awdiv@sign
  1091  068E  0AF6               	incf	___awdiv@sign,f
  1092  068F                     l879:
  1093  068F  1FF3               	btfss	___awdiv@dividend+1,7
  1094  0690  2E92               	goto	u211
  1095  0691  2E93               	goto	u210
  1096  0692                     u211:
  1097  0692  2E9C               	goto	l885
  1098  0693                     u210:
  1099  0693                     l881:
  1100  0693  09F2               	comf	___awdiv@dividend,f
  1101  0694  09F3               	comf	___awdiv@dividend+1,f
  1102  0695  0AF2               	incf	___awdiv@dividend,f
  1103  0696  1903               	skipnz
  1104  0697  0AF3               	incf	___awdiv@dividend+1,f
  1105  0698                     l883:
  1106  0698  3001               	movlw	1
  1107  0699  00F4               	movwf	??___awdiv
  1108  069A  0874               	movf	??___awdiv,w
  1109  069B  06F6               	xorwf	___awdiv@sign,f
  1110  069C                     l885:
  1111  069C  01F7               	clrf	___awdiv@quotient
  1112  069D  01F8               	clrf	___awdiv@quotient+1
  1113  069E                     l887:
  1114  069E  0870               	movf	___awdiv@divisor,w
  1115  069F  0471               	iorwf	___awdiv@divisor+1,w
  1116  06A0  1903               	btfsc	3,2
  1117  06A1  2EA3               	goto	u221
  1118  06A2  2EA4               	goto	u220
  1119  06A3                     u221:
  1120  06A3  2EDB               	goto	l907
  1121  06A4                     u220:
  1122  06A4                     l889:
  1123  06A4  01F5               	clrf	___awdiv@counter
  1124  06A5  0AF5               	incf	___awdiv@counter,f
  1125  06A6  2EB2               	goto	l895
  1126  06A7                     l891:
  1127  06A7  3001               	movlw	1
  1128  06A8                     u235:
  1129  06A8  1003               	clrc
  1130  06A9  0DF0               	rlf	___awdiv@divisor,f
  1131  06AA  0DF1               	rlf	___awdiv@divisor+1,f
  1132  06AB  3EFF               	addlw	-1
  1133  06AC  1D03               	skipz
  1134  06AD  2EA8               	goto	u235
  1135  06AE                     l893:
  1136  06AE  3001               	movlw	1
  1137  06AF  00F4               	movwf	??___awdiv
  1138  06B0  0874               	movf	??___awdiv,w
  1139  06B1  07F5               	addwf	___awdiv@counter,f
  1140  06B2                     l895:
  1141  06B2  1FF1               	btfss	___awdiv@divisor+1,7
  1142  06B3  2EB5               	goto	u241
  1143  06B4  2EB6               	goto	u240
  1144  06B5                     u241:
  1145  06B5  2EA7               	goto	l891
  1146  06B6                     u240:
  1147  06B6                     l897:
  1148  06B6  3001               	movlw	1
  1149  06B7                     u255:
  1150  06B7  1003               	clrc
  1151  06B8  0DF7               	rlf	___awdiv@quotient,f
  1152  06B9  0DF8               	rlf	___awdiv@quotient+1,f
  1153  06BA  3EFF               	addlw	-1
  1154  06BB  1D03               	skipz
  1155  06BC  2EB7               	goto	u255
  1156  06BD  0871               	movf	___awdiv@divisor+1,w
  1157  06BE  0273               	subwf	___awdiv@dividend+1,w
  1158  06BF  1D03               	skipz
  1159  06C0  2EC3               	goto	u265
  1160  06C1  0870               	movf	___awdiv@divisor,w
  1161  06C2  0272               	subwf	___awdiv@dividend,w
  1162  06C3                     u265:
  1163  06C3  1C03               	skipc
  1164  06C4  2EC6               	goto	u261
  1165  06C5  2EC7               	goto	u260
  1166  06C6                     u261:
  1167  06C6  2ECE               	goto	l903
  1168  06C7                     u260:
  1169  06C7                     l899:
  1170  06C7  0870               	movf	___awdiv@divisor,w
  1171  06C8  02F2               	subwf	___awdiv@dividend,f
  1172  06C9  0871               	movf	___awdiv@divisor+1,w
  1173  06CA  1C03               	skipc
  1174  06CB  03F3               	decf	___awdiv@dividend+1,f
  1175  06CC  02F3               	subwf	___awdiv@dividend+1,f
  1176  06CD                     l901:
  1177  06CD  1477               	bsf	___awdiv@quotient,0
  1178  06CE                     l903:
  1179  06CE  3001               	movlw	1
  1180  06CF                     u275:
  1181  06CF  1003               	clrc
  1182  06D0  0CF1               	rrf	___awdiv@divisor+1,f
  1183  06D1  0CF0               	rrf	___awdiv@divisor,f
  1184  06D2  3EFF               	addlw	-1
  1185  06D3  1D03               	skipz
  1186  06D4  2ECF               	goto	u275
  1187  06D5                     l905:
  1188  06D5  3001               	movlw	1
  1189  06D6  02F5               	subwf	___awdiv@counter,f
  1190  06D7  1D03               	btfss	3,2
  1191  06D8  2EDA               	goto	u281
  1192  06D9  2EDB               	goto	u280
  1193  06DA                     u281:
  1194  06DA  2EB6               	goto	l897
  1195  06DB                     u280:
  1196  06DB                     l907:
  1197  06DB  0876               	movf	___awdiv@sign,w
  1198  06DC  1903               	btfsc	3,2
  1199  06DD  2EDF               	goto	u291
  1200  06DE  2EE0               	goto	u290
  1201  06DF                     u291:
  1202  06DF  2EE5               	goto	l911
  1203  06E0                     u290:
  1204  06E0                     l909:
  1205  06E0  09F7               	comf	___awdiv@quotient,f
  1206  06E1  09F8               	comf	___awdiv@quotient+1,f
  1207  06E2  0AF7               	incf	___awdiv@quotient,f
  1208  06E3  1903               	skipnz
  1209  06E4  0AF8               	incf	___awdiv@quotient+1,f
  1210  06E5                     l911:
  1211  06E5  0878               	movf	___awdiv@quotient+1,w
  1212  06E6  00F1               	movwf	?___awdiv+1
  1213  06E7  0877               	movf	___awdiv@quotient,w
  1214  06E8  00F0               	movwf	?___awdiv
  1215  06E9                     l334:
  1216  06E9  0008               	return
  1217  06EA                     __end_of___awdiv:
  1218  007E                     btemp	set	126	;btemp
  1219  007E                     wtemp0	set	126
  1220                           
  1221                           	psect	config
  1222                           
  1223                           ;Config register CONFIG1 @ 0x2007
  1224                           ;	Oscillator Selection bits
  1225                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1226                           ;	Watchdog Timer Enable bit
  1227                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1228                           ;	Power-up Timer Enable bit
  1229                           ;	PWRTE = OFF, PWRT disabled
  1230                           ;	RE3/MCLR pin function select bit
  1231                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1232                           ;	Code Protection bit
  1233                           ;	CP = OFF, Program memory code protection is disabled
  1234                           ;	Data Code Protection bit
  1235                           ;	CPD = OFF, Data memory code protection is disabled
  1236                           ;	Brown Out Reset Selection bits
  1237                           ;	BOREN = OFF, BOR disabled
  1238                           ;	Internal External Switchover bit
  1239                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1240                           ;	Fail-Safe Clock Monitor Enabled bit
  1241                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1242                           ;	Low Voltage Programming Enable bit
  1243                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1244                           ;	In-Circuit Debugger Mode bit
  1245                           ;	DEBUG = 0x1, unprogrammed default
  1246  2007                     	org	8199
  1247  2007  20D4               	dw	8404
  1248                           
  1249                           ;Config register CONFIG2 @ 0x2008
  1250                           ;	Brown-out Reset Selection bit
  1251                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1252                           ;	Flash Program Memory Self Write Enable bits
  1253                           ;	WRT = OFF, Write protection off
  1254  2008                     	org	8200
  1255  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    16
    Data        2
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_contadorbinario
    _contadorbinario->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     500
                    _contadorbinario
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _contadorbinario                                      5     5      0     500
                                              9 COMMON     5     5      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _contadorbinario
     ___awdiv
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1E      12        0.0%
ABS                  0      0      1E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 05 19:43:17 2021

                       _H 0028                         _L 0026                         pc 0002  
                      l73 064A                        l92 07DD                        l76 0682  
            ___awdiv@sign 0076                        fsr 0004                       l334 06E9  
                     l731 064D                       l901 06CD                       l741 0656  
                     l733 0651                       l911 06E5                       l903 06CE  
                     l751 065E                       l743 0657                       l735 0652  
                     l905 06D5                       l921 06FE                       l761 0668  
                     l753 065F                       l745 0659                       l737 0653  
                     l907 06DB                       l931 072B                       l923 0700  
                     l915 06EA                       l771 066D                       l763 0669  
                     l755 0661                       l747 065C                       l739 0655  
                     l909 06E0                       l941 074B                       l925 070E  
                     l933 072D                       l917 06F7                       l781 0676  
                     l773 0670                       l765 066A                       l757 0664  
                     l749 065D                       l871 0683                       l951 077A  
                     l943 0760                       l935 072E                       l927 0723  
                     l919 06F8                       l791 067D                       l783 0677  
                     l775 0671                       l767 066B                       l759 0665  
                     l881 0693                       l873 0684                       l961 07AD  
                     l953 077E                       l945 0766                       l937 0733  
                     l929 0726                       l793 067E                       l785 067A  
                     l777 0672                       l769 066C                       l891 06A7  
                     l883 0698                       l875 0688                       l971 07C8  
                     l963 07B4                       l955 0784                       l947 0768  
                     l939 0735                       l795 0680                       l787 067B  
                     l779 0675                       l893 06AE                       l885 069C  
                     l877 068D                       l973 07C9                       l965 07BD  
                     l957 0792                       l949 076B                       l797 0681  
                     l789 067C                       l981 0640                       l895 06B2  
                     l887 069E                       l879 068F                       l975 07CA  
                     l967 07BE                       l959 07A7                       l983 0645  
                     l897 06B6                       l889 06A4                       l969 07BF  
                     l977 07CB                       l899 06C7                       l979 07D9  
                     u200 0688                       u201 0687                       u210 0693  
                     u211 0692                       u220 06A4                       u300 06FE  
                     u221 06A3                       u301 06FD                       u310 070E  
                     u311 070D                       u240 06B6                       u320 072B  
                     u241 06B5                       u321 072A                       u330 0733  
                     u235 06A8                       u331 0732                       u260 06C7  
                     u340 074B                       u261 06C6                       u341 074A  
                     u350 0766                       u255 06B7                       u351 0765  
                     u407 071C                       u280 06DB                       u360 077A  
                     u281 06DA                       u265 06C3                       u361 0779  
                     u417 0759                       u290 06E0                       u370 0784  
                     u291 06DF                       u275 06CF                       u371 0783  
                     u380 07D9                       u381 07D8                       u365 0776  
                     u385 07D5                       u397 06F0                       _adc 002A  
                     fsr0 0004                      _IOCB 0096                      _main 0640  
                    _todo 002E                      _suma 0024                      btemp 007E  
                    _volt 0020                      start 0000                     ?_main 0070  
         __end_of___awdiv 06EA           ___awdiv@divisor 0070           ___awdiv@counter 0075  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TRISE 0089           _contadorbinario 06EA           __end_of_display 0019  
                   _ciclo 002F                     _cont0 002C                     _setup 064D  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __initialization 07E2              __end_of_main 064D                    ??_main 007E  
                  _ADRESH 001E          ___awdiv@dividend 0072                    ?_setup 0070  
                  _ANSELH 0189                 ??___awdiv 0074   __end_of_contadorbinario 07E2  
        ___awdiv@quotient 0077   __end_of__initialization 07FC            __pcstackCOMMON 0070  
            __pidataBANK0 063E             __end_of_setup 0683                   ??_setup 0070  
              __pbssBANK0 0020                __pmaintext 0640          ?_contadorbinario 0070  
              __stringtab 0003                   ___awdiv 0683                 _ANSELbits 0188  
                 __ptext1 064D                   __ptext2 06EA                   __ptext3 0683  
                 _display 0009      end_of_initialization 07FC                 _PORTBbits 0006  
               _PORTCbits 0007       _contadorbinario$355 007C       _contadorbinario$356 007D  
     start_initialization 07E2               __pdataBANK0 002E                 ___latbits 0002  
                ?___awdiv 0070                 __pstrings 0003  __size_of_contadorbinario 00F8  
          __size_of_setup 0036                  _IOCBbits 0096                  _PIE1bits 008C  
              _ADCON0bits 001F               __stringbase 0008                _ADCON1bits 009F  
        __size_of___awdiv 0067        __end_of__stringtab 0009         ??_contadorbinario 0079  
           __size_of_main 000D                _INTCONbits 000B                 stringcode 0003  
              _OSCCONbits 008F                  stringdir 0003                  stringtab 0003  
