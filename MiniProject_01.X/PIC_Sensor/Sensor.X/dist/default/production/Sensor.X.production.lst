

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 21:24:43 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F887 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  008F                     	;# 
   120  0090                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  0105                     	;# 
   139  0107                     	;# 
   140  0108                     	;# 
   141  0109                     	;# 
   142  010C                     	;# 
   143  010C                     	;# 
   144  010D                     	;# 
   145  010E                     	;# 
   146  010F                     	;# 
   147  0185                     	;# 
   148  0187                     	;# 
   149  0188                     	;# 
   150  0189                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0000                     	;# 
   154  0001                     	;# 
   155  0002                     	;# 
   156  0003                     	;# 
   157  0004                     	;# 
   158  0005                     	;# 
   159  0006                     	;# 
   160  0007                     	;# 
   161  0008                     	;# 
   162  0009                     	;# 
   163  000A                     	;# 
   164  000B                     	;# 
   165  000C                     	;# 
   166  000D                     	;# 
   167  000E                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0015                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001B                     	;# 
   184  001C                     	;# 
   185  001D                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  0087                     	;# 
   192  0088                     	;# 
   193  0089                     	;# 
   194  008C                     	;# 
   195  008D                     	;# 
   196  008E                     	;# 
   197  008F                     	;# 
   198  0090                     	;# 
   199  0091                     	;# 
   200  0092                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0093                     	;# 
   204  0094                     	;# 
   205  0095                     	;# 
   206  0096                     	;# 
   207  0097                     	;# 
   208  0098                     	;# 
   209  0099                     	;# 
   210  009A                     	;# 
   211  009B                     	;# 
   212  009C                     	;# 
   213  009D                     	;# 
   214  009E                     	;# 
   215  009F                     	;# 
   216  0105                     	;# 
   217  0107                     	;# 
   218  0108                     	;# 
   219  0109                     	;# 
   220  010C                     	;# 
   221  010C                     	;# 
   222  010D                     	;# 
   223  010E                     	;# 
   224  010F                     	;# 
   225  0185                     	;# 
   226  0187                     	;# 
   227  0188                     	;# 
   228  0189                     	;# 
   229  018C                     	;# 
   230  018D                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  000E                     	;# 
   246  000E                     	;# 
   247  000F                     	;# 
   248  0010                     	;# 
   249  0011                     	;# 
   250  0012                     	;# 
   251  0013                     	;# 
   252  0014                     	;# 
   253  0015                     	;# 
   254  0015                     	;# 
   255  0016                     	;# 
   256  0017                     	;# 
   257  0018                     	;# 
   258  0019                     	;# 
   259  001A                     	;# 
   260  001B                     	;# 
   261  001B                     	;# 
   262  001C                     	;# 
   263  001D                     	;# 
   264  001E                     	;# 
   265  001F                     	;# 
   266  0081                     	;# 
   267  0085                     	;# 
   268  0086                     	;# 
   269  0087                     	;# 
   270  0088                     	;# 
   271  0089                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  008E                     	;# 
   275  008F                     	;# 
   276  0090                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  0105                     	;# 
   295  0107                     	;# 
   296  0108                     	;# 
   297  0109                     	;# 
   298  010C                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  0185                     	;# 
   304  0187                     	;# 
   305  0188                     	;# 
   306  0189                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309                           
   310                           	psect	strings
   311  0800                     __pstrings:
   312  0800                     stringtab:
   313  0800                     __stringtab:
   314  0800                     stringcode:	
   315                           ;	String table - string pointers are 1 byte each
   316                           
   317  0800                     stringdir:
   318  0800  3008               	movlw	high stringdir
   319  0801  008A               	movwf	10
   320  0802  0804               	movf	4,w
   321  0803  0A84               	incf	4,f
   322  0804  0782               	addwf	2,f
   323  0805                     __stringbase:
   324  0805  3400               	retlw	0
   325  0806                     __end_of__stringtab:
   326  0806                     _dpowers:
   327  0806  3401               	retlw	1
   328  0807  3400               	retlw	0
   329  0808  340A               	retlw	10
   330  0809  3400               	retlw	0
   331  080A  3464               	retlw	100
   332  080B  3400               	retlw	0
   333  080C  34E8               	retlw	232
   334  080D  3403               	retlw	3
   335  080E  3410               	retlw	16
   336  080F  3427               	retlw	39
   337  0810                     __end_of_dpowers:
   338  0001                     _TMR0	set	1
   339  000B                     _INTCONbits	set	11
   340  0009                     _PORTE	set	9
   341  0007                     _PORTC	set	7
   342  0006                     _PORTB	set	6
   343  0005                     _PORTA	set	5
   344  0009                     _PORTEbits	set	9
   345  0008                     _PORTD	set	8
   346  0007                     _PORTCbits	set	7
   347  000C                     _PIR1bits	set	12
   348  001E                     _ADRESH	set	30
   349  001F                     _ADCON0bits	set	31
   350  008C                     _PIE1bits	set	140
   351  009F                     _ADCON1bits	set	159
   352  0081                     _OPTION_REGbits	set	129
   353  008F                     _OSCCON	set	143
   354  0096                     _IOCB	set	150
   355  0089                     _TRISE	set	137
   356  0088                     _TRISD	set	136
   357  0087                     _TRISC	set	135
   358  0086                     _TRISB	set	134
   359  0085                     _TRISA	set	133
   360  0189                     _ANSELHbits	set	393
   361  0189                     _ANSELH	set	393
   362  0188                     _ANSEL	set	392
   363  0810                     STR_3:
   364  0810  3420               	retlw	32	;' '
   365  0811  3420               	retlw	32	;' '
   366  0812  3454               	retlw	84	;'T'
   367  0813  343A               	retlw	58	;':'
   368  0814  3420               	retlw	32	;' '
   369  0815  3420               	retlw	32	;' '
   370  0816  3454               	retlw	84	;'T'
   371  0817  343A               	retlw	58	;':'
   372  0818  3420               	retlw	32	;' '
   373  0819  3420               	retlw	32	;' '
   374  081A  344E               	retlw	78	;'N'
   375  081B  3475               	retlw	117	;'u'
   376  081C  346C               	retlw	108	;'l'
   377  081D  346C               	retlw	108	;'l'
   378  081E  343A               	retlw	58	;':'
   379  081F  3420               	retlw	32	;' '
   380  0820  3400               	retlw	0
   381  0821                     STR_2:
   382  0821  3442               	retlw	66	;'B'
   383  0822  3425               	retlw	37	;'%'
   384  0823  342E               	retlw	46	;'.'
   385  0824  3433               	retlw	51	;'3'
   386  0825  3469               	retlw	105	;'i'
   387  0826  3443               	retlw	67	;'C'
   388  0827  3425               	retlw	37	;'%'
   389  0828  3400               	retlw	0
   390  0829                     STR_1:
   391  0829  3441               	retlw	65	;'A'
   392  082A  3425               	retlw	37	;'%'
   393  082B  342E               	retlw	46	;'.'
   394  082C  3433               	retlw	51	;'3'
   395  082D  3469               	retlw	105	;'i'
   396  082E  3443               	retlw	67	;'C'
   397  082F  3400               	retlw	0
   398  0830                     STR_4:
   399  0830  3425               	retlw	37	;'%'
   400  0831  342E               	retlw	46	;'.'
   401  0832  3433               	retlw	51	;'3'
   402  0833  3469               	retlw	105	;'i'
   403  0834  3400               	retlw	0
   404                           
   405                           	psect	cinit
   406  0013                     start_initialization:	
   407                           ; #config settings
   408                           
   409  0013                     __initialization:
   410                           
   411                           ; Clear objects allocated to BANK0
   412  0013  1283               	bcf	3,5	;RP0=0, select bank0
   413  0014  1303               	bcf	3,6	;RP1=0, select bank0
   414  0015  01EA               	clrf	__pbssBANK0& (0+127)
   415  0016  01EB               	clrf	(__pbssBANK0+1)& (0+127)
   416  0017  01EC               	clrf	(__pbssBANK0+2)& (0+127)
   417  0018  01ED               	clrf	(__pbssBANK0+3)& (0+127)
   418  0019  01EE               	clrf	(__pbssBANK0+4)& (0+127)
   419  001A  01EF               	clrf	(__pbssBANK0+5)& (0+127)
   420                           
   421                           ; Clear objects allocated to BANK1
   422  001B  1383               	bcf	3,7	;select IRP bank0
   423  001C  30C2               	movlw	low __pbssBANK1
   424  001D  0084               	movwf	4
   425  001E  30D4               	movlw	low (__pbssBANK1+18)
   426  001F  120A  158A  23F8  120A  118A  	fcall	clear_ram0
   427  0024                     end_of_initialization:	
   428                           ;End of C runtime variable initialization code
   429                           
   430  0024                     __end_of__initialization:
   431  0024  0183               	clrf	3
   432  0025  120A  118A  2F85   	ljmp	_main	;jump to C main() function
   433                           
   434                           	psect	bssBANK0
   435  006A                     __pbssBANK0:
   436  006A                     _eusart_flag:
   437  006A                     	ds	1
   438  006B                     _adc_flag:
   439  006B                     	ds	1
   440  006C                     _str_pos:
   441  006C                     	ds	1
   442  006D                     _uart_data:
   443  006D                     	ds	1
   444  006E                     _prueba2:
   445  006E                     	ds	1
   446  006F                     _prueba1:
   447  006F                     	ds	1
   448                           
   449                           	psect	bssBANK1
   450  00C2                     __pbssBANK1:
   451  00C2                     _ban_an2:
   452  00C2                     	ds	2
   453  00C4                     _ban_an1:
   454  00C4                     	ds	2
   455  00C6                     _uart_cont:
   456  00C6                     	ds	1
   457  00C7                     _adc_data2:
   458  00C7                     	ds	1
   459  00C8                     _adc_data1:
   460  00C8                     	ds	1
   461  00C9                     _str_pot_a:
   462  00C9                     	ds	6
   463  00CF                     _str_pot_b:
   464  00CF                     	ds	5
   465                           
   466                           	psect	clrtext
   467  0BF8                     clear_ram0:	
   468                           ;	Called with FSR containing the base address, and
   469                           ;	W with the last address+1
   470                           
   471  0BF8  0064               	clrwdt	;clear the watchdog before getting into this loop
   472  0BF9                     clrloop0:
   473  0BF9  0180               	clrf	0	;clear RAM location pointed to by FSR
   474  0BFA  0A84               	incf	4,f	;increment pointer
   475  0BFB  0604               	xorwf	4,w	;XOR with final address
   476  0BFC  1903               	btfsc	3,2	;have we reached the end yet?
   477  0BFD  3400               	retlw	0	;all done for this memory range, return
   478  0BFE  0604               	xorwf	4,w	;XOR again to restore value
   479  0BFF  2BF9               	goto	clrloop0	;do the next byte
   480                           
   481                           	psect	cstackBANK1
   482  00A0                     __pcstackBANK1:
   483  00A0                     ??_ADC_1:
   484  00A0                     ??_ADC_2:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  00A0                     ??_semaforo:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  00A0                     ??_lcd_port:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  00A0                     ??_isdigit:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  00A0                     ??_canal_10:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  00A0                     ??_canal_12:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  00A0                     ?___bmul:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  00A0                     ?___lwdiv:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  00A0                     lcd_port@a:	
   509                           ; 2 bytes @ 0x0
   510                           
   511  00A0                     ___bmul@multiplicand:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  00A0                     _isdigit$907:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  00A0                     ___lwdiv@divisor:	
   518                           ; 1 bytes @ 0x0
   519                           
   520                           
   521                           ; 2 bytes @ 0x0
   522  00A0                     	ds	1
   523  00A1                     ??_lcd_write_char:
   524  00A1                     ??_lcd_cmd:	
   525                           ; 1 bytes @ 0x1
   526                           
   527  00A1                     ??___bmul:	
   528                           ; 1 bytes @ 0x1
   529                           
   530  00A1                     isdigit@c:	
   531                           ; 1 bytes @ 0x1
   532                           
   533                           
   534                           ; 1 bytes @ 0x1
   535  00A1                     	ds	1
   536  00A2                     ___bmul@product:
   537  00A2                     ___lwdiv@dividend:	
   538                           ; 1 bytes @ 0x2
   539                           
   540                           
   541                           ; 2 bytes @ 0x2
   542  00A2                     	ds	1
   543  00A3                     lcd_cmd@cmd:
   544  00A3                     lcd_write_char@data:	
   545                           ; 1 bytes @ 0x3
   546                           
   547  00A3                     ___bmul@multiplier:	
   548                           ; 1 bytes @ 0x3
   549                           
   550                           
   551                           ; 1 bytes @ 0x3
   552  00A3                     	ds	1
   553  00A4                     ?_lcd_move_cursor:
   554  00A4                     ??_lcd_write_string:	
   555                           ; 1 bytes @ 0x4
   556                           
   557  00A4                     ??_lcd_init:	
   558                           ; 1 bytes @ 0x4
   559                           
   560  00A4                     ??___lwdiv:	
   561                           ; 1 bytes @ 0x4
   562                           
   563  00A4                     lcd_move_cursor@col:	
   564                           ; 1 bytes @ 0x4
   565                           
   566  00A4                     lcd_write_string@i:	
   567                           ; 1 bytes @ 0x4
   568                           
   569                           
   570                           ; 2 bytes @ 0x4
   571  00A4                     	ds	1
   572  00A5                     ??_lcd_move_cursor:
   573  00A5                     lcd_move_cursor@row:	
   574                           ; 1 bytes @ 0x5
   575                           
   576  00A5                     ___lwdiv@quotient:	
   577                           ; 1 bytes @ 0x5
   578                           
   579                           
   580                           ; 2 bytes @ 0x5
   581  00A5                     	ds	1
   582  00A6                     ??_setup:
   583  00A6                     lcd_write_string@a:	
   584                           ; 1 bytes @ 0x6
   585                           
   586                           
   587                           ; 1 bytes @ 0x6
   588  00A6                     	ds	1
   589  00A7                     ___lwdiv@counter:
   590                           
   591                           ; 1 bytes @ 0x7
   592  00A7                     	ds	1
   593  00A8                     ?___lwmod:
   594  00A8                     ___lwmod@divisor:	
   595                           ; 2 bytes @ 0x8
   596                           
   597                           
   598                           ; 2 bytes @ 0x8
   599  00A8                     	ds	2
   600  00AA                     ___lwmod@dividend:
   601                           
   602                           ; 2 bytes @ 0xA
   603  00AA                     	ds	2
   604  00AC                     ??___lwmod:
   605                           
   606                           ; 1 bytes @ 0xC
   607  00AC                     	ds	1
   608  00AD                     ___lwmod@counter:
   609                           
   610                           ; 1 bytes @ 0xD
   611  00AD                     	ds	1
   612  00AE                     ?_sprintf:
   613  00AE                     sprintf@f:	
   614                           ; 2 bytes @ 0xE
   615                           
   616                           
   617                           ; 1 bytes @ 0xE
   618  00AE                     	ds	3
   619  00B1                     ??_sprintf:
   620                           
   621                           ; 1 bytes @ 0x11
   622  00B1                     	ds	3
   623  00B4                     sprintf@ap:
   624                           
   625                           ; 1 bytes @ 0x14
   626  00B4                     	ds	1
   627  00B5                     sprintf@flag:
   628                           
   629                           ; 1 bytes @ 0x15
   630  00B5                     	ds	1
   631  00B6                     sprintf@val:
   632                           
   633                           ; 2 bytes @ 0x16
   634  00B6                     	ds	2
   635  00B8                     sprintf@sp:
   636                           
   637                           ; 1 bytes @ 0x18
   638  00B8                     	ds	1
   639  00B9                     sprintf@prec:
   640                           
   641                           ; 1 bytes @ 0x19
   642  00B9                     	ds	1
   643  00BA                     sprintf@c:
   644                           
   645                           ; 1 bytes @ 0x1A
   646  00BA                     	ds	1
   647  00BB                     ??_display:
   648                           
   649                           ; 1 bytes @ 0x1B
   650  00BB                     	ds	1
   651  00BC                     display@str:
   652                           
   653                           ; 3 bytes @ 0x1C
   654  00BC                     	ds	3
   655  00BF                     ??_main:
   656                           
   657                           ; 1 bytes @ 0x1F
   658  00BF                     	ds	3
   659                           
   660                           	psect	cstackCOMMON
   661  0070                     __pcstackCOMMON:
   662  0070                     ?_isdigit:
   663  0070                     ?_setup:	
   664                           ; 1 bit 
   665                           
   666  0070                     ?_ADC_1:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_ADC_2:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_display:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_semaforo:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_lcd_write_string:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_lcd_write_char:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_lcd_port:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_lcd_cmd:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_main:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_canal_10:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_canal_12:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_isr:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?_lcd_init:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?__Umul8_16:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?___xxtofl:	
   709                           ; 2 bytes @ 0x0
   710                           
   711  0070                     __Umul8_16@multiplicand:	
   712                           ; 4 bytes @ 0x0
   713                           
   714  0070                     ___xxtofl@val:	
   715                           ; 1 bytes @ 0x0
   716                           
   717                           
   718                           ; 4 bytes @ 0x0
   719  0070                     	ds	2
   720  0072                     ??__Umul8_16:
   721                           
   722                           ; 1 bytes @ 0x2
   723  0072                     	ds	2
   724  0074                     ??___xxtofl:
   725  0074                     __Umul8_16@product:	
   726                           ; 1 bytes @ 0x4
   727                           
   728                           
   729                           ; 2 bytes @ 0x4
   730  0074                     	ds	2
   731  0076                     __Umul8_16@word_mpld:
   732                           
   733                           ; 2 bytes @ 0x6
   734  0076                     	ds	2
   735  0078                     __Umul8_16@multiplier:
   736  0078                     ___xxtofl@sign:	
   737                           ; 1 bytes @ 0x8
   738                           
   739                           
   740                           ; 1 bytes @ 0x8
   741  0078                     	ds	1
   742  0079                     ___xxtofl@exp:
   743                           
   744                           ; 1 bytes @ 0x9
   745  0079                     	ds	1
   746  007A                     ___xxtofl@arg:
   747                           
   748                           ; 4 bytes @ 0xA
   749  007A                     	ds	4
   750                           
   751                           	psect	cstackBANK0
   752  0020                     __pcstackBANK0:
   753  0020                     ?___flmul:
   754  0020                     ___flmul@b:	
   755                           ; 4 bytes @ 0x0
   756                           
   757                           
   758                           ; 4 bytes @ 0x0
   759  0020                     	ds	4
   760  0024                     ___flmul@a:
   761                           
   762                           ; 4 bytes @ 0x4
   763  0024                     	ds	4
   764  0028                     ??___flmul:
   765                           
   766                           ; 1 bytes @ 0x8
   767  0028                     	ds	5
   768  002D                     ___flmul@sign:
   769                           
   770                           ; 1 bytes @ 0xD
   771  002D                     	ds	1
   772  002E                     ___flmul@grs:
   773                           
   774                           ; 4 bytes @ 0xE
   775  002E                     	ds	4
   776  0032                     ___flmul@aexp:
   777                           
   778                           ; 1 bytes @ 0x12
   779  0032                     	ds	1
   780  0033                     ___flmul@bexp:
   781                           
   782                           ; 1 bytes @ 0x13
   783  0033                     	ds	1
   784  0034                     ___flmul@prod:
   785                           
   786                           ; 4 bytes @ 0x14
   787  0034                     	ds	4
   788  0038                     ___flmul@temp:
   789                           
   790                           ; 2 bytes @ 0x18
   791  0038                     	ds	2
   792  003A                     ?___fldiv:
   793  003A                     ___fldiv@a:	
   794                           ; 4 bytes @ 0x1A
   795                           
   796                           
   797                           ; 4 bytes @ 0x1A
   798  003A                     	ds	4
   799  003E                     ___fldiv@b:
   800                           
   801                           ; 4 bytes @ 0x1E
   802  003E                     	ds	4
   803  0042                     ??___fldiv:
   804                           
   805                           ; 1 bytes @ 0x22
   806  0042                     	ds	5
   807  0047                     ___fldiv@rem:
   808                           
   809                           ; 4 bytes @ 0x27
   810  0047                     	ds	4
   811  004B                     ___fldiv@sign:
   812                           
   813                           ; 1 bytes @ 0x2B
   814  004B                     	ds	1
   815  004C                     ___fldiv@new_exp:
   816                           
   817                           ; 2 bytes @ 0x2C
   818  004C                     	ds	2
   819  004E                     ___fldiv@grs:
   820                           
   821                           ; 4 bytes @ 0x2E
   822  004E                     	ds	4
   823  0052                     ___fldiv@bexp:
   824                           
   825                           ; 1 bytes @ 0x32
   826  0052                     	ds	1
   827  0053                     ___fldiv@aexp:
   828                           
   829                           ; 1 bytes @ 0x33
   830  0053                     	ds	1
   831  0054                     ?___fltol:
   832  0054                     ___fltol@f1:	
   833                           ; 4 bytes @ 0x34
   834                           
   835                           
   836                           ; 4 bytes @ 0x34
   837  0054                     	ds	4
   838  0058                     ??___fltol:
   839                           
   840                           ; 1 bytes @ 0x38
   841  0058                     	ds	5
   842  005D                     ___fltol@sign1:
   843                           
   844                           ; 1 bytes @ 0x3D
   845  005D                     	ds	1
   846  005E                     ___fltol@exp1:
   847                           
   848                           ; 1 bytes @ 0x3E
   849  005E                     	ds	1
   850  005F                     ??_isr:
   851                           
   852                           ; 1 bytes @ 0x3F
   853  005F                     	ds	7
   854  0066                     _isr$1085:
   855                           
   856                           ; 4 bytes @ 0x46
   857  0066                     	ds	4
   858                           
   859                           	psect	maintext
   860  0785                     __pmaintext:	
   861 ;;
   862 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   863 ;;
   864 ;; *************** function _main *****************
   865 ;; Defined at:
   866 ;;		line 44 in file "sensor_temp.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;		None
   869 ;; Auto vars:     Size  Location     Type
   870 ;;		None
   871 ;; Return value:  Size  Location     Type
   872 ;;                  1    wreg      void 
   873 ;; Registers used:
   874 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : B00/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   880 ;;      Params:         0       0       0       0       0
   881 ;;      Locals:         0       0       0       0       0
   882 ;;      Temps:          0       0       3       0       0
   883 ;;      Totals:         0       0       3       0       0
   884 ;;Total ram usage:        3 bytes
   885 ;; Hardware stack levels required when called:    7
   886 ;; This function calls:
   887 ;;		_ADC_1
   888 ;;		_ADC_2
   889 ;;		_display
   890 ;;		_semaforo
   891 ;;		_setup
   892 ;;		_sprintf
   893 ;; This function is called by:
   894 ;;		Startup code after reset
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           
   899                           ;psect for function _main
   900  0785                     _main:
   901  0785                     l2357:	
   902                           ;incstack = 0
   903                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   904                           
   905                           
   906                           ;sensor_temp.c: 45:     setup();
   907  0785  120A  158A  2595  120A  118A  	fcall	_setup
   908  078A                     l2359:
   909                           
   910                           ;sensor_temp.c: 47:         if (ADCON0bits.GO_DONE == 0 && ban_an1 == 0) {
   911  078A  1283               	bcf	3,5	;RP0=0, select bank0
   912  078B  1303               	bcf	3,6	;RP1=0, select bank0
   913  078C  189F               	btfsc	31,1	;volatile
   914  078D  2F8F               	goto	u2691
   915  078E  2F90               	goto	u2690
   916  078F                     u2691:
   917  078F  2F9D               	goto	l2365
   918  0790                     u2690:
   919  0790                     l2361:
   920  0790  1683               	bsf	3,5	;RP0=1, select bank1
   921  0791  1303               	bcf	3,6	;RP1=0, select bank1
   922  0792  0844               	movf	_ban_an1^(0+128),w
   923  0793  0445               	iorwf	(_ban_an1+1)^(0+128),w
   924  0794  1D03               	btfss	3,2
   925  0795  2F97               	goto	u2701
   926  0796  2F98               	goto	u2700
   927  0797                     u2701:
   928  0797  2F9D               	goto	l2365
   929  0798                     u2700:
   930  0798                     l2363:
   931                           
   932                           ;sensor_temp.c: 48:             ADC_1();
   933  0798  120A  158A  2414  120A  118A  	fcall	_ADC_1
   934  079D                     l2365:
   935                           
   936                           ;sensor_temp.c: 50:         if (ADCON0bits.GO_DONE == 0 && ban_an2 == 0) {
   937  079D  1283               	bcf	3,5	;RP0=0, select bank0
   938  079E  1303               	bcf	3,6	;RP1=0, select bank0
   939  079F  189F               	btfsc	31,1	;volatile
   940  07A0  2FA2               	goto	u2711
   941  07A1  2FA3               	goto	u2710
   942  07A2                     u2711:
   943  07A2  2FB0               	goto	l2371
   944  07A3                     u2710:
   945  07A3                     l2367:
   946  07A3  1683               	bsf	3,5	;RP0=1, select bank1
   947  07A4  1303               	bcf	3,6	;RP1=0, select bank1
   948  07A5  0842               	movf	_ban_an2^(0+128),w
   949  07A6  0443               	iorwf	(_ban_an2+1)^(0+128),w
   950  07A7  1D03               	btfss	3,2
   951  07A8  2FAA               	goto	u2721
   952  07A9  2FAB               	goto	u2720
   953  07AA                     u2721:
   954  07AA  2FB0               	goto	l2371
   955  07AB                     u2720:
   956  07AB                     l2369:
   957                           
   958                           ;sensor_temp.c: 51:             ADC_2();
   959  07AB  120A  158A  242B  120A  118A  	fcall	_ADC_2
   960  07B0                     l2371:
   961                           
   962                           ;sensor_temp.c: 53:         sprintf(str_pot_a, "A%.3iC", adc_data1 << 1);
   963  07B0  3024               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   964  07B1  1683               	bsf	3,5	;RP0=1, select bank1
   965  07B2  1303               	bcf	3,6	;RP1=0, select bank1
   966  07B3  00BF               	movwf	??_main^(0+128)
   967  07B4  083F               	movf	??_main^(0+128),w
   968  07B5  00AE               	movwf	sprintf@f^(0+128)
   969  07B6  0848               	movf	_adc_data1^(0+128),w
   970  07B7  00C0               	movwf	(??_main+1)^(0+128)
   971  07B8  01C1               	clrf	((??_main+1)^(0+128)+1)
   972  07B9  1003               	clrc
   973  07BA  0D40               	rlf	(??_main+1)^(0+128),w
   974  07BB  00AF               	movwf	(?_sprintf^(0+128)+1)
   975  07BC  0D41               	rlf	(??_main+2)^(0+128),w
   976  07BD  00B0               	movwf	((?_sprintf+1)^(0+128)+1)
   977  07BE  30C9               	movlw	(low (_str_pot_a| 0))& (0+255)
   978  07BF  120A  118A  2566  120A  118A  	fcall	_sprintf
   979  07C4                     l2373:
   980                           
   981                           ;sensor_temp.c: 54:         sprintf(str_pot_b, "B%.3iC%", adc_data2 << 1);
   982  07C4  301C               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   983  07C5  1683               	bsf	3,5	;RP0=1, select bank1
   984  07C6  1303               	bcf	3,6	;RP1=0, select bank1
   985  07C7  00BF               	movwf	??_main^(0+128)
   986  07C8  083F               	movf	??_main^(0+128),w
   987  07C9  00AE               	movwf	sprintf@f^(0+128)
   988  07CA  0847               	movf	_adc_data2^(0+128),w
   989  07CB  00C0               	movwf	(??_main+1)^(0+128)
   990  07CC  01C1               	clrf	((??_main+1)^(0+128)+1)
   991  07CD  1003               	clrc
   992  07CE  0D40               	rlf	(??_main+1)^(0+128),w
   993  07CF  00AF               	movwf	(?_sprintf^(0+128)+1)
   994  07D0  0D41               	rlf	(??_main+2)^(0+128),w
   995  07D1  00B0               	movwf	((?_sprintf+1)^(0+128)+1)
   996  07D2  30CF               	movlw	(low (_str_pot_b| 0))& (0+255)
   997  07D3  120A  118A  2566  120A  118A  	fcall	_sprintf
   998  07D8                     l2375:
   999                           
  1000                           ;sensor_temp.c: 56:         display();
  1001  07D8  120A  158A  26BE  120A  118A  	fcall	_display
  1002  07DD                     l2377:
  1003                           
  1004                           ;sensor_temp.c: 57:         semaforo();
  1005  07DD  120A  158A  249F  120A  118A  	fcall	_semaforo
  1006  07E2  2F8A               	goto	l2359
  1007  07E3  120A  118A  2810   	ljmp	start
  1008  07E6                     __end_of_main:
  1009                           
  1010                           	psect	text1
  1011  0D95                     __ptext1:	
  1012 ;; *************** function _setup *****************
  1013 ;; Defined at:
  1014 ;;		line 151 in file "lib_sensor.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;		None
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;		None
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      void 
  1021 ;; Registers used:
  1022 ;;		wreg, status,2, status,0, pclath, cstack
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1028 ;;      Params:         0       0       0       0       0
  1029 ;;      Locals:         0       0       0       0       0
  1030 ;;      Temps:          0       0       0       0       0
  1031 ;;      Totals:         0       0       0       0       0
  1032 ;;Total ram usage:        0 bytes
  1033 ;; Hardware stack levels used:    1
  1034 ;; Hardware stack levels required when called:    6
  1035 ;; This function calls:
  1036 ;;		_canal_10
  1037 ;;		_lcd_cmd
  1038 ;;		_lcd_init
  1039 ;; This function is called by:
  1040 ;;		_main
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           
  1045                           ;psect for function _setup
  1046  0D95                     _setup:
  1047  0D95                     l1855:	
  1048                           ;incstack = 0
  1049                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1050                           
  1051                           
  1052                           ;lib_sensor.c: 153:     ANSEL = 0x03;
  1053  0D95  3003               	movlw	3
  1054  0D96  1683               	bsf	3,5	;RP0=1, select bank3
  1055  0D97  1703               	bsf	3,6	;RP1=1, select bank3
  1056  0D98  0088               	movwf	8	;volatile
  1057  0D99                     l1857:
  1058                           
  1059                           ;lib_sensor.c: 154:     ANSELH = 0x00;
  1060  0D99  0189               	clrf	9	;volatile
  1061  0D9A                     l1859:
  1062                           
  1063                           ;lib_sensor.c: 156:     TRISA = 0x03;
  1064  0D9A  3003               	movlw	3
  1065  0D9B  1683               	bsf	3,5	;RP0=1, select bank1
  1066  0D9C  1303               	bcf	3,6	;RP1=0, select bank1
  1067  0D9D  0085               	movwf	5	;volatile
  1068                           
  1069                           ;lib_sensor.c: 157:     TRISB = 0x00;
  1070  0D9E  0186               	clrf	6	;volatile
  1071                           
  1072                           ;lib_sensor.c: 158:     TRISC = 0;
  1073  0D9F  0187               	clrf	7	;volatile
  1074                           
  1075                           ;lib_sensor.c: 159:     TRISD = 0x00;
  1076  0DA0  0188               	clrf	8	;volatile
  1077                           
  1078                           ;lib_sensor.c: 160:     TRISE = 0x00;
  1079  0DA1  0189               	clrf	9	;volatile
  1080                           
  1081                           ;lib_sensor.c: 162:     PORTA = 0;
  1082  0DA2  1283               	bcf	3,5	;RP0=0, select bank0
  1083  0DA3  1303               	bcf	3,6	;RP1=0, select bank0
  1084  0DA4  0185               	clrf	5	;volatile
  1085                           
  1086                           ;lib_sensor.c: 163:     PORTB = 0;
  1087  0DA5  0186               	clrf	6	;volatile
  1088                           
  1089                           ;lib_sensor.c: 164:     PORTC = 0;
  1090  0DA6  0187               	clrf	7	;volatile
  1091                           
  1092                           ;lib_sensor.c: 165:     PORTD = 0;
  1093  0DA7  0188               	clrf	8	;volatile
  1094                           
  1095                           ;lib_sensor.c: 166:     PORTE = 0;
  1096  0DA8  0189               	clrf	9	;volatile
  1097                           
  1098                           ;lib_sensor.c: 169:     IOCB = 0x00;
  1099  0DA9  1683               	bsf	3,5	;RP0=1, select bank1
  1100  0DAA  1303               	bcf	3,6	;RP1=0, select bank1
  1101  0DAB  0196               	clrf	22	;volatile
  1102  0DAC                     l1861:
  1103                           
  1104                           ;lib_sensor.c: 170:     INTCONbits.RBIE = 0;
  1105  0DAC  118B               	bcf	11,3	;volatile
  1106  0DAD                     l1863:
  1107                           
  1108                           ;lib_sensor.c: 171:     INTCONbits.T0IE = 0;
  1109  0DAD  128B               	bcf	11,5	;volatile
  1110  0DAE                     l1865:
  1111                           
  1112                           ;lib_sensor.c: 172:     INTCONbits.PEIE = 1;
  1113  0DAE  170B               	bsf	11,6	;volatile
  1114  0DAF                     l1867:
  1115                           
  1116                           ;lib_sensor.c: 173:     INTCONbits.GIE = 1;
  1117  0DAF  178B               	bsf	11,7	;volatile
  1118  0DB0                     l1869:
  1119                           
  1120                           ;lib_sensor.c: 175:     OSCCON = 0b01100001;
  1121  0DB0  3061               	movlw	97
  1122  0DB1  008F               	movwf	15	;volatile
  1123  0DB2                     l1871:
  1124                           
  1125                           ;lib_sensor.c: 177:     OPTION_REGbits.T0CS = 0;
  1126  0DB2  1281               	bcf	1,5	;volatile
  1127  0DB3                     l1873:
  1128                           
  1129                           ;lib_sensor.c: 178:     OPTION_REGbits.PSA = 0;
  1130  0DB3  1181               	bcf	1,3	;volatile
  1131  0DB4                     l1875:
  1132                           
  1133                           ;lib_sensor.c: 179:     OPTION_REGbits.PS2 = 0;
  1134  0DB4  1101               	bcf	1,2	;volatile
  1135  0DB5                     l1877:
  1136                           
  1137                           ;lib_sensor.c: 180:     OPTION_REGbits.PS1 = 0;
  1138  0DB5  1081               	bcf	1,1	;volatile
  1139  0DB6                     l1879:
  1140                           
  1141                           ;lib_sensor.c: 181:     OPTION_REGbits.PS0 = 1;
  1142  0DB6  1401               	bsf	1,0	;volatile
  1143  0DB7                     l1881:
  1144                           
  1145                           ;lib_sensor.c: 183:     TMR0 = 6;;
  1146  0DB7  3006               	movlw	6
  1147  0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  1148  0DB9  1303               	bcf	3,6	;RP1=0, select bank0
  1149  0DBA  0081               	movwf	1	;volatile
  1150  0DBB                     l1883:
  1151                           
  1152                           ;lib_sensor.c: 185:     INTCONbits.T0IF = 0;
  1153  0DBB  110B               	bcf	11,2	;volatile
  1154  0DBC                     l1885:
  1155                           
  1156                           ;lib_sensor.c: 190:     lcd_init();
  1157  0DBC  120A  158A  25EB  120A  158A  	fcall	_lcd_init
  1158  0DC1                     l1887:
  1159                           
  1160                           ;lib_sensor.c: 191:     lcd_cmd(0x0c);
  1161  0DC1  300C               	movlw	12
  1162  0DC2  120A  158A  245F  120A  158A  	fcall	_lcd_cmd
  1163  0DC7                     l1889:
  1164                           
  1165                           ;lib_sensor.c: 200:     ANSELHbits.ANS10 = 1;
  1166  0DC7  1683               	bsf	3,5	;RP0=1, select bank3
  1167  0DC8  1703               	bsf	3,6	;RP1=1, select bank3
  1168  0DC9  1509               	bsf	9,2	;volatile
  1169  0DCA                     l1891:
  1170                           
  1171                           ;lib_sensor.c: 201:     ANSELHbits.ANS12 = 1;
  1172  0DCA  1609               	bsf	9,4	;volatile
  1173  0DCB                     l1893:
  1174                           
  1175                           ;lib_sensor.c: 206:     ADCON0bits.CHS0 = 1;
  1176  0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  1177  0DCC  1303               	bcf	3,6	;RP1=0, select bank0
  1178  0DCD  151F               	bsf	31,2	;volatile
  1179  0DCE                     l1895:
  1180                           
  1181                           ;lib_sensor.c: 207:     ADCON0bits.CHS1 = 0;
  1182  0DCE  119F               	bcf	31,3	;volatile
  1183  0DCF                     l1897:
  1184                           
  1185                           ;lib_sensor.c: 208:     ADCON0bits.CHS2 = 1;
  1186  0DCF  161F               	bsf	31,4	;volatile
  1187  0DD0                     l1899:
  1188                           
  1189                           ;lib_sensor.c: 209:     ADCON0bits.CHS3 = 0;
  1190  0DD0  129F               	bcf	31,5	;volatile
  1191  0DD1                     l1901:
  1192                           
  1193                           ;lib_sensor.c: 212:     ADCON1bits.VCFG0 = 0;
  1194  0DD1  1683               	bsf	3,5	;RP0=1, select bank1
  1195  0DD2  1303               	bcf	3,6	;RP1=0, select bank1
  1196  0DD3  121F               	bcf	31,4	;volatile
  1197  0DD4                     l1903:
  1198                           
  1199                           ;lib_sensor.c: 213:     ADCON1bits.VCFG1 = 0;
  1200  0DD4  129F               	bcf	31,5	;volatile
  1201  0DD5                     l1905:
  1202                           
  1203                           ;lib_sensor.c: 216:     ADCON1bits.ADFM = 0;
  1204  0DD5  139F               	bcf	31,7	;volatile
  1205  0DD6                     l1907:
  1206                           
  1207                           ;lib_sensor.c: 220:     ADCON0bits.GO_DONE = 1;
  1208  0DD6  1283               	bcf	3,5	;RP0=0, select bank0
  1209  0DD7  1303               	bcf	3,6	;RP1=0, select bank0
  1210  0DD8  149F               	bsf	31,1	;volatile
  1211  0DD9                     l1909:
  1212                           
  1213                           ;lib_sensor.c: 223:     ADCON0bits.ADON = 1;
  1214  0DD9  141F               	bsf	31,0	;volatile
  1215  0DDA                     l1911:
  1216                           
  1217                           ;lib_sensor.c: 226:     INTCONbits.GIE = 1;
  1218  0DDA  178B               	bsf	11,7	;volatile
  1219  0DDB                     l1913:
  1220                           
  1221                           ;lib_sensor.c: 227:     PIE1bits.ADIE = 0;
  1222  0DDB  1683               	bsf	3,5	;RP0=1, select bank1
  1223  0DDC  1303               	bcf	3,6	;RP1=0, select bank1
  1224  0DDD  130C               	bcf	12,6	;volatile
  1225  0DDE                     l1915:
  1226                           
  1227                           ;lib_sensor.c: 228:     PIE1bits.ADIE = 1;
  1228  0DDE  170C               	bsf	12,6	;volatile
  1229                           
  1230                           ;lib_sensor.c: 230:     ban_an1 = 0;
  1231  0DDF  01C4               	clrf	_ban_an1^(0+128)
  1232  0DE0  01C5               	clrf	(_ban_an1+1)^(0+128)
  1233  0DE1                     l1917:
  1234                           
  1235                           ;lib_sensor.c: 231:     ban_an2 = 1;
  1236  0DE1  3001               	movlw	1
  1237  0DE2  00C2               	movwf	_ban_an2^(0+128)
  1238  0DE3  3000               	movlw	0
  1239  0DE4  00C3               	movwf	(_ban_an2^(0+128)+1)
  1240  0DE5                     l1919:
  1241                           
  1242                           ;lib_sensor.c: 232:     canal_10();
  1243  0DE5  120A  158A  23E9  120A  158A  	fcall	_canal_10
  1244  0DEA                     l183:
  1245  0DEA  0008               	return
  1246  0DEB                     __end_of_setup:
  1247                           
  1248                           	psect	text2
  1249  0DEB                     __ptext2:	
  1250 ;; *************** function _lcd_init *****************
  1251 ;; Defined at:
  1252 ;;		line 21 in file "lib_sensor.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0, pclath, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1266 ;;      Params:         0       0       0       0       0
  1267 ;;      Locals:         0       0       0       0       0
  1268 ;;      Temps:          0       0       2       0       0
  1269 ;;      Totals:         0       0       2       0       0
  1270 ;;Total ram usage:        2 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; Hardware stack levels required when called:    5
  1273 ;; This function calls:
  1274 ;;		_lcd_cmd
  1275 ;;		_lcd_port
  1276 ;; This function is called by:
  1277 ;;		_setup
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           
  1282                           ;psect for function _lcd_init
  1283  0DEB                     _lcd_init:
  1284  0DEB                     l1831:	
  1285                           ;incstack = 0
  1286                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1287                           
  1288                           
  1289                           ;lib_sensor.c: 23:     lcd_port(0x00);
  1290  0DEB  3000               	movlw	0
  1291  0DEC  120A  158A  23F0  120A  158A  	fcall	_lcd_port
  1292  0DF1                     l1833:
  1293                           
  1294                           ;lib_sensor.c: 24:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1295  0DF1  301A               	movlw	26
  1296  0DF2  1683               	bsf	3,5	;RP0=1, select bank1
  1297  0DF3  1303               	bcf	3,6	;RP1=0, select bank1
  1298  0DF4  00A5               	movwf	(??_lcd_init^(0+128)+1)
  1299  0DF5  30F7               	movlw	247
  1300  0DF6  00A4               	movwf	??_lcd_init^(0+128)
  1301  0DF7                     u2777:
  1302  0DF7  0BA4               	decfsz	??_lcd_init^(0+128),f
  1303  0DF8  2DF7               	goto	u2777
  1304  0DF9  0BA5               	decfsz	(??_lcd_init^(0+128)+1),f
  1305  0DFA  2DF7               	goto	u2777
  1306  0DFB  2DFC               	nop2
  1307  0DFC                     l1835:
  1308                           
  1309                           ;lib_sensor.c: 26:     lcd_cmd(0x30);
  1310  0DFC  3030               	movlw	48
  1311  0DFD  120A  158A  245F  120A  158A  	fcall	_lcd_cmd
  1312                           
  1313                           ;lib_sensor.c: 27:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1314  0E02  3007               	movlw	7
  1315  0E03  1683               	bsf	3,5	;RP0=1, select bank1
  1316  0E04  1303               	bcf	3,6	;RP1=0, select bank1
  1317  0E05  00A5               	movwf	(??_lcd_init^(0+128)+1)
  1318  0E06  307C               	movlw	124
  1319  0E07  00A4               	movwf	??_lcd_init^(0+128)
  1320  0E08                     u2787:
  1321  0E08  0BA4               	decfsz	??_lcd_init^(0+128),f
  1322  0E09  2E08               	goto	u2787
  1323  0E0A  0BA5               	decfsz	(??_lcd_init^(0+128)+1),f
  1324  0E0B  2E08               	goto	u2787
  1325  0E0C  0000               	nop
  1326  0E0D                     l1837:
  1327                           
  1328                           ;lib_sensor.c: 29:     lcd_cmd(0x30);
  1329  0E0D  3030               	movlw	48
  1330  0E0E  120A  158A  245F  120A  158A  	fcall	_lcd_cmd
  1331  0E13                     l1839:
  1332                           
  1333                           ;lib_sensor.c: 30:     _delay((unsigned long)((11)*(4000000/4000.0)));
  1334  0E13  300F               	movlw	15
  1335  0E14  1683               	bsf	3,5	;RP0=1, select bank1
  1336  0E15  1303               	bcf	3,6	;RP1=0, select bank1
  1337  0E16  00A5               	movwf	(??_lcd_init^(0+128)+1)
  1338  0E17  3047               	movlw	71
  1339  0E18  00A4               	movwf	??_lcd_init^(0+128)
  1340  0E19                     u2797:
  1341  0E19  0BA4               	decfsz	??_lcd_init^(0+128),f
  1342  0E1A  2E19               	goto	u2797
  1343  0E1B  0BA5               	decfsz	(??_lcd_init^(0+128)+1),f
  1344  0E1C  2E19               	goto	u2797
  1345                           
  1346                           ;lib_sensor.c: 32:     lcd_cmd(0x30);
  1347  0E1D  3030               	movlw	48
  1348  0E1E  120A  158A  245F  120A  158A  	fcall	_lcd_cmd
  1349                           
  1350                           ;lib_sensor.c: 34:     lcd_cmd(0x38);
  1351  0E23  3038               	movlw	56
  1352  0E24  120A  158A  245F  120A  158A  	fcall	_lcd_cmd
  1353                           
  1354                           ;lib_sensor.c: 35:     lcd_cmd(0x10);
  1355  0E29  3010               	movlw	16
  1356  0E2A  120A  158A  245F  120A  158A  	fcall	_lcd_cmd
  1357                           
  1358                           ;lib_sensor.c: 36:     lcd_cmd(0x01);
  1359  0E2F  3001               	movlw	1
  1360  0E30  120A  158A  245F  120A  158A  	fcall	_lcd_cmd
  1361                           
  1362                           ;lib_sensor.c: 37:     lcd_cmd(0x06);
  1363  0E35  3006               	movlw	6
  1364  0E36  120A  158A  245F  120A  158A  	fcall	_lcd_cmd
  1365                           
  1366                           ;lib_sensor.c: 38:     lcd_cmd(0x0F);
  1367  0E3B  300F               	movlw	15
  1368  0E3C  120A  158A  245F  120A  158A  	fcall	_lcd_cmd
  1369  0E41                     l150:
  1370  0E41  0008               	return
  1371  0E42                     __end_of_lcd_init:
  1372                           
  1373                           	psect	text3
  1374  0C9F                     __ptext3:	
  1375 ;; *************** function _semaforo *****************
  1376 ;; Defined at:
  1377 ;;		line 150 in file "sensor_temp.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      void 
  1384 ;; Registers used:
  1385 ;;		wreg
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1391 ;;      Params:         0       0       0       0       0
  1392 ;;      Locals:         0       0       0       0       0
  1393 ;;      Temps:          0       0       0       0       0
  1394 ;;      Totals:         0       0       0       0       0
  1395 ;;Total ram usage:        0 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; Hardware stack levels required when called:    3
  1398 ;; This function calls:
  1399 ;;		Nothing
  1400 ;; This function is called by:
  1401 ;;		_main
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           
  1406                           ;psect for function _semaforo
  1407  0C9F                     _semaforo:
  1408  0C9F                     l1981:	
  1409                           ;incstack = 0
  1410                           ; Regs used in _semaforo: [wreg]
  1411                           
  1412                           
  1413                           ;sensor_temp.c: 151:     if (prueba1 < 24) {
  1414  0C9F  3018               	movlw	24
  1415  0CA0  1283               	bcf	3,5	;RP0=0, select bank0
  1416  0CA1  1303               	bcf	3,6	;RP1=0, select bank0
  1417  0CA2  026F               	subwf	_prueba1,w
  1418  0CA3  1803               	skipnc
  1419  0CA4  2CA6               	goto	u1751
  1420  0CA5  2CA7               	goto	u1750
  1421  0CA6                     u1751:
  1422  0CA6  2CAA               	goto	l1985
  1423  0CA7                     u1750:
  1424  0CA7                     l1983:
  1425                           
  1426                           ;sensor_temp.c: 152:         PORTCbits.RC0 = 1;
  1427  0CA7  1407               	bsf	7,0	;volatile
  1428                           
  1429                           ;sensor_temp.c: 153:         PORTCbits.RC1 = 0;
  1430  0CA8  1087               	bcf	7,1	;volatile
  1431                           
  1432                           ;sensor_temp.c: 154:         PORTCbits.RC2 = 0;
  1433  0CA9  1107               	bcf	7,2	;volatile
  1434  0CAA                     l1985:
  1435                           
  1436                           ;sensor_temp.c: 156:     if (prueba1 > 25 && prueba1 < 35) {
  1437  0CAA  301A               	movlw	26
  1438  0CAB  026F               	subwf	_prueba1,w
  1439  0CAC  1C03               	skipc
  1440  0CAD  2CAF               	goto	u1761
  1441  0CAE  2CB0               	goto	u1760
  1442  0CAF                     u1761:
  1443  0CAF  2CB9               	goto	l1991
  1444  0CB0                     u1760:
  1445  0CB0                     l1987:
  1446  0CB0  3023               	movlw	35
  1447  0CB1  026F               	subwf	_prueba1,w
  1448  0CB2  1803               	skipnc
  1449  0CB3  2CB5               	goto	u1771
  1450  0CB4  2CB6               	goto	u1770
  1451  0CB5                     u1771:
  1452  0CB5  2CB9               	goto	l1991
  1453  0CB6                     u1770:
  1454  0CB6                     l1989:
  1455                           
  1456                           ;sensor_temp.c: 157:         PORTCbits.RC0 = 0;
  1457  0CB6  1007               	bcf	7,0	;volatile
  1458                           
  1459                           ;sensor_temp.c: 158:         PORTCbits.RC1 = 1;
  1460  0CB7  1487               	bsf	7,1	;volatile
  1461                           
  1462                           ;sensor_temp.c: 159:         PORTCbits.RC2 = 0;
  1463  0CB8  1107               	bcf	7,2	;volatile
  1464  0CB9                     l1991:
  1465                           
  1466                           ;sensor_temp.c: 161:     if (prueba1 > 36) {
  1467  0CB9  3025               	movlw	37
  1468  0CBA  026F               	subwf	_prueba1,w
  1469  0CBB  1C03               	skipc
  1470  0CBC  2CBE               	goto	u1781
  1471  0CBD  2CBF               	goto	u1780
  1472  0CBE                     u1781:
  1473  0CBE  2CC2               	goto	l91
  1474  0CBF                     u1780:
  1475  0CBF                     l1993:
  1476                           
  1477                           ;sensor_temp.c: 162:         PORTCbits.RC0 = 0;
  1478  0CBF  1007               	bcf	7,0	;volatile
  1479                           
  1480                           ;sensor_temp.c: 163:         PORTCbits.RC1 = 0;
  1481  0CC0  1087               	bcf	7,1	;volatile
  1482                           
  1483                           ;sensor_temp.c: 164:         PORTCbits.RC2 = 1;
  1484  0CC1  1507               	bsf	7,2	;volatile
  1485  0CC2                     l91:
  1486  0CC2  0008               	return
  1487  0CC3                     __end_of_semaforo:
  1488                           
  1489                           	psect	text4
  1490  0EBE                     __ptext4:	
  1491 ;; *************** function _display *****************
  1492 ;; Defined at:
  1493 ;;		line 65 in file "sensor_temp.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;		None
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  str             3   28[BANK1 ] PTR unsigned char [3]
  1498 ;;		 -> ?_sprintf(2), 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      void 
  1501 ;; Registers used:
  1502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1508 ;;      Params:         0       0       0       0       0
  1509 ;;      Locals:         0       0       3       0       0
  1510 ;;      Temps:          0       0       1       0       0
  1511 ;;      Totals:         0       0       4       0       0
  1512 ;;Total ram usage:        4 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:    6
  1515 ;; This function calls:
  1516 ;;		_lcd_move_cursor
  1517 ;;		_lcd_write_char
  1518 ;;		_lcd_write_string
  1519 ;;		_sprintf
  1520 ;; This function is called by:
  1521 ;;		_main
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           
  1526                           ;psect for function _display
  1527  0EBE                     _display:
  1528  0EBE                     l1941:	
  1529                           ;incstack = 0
  1530                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1531                           
  1532                           
  1533                           ;sensor_temp.c: 66:     lcd_move_cursor(0, 0);
  1534  0EBE  1683               	bsf	3,5	;RP0=1, select bank1
  1535  0EBF  1303               	bcf	3,6	;RP1=0, select bank1
  1536  0EC0  01A4               	clrf	lcd_move_cursor@col^(0+128)
  1537  0EC1  3000               	movlw	0
  1538  0EC2  120A  158A  2442  120A  158A  	fcall	_lcd_move_cursor
  1539  0EC7                     l1943:
  1540                           
  1541                           ;sensor_temp.c: 67:     lcd_write_string("  T:  T:  Null: ");
  1542  0EC7  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1543  0EC8  120A  158A  24EA  120A  158A  	fcall	_lcd_write_string
  1544  0ECD                     l1945:
  1545                           
  1546                           ;sensor_temp.c: 68:     lcd_move_cursor(1, 0);
  1547  0ECD  1683               	bsf	3,5	;RP0=1, select bank1
  1548  0ECE  1303               	bcf	3,6	;RP1=0, select bank1
  1549  0ECF  01A4               	clrf	lcd_move_cursor@col^(0+128)
  1550  0ED0  3001               	movlw	1
  1551  0ED1  120A  158A  2442  120A  158A  	fcall	_lcd_move_cursor
  1552  0ED6                     l1947:
  1553                           
  1554                           ;sensor_temp.c: 70:     char* str[3];;sensor_temp.c: 72:     sprintf(str, "%.3i", uart_c
      +                          ont);
  1555  0ED6  302B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1556  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  1557  0ED8  1303               	bcf	3,6	;RP1=0, select bank1
  1558  0ED9  00BB               	movwf	??_display^(0+128)
  1559  0EDA  083B               	movf	??_display^(0+128),w
  1560  0EDB  00AE               	movwf	sprintf@f^(0+128)
  1561  0EDC  3000               	movlw	0
  1562  0EDD  00AF               	movwf	(?_sprintf^(0+128)+1)
  1563  0EDE  00B0               	movwf	((?_sprintf+1)^(0+128)+1)
  1564  0EDF  30BC               	movlw	(low (display@str| 0))& (0+255)
  1565  0EE0  120A  118A  2566  120A  158A  	fcall	_sprintf
  1566  0EE5                     l1949:
  1567                           
  1568                           ;sensor_temp.c: 74:     lcd_write_char(str_pot_a[1]);
  1569  0EE5  1683               	bsf	3,5	;RP0=1, select bank1
  1570  0EE6  1303               	bcf	3,6	;RP1=0, select bank1
  1571  0EE7  084A               	movf	(_str_pot_a^(0+128)+1),w
  1572  0EE8  120A  158A  247F  120A  158A  	fcall	_lcd_write_char
  1573  0EED                     l1951:
  1574                           
  1575                           ;sensor_temp.c: 75:     lcd_write_char('.');
  1576  0EED  302E               	movlw	46
  1577  0EEE  120A  158A  247F  120A  158A  	fcall	_lcd_write_char
  1578  0EF3                     l1953:
  1579                           
  1580                           ;sensor_temp.c: 76:     lcd_write_char(str_pot_a[2]);
  1581  0EF3  1683               	bsf	3,5	;RP0=1, select bank1
  1582  0EF4  1303               	bcf	3,6	;RP1=0, select bank1
  1583  0EF5  084B               	movf	(_str_pot_a^(0+128)+2),w
  1584  0EF6  120A  158A  247F  120A  158A  	fcall	_lcd_write_char
  1585  0EFB                     l1955:
  1586                           
  1587                           ;sensor_temp.c: 77:     lcd_write_char(str_pot_a[3]);
  1588  0EFB  1683               	bsf	3,5	;RP0=1, select bank1
  1589  0EFC  1303               	bcf	3,6	;RP1=0, select bank1
  1590  0EFD  084C               	movf	(_str_pot_a^(0+128)+3),w
  1591  0EFE  120A  158A  247F  120A  158A  	fcall	_lcd_write_char
  1592  0F03                     l1957:
  1593                           
  1594                           ;sensor_temp.c: 78:     lcd_write_char(str_pot_a[4]);
  1595  0F03  1683               	bsf	3,5	;RP0=1, select bank1
  1596  0F04  1303               	bcf	3,6	;RP1=0, select bank1
  1597  0F05  084D               	movf	(_str_pot_a^(0+128)+4),w
  1598  0F06  120A  158A  247F  120A  158A  	fcall	_lcd_write_char
  1599  0F0B                     l1959:
  1600                           
  1601                           ;sensor_temp.c: 79:     lcd_write_char(' ');
  1602  0F0B  3020               	movlw	32
  1603  0F0C  120A  158A  247F  120A  158A  	fcall	_lcd_write_char
  1604  0F11                     l1961:
  1605                           
  1606                           ;sensor_temp.c: 81:     lcd_write_char(str_pot_b[1]);
  1607  0F11  1683               	bsf	3,5	;RP0=1, select bank1
  1608  0F12  1303               	bcf	3,6	;RP1=0, select bank1
  1609  0F13  0850               	movf	(_str_pot_b^(0+128)+1),w
  1610  0F14  120A  158A  247F  120A  158A  	fcall	_lcd_write_char
  1611  0F19                     l1963:
  1612                           
  1613                           ;sensor_temp.c: 82:     lcd_write_char('.');
  1614  0F19  302E               	movlw	46
  1615  0F1A  120A  158A  247F  120A  158A  	fcall	_lcd_write_char
  1616  0F1F                     l1965:
  1617                           
  1618                           ;sensor_temp.c: 83:     lcd_write_char(str_pot_b[2]);
  1619  0F1F  1683               	bsf	3,5	;RP0=1, select bank1
  1620  0F20  1303               	bcf	3,6	;RP1=0, select bank1
  1621  0F21  0851               	movf	(_str_pot_b^(0+128)+2),w
  1622  0F22  120A  158A  247F  120A  158A  	fcall	_lcd_write_char
  1623  0F27                     l1967:
  1624                           
  1625                           ;sensor_temp.c: 84:     lcd_write_char(str_pot_b[3]);
  1626  0F27  1683               	bsf	3,5	;RP0=1, select bank1
  1627  0F28  1303               	bcf	3,6	;RP1=0, select bank1
  1628  0F29  0852               	movf	(_str_pot_b^(0+128)+3),w
  1629  0F2A  120A  158A  247F  120A  158A  	fcall	_lcd_write_char
  1630  0F2F                     l1969:
  1631                           
  1632                           ;sensor_temp.c: 85:     lcd_write_char(str_pot_b[4]);
  1633  0F2F  1683               	bsf	3,5	;RP0=1, select bank1
  1634  0F30  1303               	bcf	3,6	;RP1=0, select bank1
  1635  0F31  0853               	movf	(_str_pot_b^(0+128)+4),w
  1636  0F32  120A  158A  247F  120A  158A  	fcall	_lcd_write_char
  1637  0F37                     l1971:
  1638                           
  1639                           ;sensor_temp.c: 86:     lcd_write_char(' ');
  1640  0F37  3020               	movlw	32
  1641  0F38  120A  158A  247F  120A  158A  	fcall	_lcd_write_char
  1642  0F3D                     l1973:
  1643                           
  1644                           ;sensor_temp.c: 88:     lcd_write_char(str[0]);
  1645  0F3D  1683               	bsf	3,5	;RP0=1, select bank1
  1646  0F3E  1303               	bcf	3,6	;RP1=0, select bank1
  1647  0F3F  083C               	movf	display@str^(0+128),w
  1648  0F40  120A  158A  247F  120A  158A  	fcall	_lcd_write_char
  1649  0F45                     l1975:
  1650                           
  1651                           ;sensor_temp.c: 89:     lcd_write_char(str[1]);
  1652  0F45  1683               	bsf	3,5	;RP0=1, select bank1
  1653  0F46  1303               	bcf	3,6	;RP1=0, select bank1
  1654  0F47  083D               	movf	(display@str^(0+128)+1),w
  1655  0F48  120A  158A  247F  120A  158A  	fcall	_lcd_write_char
  1656  0F4D                     l1977:
  1657                           
  1658                           ;sensor_temp.c: 90:     lcd_write_char(str[2]);
  1659  0F4D  1683               	bsf	3,5	;RP0=1, select bank1
  1660  0F4E  1303               	bcf	3,6	;RP1=0, select bank1
  1661  0F4F  083E               	movf	(display@str^(0+128)+2),w
  1662  0F50  120A  158A  247F  120A  158A  	fcall	_lcd_write_char
  1663  0F55                     l1979:
  1664                           
  1665                           ;sensor_temp.c: 91:     lcd_write_char(str[3]);
  1666  0F55  1683               	bsf	3,5	;RP0=1, select bank1
  1667  0F56  1303               	bcf	3,6	;RP1=0, select bank1
  1668  0F57  083F               	movf	(display@str^(0+128)+3),w
  1669  0F58  120A  158A  247F  120A  158A  	fcall	_lcd_write_char
  1670  0F5D                     l65:
  1671  0F5D  0008               	return
  1672  0F5E                     __end_of_display:
  1673                           
  1674                           	psect	text5
  1675  0566                     __ptext5:	
  1676 ;; *************** function _sprintf *****************
  1677 ;; Defined at:
  1678 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1679 ;; Parameters:    Size  Location     Type
  1680 ;;  sp              1    wreg     PTR unsigned char 
  1681 ;;		 -> display@str(3), str_pot_b(5), str_pot_a(6), 
  1682 ;;  f               1   14[BANK1 ] PTR const unsigned char 
  1683 ;;		 -> STR_4(5), STR_2(8), STR_1(7), 
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;  sp              1   24[BANK1 ] PTR unsigned char 
  1686 ;;		 -> display@str(3), str_pot_b(5), str_pot_a(6), 
  1687 ;;  tmpval          4    0        struct .
  1688 ;;  val             2   22[BANK1 ] unsigned int 
  1689 ;;  cp              2    0        PTR const unsigned char 
  1690 ;;  len             2    0        unsigned int 
  1691 ;;  c               1   26[BANK1 ] unsigned char 
  1692 ;;  prec            1   25[BANK1 ] char 
  1693 ;;  flag            1   21[BANK1 ] unsigned char 
  1694 ;;  ap              1   20[BANK1 ] PTR void [1]
  1695 ;;		 -> ?_sprintf(2), 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  2   14[BANK1 ] int 
  1698 ;; Registers used:
  1699 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1705 ;;      Params:         0       0       3       0       0
  1706 ;;      Locals:         0       0       7       0       0
  1707 ;;      Temps:          0       0       3       0       0
  1708 ;;      Totals:         0       0      13       0       0
  1709 ;;Total ram usage:       13 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    4
  1712 ;; This function calls:
  1713 ;;		___bmul
  1714 ;;		___lwdiv
  1715 ;;		___lwmod
  1716 ;;		_isdigit
  1717 ;; This function is called by:
  1718 ;;		_main
  1719 ;;		_display
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           
  1724                           ;psect for function _sprintf
  1725  0566                     _sprintf:
  1726                           
  1727                           ;incstack = 0
  1728                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1729                           ;sprintf@sp stored from wreg
  1730  0566  1683               	bsf	3,5	;RP0=1, select bank1
  1731  0567  1303               	bcf	3,6	;RP1=0, select bank1
  1732  0568  00B8               	movwf	sprintf@sp^(0+128)
  1733  0569                     l1721:
  1734                           
  1735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1736  0569  30AF               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1737  056A  00B1               	movwf	??_sprintf^(0+128)
  1738  056B  0831               	movf	??_sprintf^(0+128),w
  1739  056C  00B4               	movwf	sprintf@ap^(0+128)
  1740                           
  1741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1742  056D  2EB4               	goto	l1799
  1743  056E                     l1723:
  1744                           
  1745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1746  056E  3025               	movlw	37
  1747  056F  063A               	xorwf	sprintf@c^(0+128),w
  1748  0570  1903               	btfsc	3,2
  1749  0571  2D73               	goto	u1561
  1750  0572  2D74               	goto	u1560
  1751  0573                     u1561:
  1752  0573  2D80               	goto	l1729
  1753  0574                     u1560:
  1754  0574                     l1725:
  1755                           
  1756                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1757  0574  083A               	movf	sprintf@c^(0+128),w
  1758  0575  00B1               	movwf	??_sprintf^(0+128)
  1759  0576  0838               	movf	sprintf@sp^(0+128),w
  1760  0577  0084               	movwf	4
  1761  0578  0831               	movf	??_sprintf^(0+128),w
  1762  0579  1383               	bcf	3,7	;select IRP bank0
  1763  057A  0080               	movwf	0
  1764  057B                     l1727:
  1765  057B  3001               	movlw	1
  1766  057C  00B1               	movwf	??_sprintf^(0+128)
  1767  057D  0831               	movf	??_sprintf^(0+128),w
  1768  057E  07B8               	addwf	sprintf@sp^(0+128),f
  1769                           
  1770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1771  057F  2EB4               	goto	l1799
  1772  0580                     l1729:
  1773                           
  1774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1775  0580  01B5               	clrf	sprintf@flag^(0+128)
  1776  0581                     l1731:
  1777                           
  1778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1779  0581  082E               	movf	sprintf@f^(0+128),w
  1780  0582  0084               	movwf	4
  1781  0583  120A  158A  2000  120A  118A  	fcall	stringdir
  1782  0588  3A2E               	xorlw	46
  1783  0589  1D03               	skipz
  1784  058A  2D8C               	goto	u1571
  1785  058B  2D8D               	goto	u1570
  1786  058C                     u1571:
  1787  058C  2DC4               	goto	l1745
  1788  058D                     u1570:
  1789  058D                     l1733:
  1790                           
  1791                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1792  058D  3001               	movlw	1
  1793  058E  00B1               	movwf	??_sprintf^(0+128)
  1794  058F  0831               	movf	??_sprintf^(0+128),w
  1795  0590  07AE               	addwf	sprintf@f^(0+128),f
  1796  0591                     l1735:
  1797                           
  1798                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1799  0591  01B9               	clrf	sprintf@prec^(0+128)
  1800                           
  1801                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1802  0592  2DB3               	goto	l1743
  1803  0593                     l1737:
  1804                           
  1805                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1806  0593  1683               	bsf	3,5	;RP0=1, select bank1
  1807  0594  1303               	bcf	3,6	;RP1=0, select bank1
  1808  0595  0839               	movf	sprintf@prec^(0+128),w
  1809  0596  00B1               	movwf	??_sprintf^(0+128)
  1810  0597  0831               	movf	??_sprintf^(0+128),w
  1811  0598  00A0               	movwf	___bmul@multiplicand^(0+128)
  1812  0599  300A               	movlw	10
  1813  059A  120A  118A  27E6  120A  118A  	fcall	___bmul
  1814  059F  1683               	bsf	3,5	;RP0=1, select bank1
  1815  05A0  1303               	bcf	3,6	;RP1=0, select bank1
  1816  05A1  00B2               	movwf	(??_sprintf+1)^(0+128)
  1817  05A2  0832               	movf	(??_sprintf+1)^(0+128),w
  1818  05A3  00B9               	movwf	sprintf@prec^(0+128)
  1819  05A4                     l1739:
  1820                           
  1821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1822  05A4  082E               	movf	sprintf@f^(0+128),w
  1823  05A5  0084               	movwf	4
  1824  05A6  120A  158A  2000  120A  118A  	fcall	stringdir
  1825  05AB  3ED0               	addlw	-48
  1826  05AC  00B1               	movwf	??_sprintf^(0+128)
  1827  05AD  0831               	movf	??_sprintf^(0+128),w
  1828  05AE  07B9               	addwf	sprintf@prec^(0+128),f
  1829  05AF                     l1741:
  1830  05AF  3001               	movlw	1
  1831  05B0  00B1               	movwf	??_sprintf^(0+128)
  1832  05B1  0831               	movf	??_sprintf^(0+128),w
  1833  05B2  07AE               	addwf	sprintf@f^(0+128),f
  1834  05B3                     l1743:
  1835                           
  1836                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1837  05B3  082E               	movf	sprintf@f^(0+128),w
  1838  05B4  0084               	movwf	4
  1839  05B5  120A  158A  2000  120A  118A  	fcall	stringdir
  1840  05BA  120A  158A  2400  120A  118A  	fcall	_isdigit
  1841  05BF  1803               	btfsc	3,0
  1842  05C0  2DC2               	goto	u1581
  1843  05C1  2DC3               	goto	u1580
  1844  05C2                     u1581:
  1845  05C2  2D93               	goto	l1737
  1846  05C3                     u1580:
  1847  05C3  2DC5               	goto	l1749
  1848  05C4                     l1745:
  1849                           
  1850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1851  05C4  01B9               	clrf	sprintf@prec^(0+128)
  1852  05C5                     l1749:
  1853  05C5  3001               	movlw	1
  1854  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  1855  05C7  1303               	bcf	3,6	;RP1=0, select bank1
  1856  05C8  07AE               	addwf	sprintf@f^(0+128),f
  1857  05C9  30FF               	movlw	-1
  1858  05CA  072E               	addwf	sprintf@f^(0+128),w
  1859  05CB  0084               	movwf	4
  1860  05CC  120A  158A  2000  120A  118A  	fcall	stringdir
  1861  05D1  00BA               	movwf	sprintf@c^(0+128)
  1862  05D2  00B1               	movwf	??_sprintf^(0+128)
  1863  05D3  01B2               	clrf	(??_sprintf^(0+128)+1)
  1864                           
  1865                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1866                           ; Switch size 1, requested type "simple"
  1867                           ; Number of cases is 1, Range of values is 0 to 0
  1868                           ; switch strategies available:
  1869                           ; Name         Instructions Cycles
  1870                           ; simple_byte            4     3 (average)
  1871                           ; direct_byte           11     8 (fixed)
  1872                           ; jumptable            260     6 (fixed)
  1873                           ;	Chosen strategy is simple_byte
  1874  05D4  0832               	movf	(??_sprintf+1)^(0+128),w
  1875  05D5  3A00               	xorlw	0	; case 0
  1876  05D6  1903               	skipnz
  1877  05D7  2DD9               	goto	l2431
  1878  05D8  2EB4               	goto	l1799
  1879  05D9                     l2431:
  1880                           
  1881                           ; Switch size 1, requested type "simple"
  1882                           ; Number of cases is 3, Range of values is 0 to 105
  1883                           ; switch strategies available:
  1884                           ; Name         Instructions Cycles
  1885                           ; simple_byte           10     6 (average)
  1886                           ; jumptable            260     6 (fixed)
  1887                           ;	Chosen strategy is simple_byte
  1888  05D9  0831               	movf	??_sprintf^(0+128),w
  1889  05DA  3A00               	xorlw	0	; case 0
  1890  05DB  1903               	skipnz
  1891  05DC  2EC6               	goto	l1801
  1892  05DD  3A64               	xorlw	100	; case 100
  1893  05DE  1903               	skipnz
  1894  05DF  2DE4               	goto	l1751
  1895  05E0  3A0D               	xorlw	13	; case 105
  1896  05E1  1903               	skipnz
  1897  05E2  2DE4               	goto	l1751
  1898  05E3  2EB4               	goto	l1799
  1899  05E4                     l1751:
  1900                           
  1901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1902  05E4  0834               	movf	sprintf@ap^(0+128),w
  1903  05E5  0084               	movwf	4
  1904  05E6  1383               	bcf	3,7	;select IRP bank0
  1905  05E7  0800               	movf	0,w
  1906  05E8  00B6               	movwf	sprintf@val^(0+128)
  1907  05E9  0A84               	incf	4,f
  1908  05EA  0800               	movf	0,w
  1909  05EB  00B7               	movwf	(sprintf@val+1)^(0+128)
  1910  05EC                     l1753:
  1911  05EC  3002               	movlw	2
  1912  05ED  00B1               	movwf	??_sprintf^(0+128)
  1913  05EE  0831               	movf	??_sprintf^(0+128),w
  1914  05EF  07B4               	addwf	sprintf@ap^(0+128),f
  1915  05F0                     l1755:
  1916                           
  1917                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1918  05F0  1FB7               	btfss	(sprintf@val+1)^(0+128),7
  1919  05F1  2DF3               	goto	u1591
  1920  05F2  2DF4               	goto	u1590
  1921  05F3                     u1591:
  1922  05F3  2DFD               	goto	l1761
  1923  05F4                     u1590:
  1924  05F4                     l1757:
  1925                           
  1926                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1927  05F4  3003               	movlw	3
  1928  05F5  00B1               	movwf	??_sprintf^(0+128)
  1929  05F6  0831               	movf	??_sprintf^(0+128),w
  1930  05F7  04B5               	iorwf	sprintf@flag^(0+128),f
  1931  05F8                     l1759:
  1932                           
  1933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1934  05F8  09B6               	comf	sprintf@val^(0+128),f
  1935  05F9  09B7               	comf	(sprintf@val+1)^(0+128),f
  1936  05FA  0AB6               	incf	sprintf@val^(0+128),f
  1937  05FB  1903               	skipnz
  1938  05FC  0AB7               	incf	(sprintf@val+1)^(0+128),f
  1939  05FD                     l1761:
  1940                           
  1941                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  1942  05FD  0839               	movf	sprintf@prec^(0+128),w
  1943  05FE  1D03               	btfss	3,2
  1944  05FF  2E01               	goto	u1601
  1945  0600  2E02               	goto	u1600
  1946  0601                     u1601:
  1947  0601  2E0C               	goto	l1767
  1948  0602                     u1600:
  1949  0602                     l1763:
  1950  0602  0836               	movf	sprintf@val^(0+128),w
  1951  0603  0437               	iorwf	(sprintf@val+1)^(0+128),w
  1952  0604  1D03               	btfss	3,2
  1953  0605  2E07               	goto	u1611
  1954  0606  2E08               	goto	u1610
  1955  0607                     u1611:
  1956  0607  2E0C               	goto	l1767
  1957  0608                     u1610:
  1958  0608                     l1765:
  1959                           
  1960                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  1961  0608  3001               	movlw	1
  1962  0609  00B1               	movwf	??_sprintf^(0+128)
  1963  060A  0831               	movf	??_sprintf^(0+128),w
  1964  060B  07B9               	addwf	sprintf@prec^(0+128),f
  1965  060C                     l1767:
  1966                           
  1967                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1968  060C  01BA               	clrf	sprintf@c^(0+128)
  1969  060D  0ABA               	incf	sprintf@c^(0+128),f
  1970  060E                     l1771:
  1971                           
  1972                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1973  060E  083A               	movf	sprintf@c^(0+128),w
  1974  060F  00B1               	movwf	??_sprintf^(0+128)
  1975  0610  0731               	addwf	??_sprintf^(0+128),w
  1976  0611  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1977  0612  0084               	movwf	4
  1978  0613  120A  158A  2000  120A  118A  	fcall	stringdir
  1979  0618  00B2               	movwf	(??_sprintf+1)^(0+128)
  1980  0619  120A  158A  2000  120A  118A  	fcall	stringdir
  1981  061E  00B3               	movwf	((??_sprintf+1)^(0+128)+1)
  1982  061F  0833               	movf	(??_sprintf+2)^(0+128),w
  1983  0620  0237               	subwf	(sprintf@val+1)^(0+128),w
  1984  0621  1D03               	skipz
  1985  0622  2E25               	goto	u1625
  1986  0623  0832               	movf	(??_sprintf+1)^(0+128),w
  1987  0624  0236               	subwf	sprintf@val^(0+128),w
  1988  0625                     u1625:
  1989  0625  1803               	skipnc
  1990  0626  2E28               	goto	u1621
  1991  0627  2E29               	goto	u1620
  1992  0628                     u1621:
  1993  0628  2E2A               	goto	l1775
  1994  0629                     u1620:
  1995  0629  2E34               	goto	l1777
  1996  062A                     l1775:
  1997  062A  3001               	movlw	1
  1998  062B  00B1               	movwf	??_sprintf^(0+128)
  1999  062C  0831               	movf	??_sprintf^(0+128),w
  2000  062D  07BA               	addwf	sprintf@c^(0+128),f
  2001  062E  3005               	movlw	5
  2002  062F  063A               	xorwf	sprintf@c^(0+128),w
  2003  0630  1D03               	btfss	3,2
  2004  0631  2E33               	goto	u1631
  2005  0632  2E34               	goto	u1630
  2006  0633                     u1631:
  2007  0633  2E0E               	goto	l1771
  2008  0634                     u1630:
  2009  0634                     l1777:
  2010                           
  2011                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  2012  0634  0839               	movf	sprintf@prec^(0+128),w
  2013  0635  00B1               	movwf	??_sprintf^(0+128)
  2014  0636  01B2               	clrf	(??_sprintf^(0+128)+1)
  2015  0637  1BB1               	btfsc	??_sprintf^(0+128),7
  2016  0638  03B2               	decf	(??_sprintf^(0+128)+1),f
  2017  0639  0832               	movf	(??_sprintf+1)^(0+128),w
  2018  063A  3A80               	xorlw	128
  2019  063B  3C80               	sublw	128
  2020  063C  1D03               	skipz
  2021  063D  2E40               	goto	u1645
  2022  063E  0831               	movf	??_sprintf^(0+128),w
  2023  063F  023A               	subwf	sprintf@c^(0+128),w
  2024  0640                     u1645:
  2025  0640  1803               	skipnc
  2026  0641  2E43               	goto	u1641
  2027  0642  2E44               	goto	u1640
  2028  0643                     u1641:
  2029  0643  2E45               	goto	l1781
  2030  0644                     u1640:
  2031  0644                     l1779:
  2032  0644  2E5F               	goto	l1785
  2033  0645                     l1781:
  2034  0645  1683               	bsf	3,5	;RP0=1, select bank1
  2035  0646  1303               	bcf	3,6	;RP1=0, select bank1
  2036  0647  0839               	movf	sprintf@prec^(0+128),w
  2037  0648  00B1               	movwf	??_sprintf^(0+128)
  2038  0649  01B2               	clrf	(??_sprintf^(0+128)+1)
  2039  064A  1BB1               	btfsc	??_sprintf^(0+128),7
  2040  064B  03B2               	decf	(??_sprintf^(0+128)+1),f
  2041  064C  0832               	movf	(??_sprintf+1)^(0+128),w
  2042  064D  3A80               	xorlw	128
  2043  064E  00B3               	movwf	(??_sprintf+2)^(0+128)
  2044  064F  3080               	movlw	128
  2045  0650  0233               	subwf	(??_sprintf+2)^(0+128),w
  2046  0651  1D03               	skipz
  2047  0652  2E55               	goto	u1655
  2048  0653  083A               	movf	sprintf@c^(0+128),w
  2049  0654  0231               	subwf	??_sprintf^(0+128),w
  2050  0655                     u1655:
  2051  0655  1803               	skipnc
  2052  0656  2E58               	goto	u1651
  2053  0657  2E59               	goto	u1650
  2054  0658                     u1651:
  2055  0658  2E5F               	goto	l1785
  2056  0659                     u1650:
  2057  0659                     l1783:
  2058                           
  2059                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  2060  0659  1683               	bsf	3,5	;RP0=1, select bank1
  2061  065A  1303               	bcf	3,6	;RP1=0, select bank1
  2062  065B  083A               	movf	sprintf@c^(0+128),w
  2063  065C  00B1               	movwf	??_sprintf^(0+128)
  2064  065D  0831               	movf	??_sprintf^(0+128),w
  2065  065E  00B9               	movwf	sprintf@prec^(0+128)
  2066  065F                     l1785:
  2067                           
  2068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2069  065F  1683               	bsf	3,5	;RP0=1, select bank1
  2070  0660  1303               	bcf	3,6	;RP1=0, select bank1
  2071  0661  0835               	movf	sprintf@flag^(0+128),w
  2072  0662  3903               	andlw	3
  2073  0663  1903               	btfsc	3,2
  2074  0664  2E66               	goto	u1661
  2075  0665  2E67               	goto	u1660
  2076  0666                     u1661:
  2077  0666  2EAB               	goto	l1797
  2078  0667                     u1660:
  2079  0667                     l1787:
  2080                           
  2081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2082  0667  302D               	movlw	45
  2083  0668  00B1               	movwf	??_sprintf^(0+128)
  2084  0669  0838               	movf	sprintf@sp^(0+128),w
  2085  066A  0084               	movwf	4
  2086  066B  0831               	movf	??_sprintf^(0+128),w
  2087  066C  1383               	bcf	3,7	;select IRP bank0
  2088  066D  0080               	movwf	0
  2089  066E                     l1789:
  2090  066E  3001               	movlw	1
  2091  066F  00B1               	movwf	??_sprintf^(0+128)
  2092  0670  0831               	movf	??_sprintf^(0+128),w
  2093  0671  07B8               	addwf	sprintf@sp^(0+128),f
  2094  0672  2EAB               	goto	l1797
  2095  0673                     l1791:
  2096                           
  2097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2098  0673  300A               	movlw	10
  2099  0674  00A8               	movwf	___lwmod@divisor^(0+128)
  2100  0675  3000               	movlw	0
  2101  0676  00A9               	movwf	(___lwmod@divisor^(0+128)+1)
  2102  0677  0839               	movf	sprintf@prec^(0+128),w
  2103  0678  00B1               	movwf	??_sprintf^(0+128)
  2104  0679  0731               	addwf	??_sprintf^(0+128),w
  2105  067A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2106  067B  0084               	movwf	4
  2107  067C  120A  158A  2000  120A  118A  	fcall	stringdir
  2108  0681  00A0               	movwf	___lwdiv@divisor^(0+128)
  2109  0682  120A  158A  2000  120A  118A  	fcall	stringdir
  2110  0687  00A1               	movwf	(___lwdiv@divisor+1)^(0+128)
  2111  0688  0837               	movf	(sprintf@val+1)^(0+128),w
  2112  0689  00A3               	movwf	(___lwdiv@dividend+1)^(0+128)
  2113  068A  0836               	movf	sprintf@val^(0+128),w
  2114  068B  00A2               	movwf	___lwdiv@dividend^(0+128)
  2115  068C  120A  158A  254F  120A  118A  	fcall	___lwdiv
  2116  0691  1683               	bsf	3,5	;RP0=1, select bank1
  2117  0692  1303               	bcf	3,6	;RP1=0, select bank1
  2118  0693  0821               	movf	(?___lwdiv+1)^(0+128),w
  2119  0694  00AB               	movwf	(___lwmod@dividend+1)^(0+128)
  2120  0695  0820               	movf	?___lwdiv^(0+128),w
  2121  0696  00AA               	movwf	___lwmod@dividend^(0+128)
  2122  0697  120A  158A  2513  120A  118A  	fcall	___lwmod
  2123  069C  1683               	bsf	3,5	;RP0=1, select bank1
  2124  069D  1303               	bcf	3,6	;RP1=0, select bank1
  2125  069E  0828               	movf	?___lwmod^(0+128),w
  2126  069F  3E30               	addlw	48
  2127  06A0  00B2               	movwf	(??_sprintf+1)^(0+128)
  2128  06A1  0832               	movf	(??_sprintf+1)^(0+128),w
  2129  06A2  00BA               	movwf	sprintf@c^(0+128)
  2130  06A3                     l1793:
  2131                           
  2132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2133  06A3  083A               	movf	sprintf@c^(0+128),w
  2134  06A4  00B1               	movwf	??_sprintf^(0+128)
  2135  06A5  0838               	movf	sprintf@sp^(0+128),w
  2136  06A6  0084               	movwf	4
  2137  06A7  0831               	movf	??_sprintf^(0+128),w
  2138  06A8  1383               	bcf	3,7	;select IRP bank0
  2139  06A9  0080               	movwf	0
  2140  06AA  2E6E               	goto	l1789
  2141  06AB                     l1797:
  2142                           
  2143                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2144  06AB  30FF               	movlw	255
  2145  06AC  00B1               	movwf	??_sprintf^(0+128)
  2146  06AD  0831               	movf	??_sprintf^(0+128),w
  2147  06AE  07B9               	addwf	sprintf@prec^(0+128),f
  2148  06AF  0A39               	incf	sprintf@prec^(0+128),w
  2149  06B0  1D03               	btfss	3,2
  2150  06B1  2EB3               	goto	u1671
  2151  06B2  2EB4               	goto	u1670
  2152  06B3                     u1671:
  2153  06B3  2E73               	goto	l1791
  2154  06B4                     u1670:
  2155  06B4                     l1799:
  2156                           
  2157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2158  06B4  3001               	movlw	1
  2159  06B5  07AE               	addwf	sprintf@f^(0+128),f
  2160  06B6  30FF               	movlw	-1
  2161  06B7  072E               	addwf	sprintf@f^(0+128),w
  2162  06B8  0084               	movwf	4
  2163  06B9  120A  158A  2000  120A  118A  	fcall	stringdir
  2164  06BE  00B1               	movwf	??_sprintf^(0+128)
  2165  06BF  0831               	movf	??_sprintf^(0+128),w
  2166  06C0  00BA               	movwf	sprintf@c^(0+128)
  2167  06C1  083A               	movf	sprintf@c^(0+128),w
  2168  06C2  1D03               	btfss	3,2
  2169  06C3  2EC5               	goto	u1681
  2170  06C4  2EC6               	goto	u1680
  2171  06C5                     u1681:
  2172  06C5  2D6E               	goto	l1723
  2173  06C6                     u1680:
  2174  06C6                     l1801:
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2177  06C6  0838               	movf	sprintf@sp^(0+128),w
  2178  06C7  0084               	movwf	4
  2179  06C8  1383               	bcf	3,7	;select IRP bank0
  2180  06C9  0180               	clrf	0
  2181  06CA                     l304:
  2182  06CA  0008               	return
  2183  06CB                     __end_of_sprintf:
  2184                           
  2185                           	psect	text6
  2186  0C00                     __ptext6:	
  2187 ;; *************** function _isdigit *****************
  2188 ;; Defined at:
  2189 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  2190 ;; Parameters:    Size  Location     Type
  2191 ;;  c               1    wreg     unsigned char 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  c               1    1[BANK1 ] unsigned char 
  2194 ;; Return value:  Size  Location     Type
  2195 ;;		None               void
  2196 ;; Registers used:
  2197 ;;		wreg, status,2, status,0
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2203 ;;      Params:         0       0       0       0       0
  2204 ;;      Locals:         0       0       2       0       0
  2205 ;;      Temps:          0       0       0       0       0
  2206 ;;      Totals:         0       0       2       0       0
  2207 ;;Total ram usage:        2 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:    3
  2210 ;; This function calls:
  2211 ;;		Nothing
  2212 ;; This function is called by:
  2213 ;;		_sprintf
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           
  2218                           ;psect for function _isdigit
  2219  0C00                     _isdigit:
  2220                           
  2221                           ;incstack = 0
  2222                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2223                           ;isdigit@c stored from wreg
  2224  0C00  1683               	bsf	3,5	;RP0=1, select bank1
  2225  0C01  1303               	bcf	3,6	;RP1=0, select bank1
  2226  0C02  00A1               	movwf	isdigit@c^(0+128)
  2227  0C03                     l1647:
  2228  0C03  01A0               	clrf	_isdigit$907^(0+128)
  2229  0C04                     l1649:
  2230  0C04  303A               	movlw	58
  2231  0C05  0221               	subwf	isdigit@c^(0+128),w
  2232  0C06  1803               	skipnc
  2233  0C07  2C09               	goto	u1391
  2234  0C08  2C0A               	goto	u1390
  2235  0C09                     u1391:
  2236  0C09  2C12               	goto	l1655
  2237  0C0A                     u1390:
  2238  0C0A                     l1651:
  2239  0C0A  3030               	movlw	48
  2240  0C0B  0221               	subwf	isdigit@c^(0+128),w
  2241  0C0C  1C03               	skipc
  2242  0C0D  2C0F               	goto	u1401
  2243  0C0E  2C10               	goto	u1400
  2244  0C0F                     u1401:
  2245  0C0F  2C12               	goto	l1655
  2246  0C10                     u1400:
  2247  0C10                     l1653:
  2248  0C10  01A0               	clrf	_isdigit$907^(0+128)
  2249  0C11  0AA0               	incf	_isdigit$907^(0+128),f
  2250  0C12                     l1655:
  2251  0C12  0C20               	rrf	_isdigit$907^(0+128),w
  2252  0C13                     l761:
  2253  0C13  0008               	return
  2254  0C14                     __end_of_isdigit:
  2255                           
  2256                           	psect	text7
  2257  0D13                     __ptext7:	
  2258 ;; *************** function ___lwmod *****************
  2259 ;; Defined at:
  2260 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  divisor         2    8[BANK1 ] unsigned int 
  2263 ;;  dividend        2   10[BANK1 ] unsigned int 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  counter         1   13[BANK1 ] unsigned char 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  2    8[BANK1 ] unsigned int 
  2268 ;; Registers used:
  2269 ;;		wreg, status,2, status,0
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2275 ;;      Params:         0       0       4       0       0
  2276 ;;      Locals:         0       0       1       0       0
  2277 ;;      Temps:          0       0       1       0       0
  2278 ;;      Totals:         0       0       6       0       0
  2279 ;;Total ram usage:        6 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    3
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_sprintf
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           
  2290                           ;psect for function ___lwmod
  2291  0D13                     ___lwmod:
  2292  0D13                     l1699:	
  2293                           ;incstack = 0
  2294                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2295                           
  2296  0D13  1683               	bsf	3,5	;RP0=1, select bank1
  2297  0D14  1303               	bcf	3,6	;RP1=0, select bank1
  2298  0D15  0828               	movf	___lwmod@divisor^(0+128),w
  2299  0D16  0429               	iorwf	(___lwmod@divisor+1)^(0+128),w
  2300  0D17  1903               	btfsc	3,2
  2301  0D18  2D1A               	goto	u1501
  2302  0D19  2D1B               	goto	u1500
  2303  0D1A                     u1501:
  2304  0D1A  2D4A               	goto	l1717
  2305  0D1B                     u1500:
  2306  0D1B                     l1701:
  2307  0D1B  01AD               	clrf	___lwmod@counter^(0+128)
  2308  0D1C  0AAD               	incf	___lwmod@counter^(0+128),f
  2309  0D1D  2D29               	goto	l1707
  2310  0D1E                     l1703:
  2311  0D1E  3001               	movlw	1
  2312  0D1F                     u1515:
  2313  0D1F  1003               	clrc
  2314  0D20  0DA8               	rlf	___lwmod@divisor^(0+128),f
  2315  0D21  0DA9               	rlf	(___lwmod@divisor+1)^(0+128),f
  2316  0D22  3EFF               	addlw	-1
  2317  0D23  1D03               	skipz
  2318  0D24  2D1F               	goto	u1515
  2319  0D25                     l1705:
  2320  0D25  3001               	movlw	1
  2321  0D26  00AC               	movwf	??___lwmod^(0+128)
  2322  0D27  082C               	movf	??___lwmod^(0+128),w
  2323  0D28  07AD               	addwf	___lwmod@counter^(0+128),f
  2324  0D29                     l1707:
  2325  0D29  1FA9               	btfss	(___lwmod@divisor+1)^(0+128),7
  2326  0D2A  2D2C               	goto	u1521
  2327  0D2B  2D2D               	goto	u1520
  2328  0D2C                     u1521:
  2329  0D2C  2D1E               	goto	l1703
  2330  0D2D                     u1520:
  2331  0D2D                     l1709:
  2332  0D2D  0829               	movf	(___lwmod@divisor+1)^(0+128),w
  2333  0D2E  022B               	subwf	(___lwmod@dividend+1)^(0+128),w
  2334  0D2F  1D03               	skipz
  2335  0D30  2D33               	goto	u1535
  2336  0D31  0828               	movf	___lwmod@divisor^(0+128),w
  2337  0D32  022A               	subwf	___lwmod@dividend^(0+128),w
  2338  0D33                     u1535:
  2339  0D33  1C03               	skipc
  2340  0D34  2D36               	goto	u1531
  2341  0D35  2D37               	goto	u1530
  2342  0D36                     u1531:
  2343  0D36  2D3D               	goto	l1713
  2344  0D37                     u1530:
  2345  0D37                     l1711:
  2346  0D37  0828               	movf	___lwmod@divisor^(0+128),w
  2347  0D38  02AA               	subwf	___lwmod@dividend^(0+128),f
  2348  0D39  0829               	movf	(___lwmod@divisor+1)^(0+128),w
  2349  0D3A  1C03               	skipc
  2350  0D3B  03AB               	decf	(___lwmod@dividend+1)^(0+128),f
  2351  0D3C  02AB               	subwf	(___lwmod@dividend+1)^(0+128),f
  2352  0D3D                     l1713:
  2353  0D3D  3001               	movlw	1
  2354  0D3E                     u1545:
  2355  0D3E  1003               	clrc
  2356  0D3F  0CA9               	rrf	(___lwmod@divisor+1)^(0+128),f
  2357  0D40  0CA8               	rrf	___lwmod@divisor^(0+128),f
  2358  0D41  3EFF               	addlw	-1
  2359  0D42  1D03               	skipz
  2360  0D43  2D3E               	goto	u1545
  2361  0D44                     l1715:
  2362  0D44  3001               	movlw	1
  2363  0D45  02AD               	subwf	___lwmod@counter^(0+128),f
  2364  0D46  1D03               	btfss	3,2
  2365  0D47  2D49               	goto	u1551
  2366  0D48  2D4A               	goto	u1550
  2367  0D49                     u1551:
  2368  0D49  2D2D               	goto	l1709
  2369  0D4A                     u1550:
  2370  0D4A                     l1717:
  2371  0D4A  082B               	movf	(___lwmod@dividend+1)^(0+128),w
  2372  0D4B  00A9               	movwf	(?___lwmod+1)^(0+128)
  2373  0D4C  082A               	movf	___lwmod@dividend^(0+128),w
  2374  0D4D  00A8               	movwf	?___lwmod^(0+128)
  2375  0D4E                     l590:
  2376  0D4E  0008               	return
  2377  0D4F                     __end_of___lwmod:
  2378                           
  2379                           	psect	text8
  2380  0D4F                     __ptext8:	
  2381 ;; *************** function ___lwdiv *****************
  2382 ;; Defined at:
  2383 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;  divisor         2    0[BANK1 ] unsigned int 
  2386 ;;  dividend        2    2[BANK1 ] unsigned int 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  quotient        2    5[BANK1 ] unsigned int 
  2389 ;;  counter         1    7[BANK1 ] unsigned char 
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  2    0[BANK1 ] unsigned int 
  2392 ;; Registers used:
  2393 ;;		wreg, status,2, status,0
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2399 ;;      Params:         0       0       4       0       0
  2400 ;;      Locals:         0       0       3       0       0
  2401 ;;      Temps:          0       0       1       0       0
  2402 ;;      Totals:         0       0       8       0       0
  2403 ;;Total ram usage:        8 bytes
  2404 ;; Hardware stack levels used:    1
  2405 ;; Hardware stack levels required when called:    3
  2406 ;; This function calls:
  2407 ;;		Nothing
  2408 ;; This function is called by:
  2409 ;;		_sprintf
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           
  2414                           ;psect for function ___lwdiv
  2415  0D4F                     ___lwdiv:
  2416  0D4F                     l1673:	
  2417                           ;incstack = 0
  2418                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2419                           
  2420  0D4F  1683               	bsf	3,5	;RP0=1, select bank1
  2421  0D50  1303               	bcf	3,6	;RP1=0, select bank1
  2422  0D51  01A5               	clrf	___lwdiv@quotient^(0+128)
  2423  0D52  01A6               	clrf	(___lwdiv@quotient+1)^(0+128)
  2424  0D53                     l1675:
  2425  0D53  0820               	movf	___lwdiv@divisor^(0+128),w
  2426  0D54  0421               	iorwf	(___lwdiv@divisor+1)^(0+128),w
  2427  0D55  1903               	btfsc	3,2
  2428  0D56  2D58               	goto	u1431
  2429  0D57  2D59               	goto	u1430
  2430  0D58                     u1431:
  2431  0D58  2D90               	goto	l1695
  2432  0D59                     u1430:
  2433  0D59                     l1677:
  2434  0D59  01A7               	clrf	___lwdiv@counter^(0+128)
  2435  0D5A  0AA7               	incf	___lwdiv@counter^(0+128),f
  2436  0D5B  2D67               	goto	l1683
  2437  0D5C                     l1679:
  2438  0D5C  3001               	movlw	1
  2439  0D5D                     u1445:
  2440  0D5D  1003               	clrc
  2441  0D5E  0DA0               	rlf	___lwdiv@divisor^(0+128),f
  2442  0D5F  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  2443  0D60  3EFF               	addlw	-1
  2444  0D61  1D03               	skipz
  2445  0D62  2D5D               	goto	u1445
  2446  0D63                     l1681:
  2447  0D63  3001               	movlw	1
  2448  0D64  00A4               	movwf	??___lwdiv^(0+128)
  2449  0D65  0824               	movf	??___lwdiv^(0+128),w
  2450  0D66  07A7               	addwf	___lwdiv@counter^(0+128),f
  2451  0D67                     l1683:
  2452  0D67  1FA1               	btfss	(___lwdiv@divisor+1)^(0+128),7
  2453  0D68  2D6A               	goto	u1451
  2454  0D69  2D6B               	goto	u1450
  2455  0D6A                     u1451:
  2456  0D6A  2D5C               	goto	l1679
  2457  0D6B                     u1450:
  2458  0D6B                     l1685:
  2459  0D6B  3001               	movlw	1
  2460  0D6C                     u1465:
  2461  0D6C  1003               	clrc
  2462  0D6D  0DA5               	rlf	___lwdiv@quotient^(0+128),f
  2463  0D6E  0DA6               	rlf	(___lwdiv@quotient+1)^(0+128),f
  2464  0D6F  3EFF               	addlw	-1
  2465  0D70  1D03               	skipz
  2466  0D71  2D6C               	goto	u1465
  2467  0D72  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  2468  0D73  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  2469  0D74  1D03               	skipz
  2470  0D75  2D78               	goto	u1475
  2471  0D76  0820               	movf	___lwdiv@divisor^(0+128),w
  2472  0D77  0222               	subwf	___lwdiv@dividend^(0+128),w
  2473  0D78                     u1475:
  2474  0D78  1C03               	skipc
  2475  0D79  2D7B               	goto	u1471
  2476  0D7A  2D7C               	goto	u1470
  2477  0D7B                     u1471:
  2478  0D7B  2D83               	goto	l1691
  2479  0D7C                     u1470:
  2480  0D7C                     l1687:
  2481  0D7C  0820               	movf	___lwdiv@divisor^(0+128),w
  2482  0D7D  02A2               	subwf	___lwdiv@dividend^(0+128),f
  2483  0D7E  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  2484  0D7F  1C03               	skipc
  2485  0D80  03A3               	decf	(___lwdiv@dividend+1)^(0+128),f
  2486  0D81  02A3               	subwf	(___lwdiv@dividend+1)^(0+128),f
  2487  0D82                     l1689:
  2488  0D82  1425               	bsf	___lwdiv@quotient^(0+128),0
  2489  0D83                     l1691:
  2490  0D83  3001               	movlw	1
  2491  0D84                     u1485:
  2492  0D84  1003               	clrc
  2493  0D85  0CA1               	rrf	(___lwdiv@divisor+1)^(0+128),f
  2494  0D86  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  2495  0D87  3EFF               	addlw	-1
  2496  0D88  1D03               	skipz
  2497  0D89  2D84               	goto	u1485
  2498  0D8A                     l1693:
  2499  0D8A  3001               	movlw	1
  2500  0D8B  02A7               	subwf	___lwdiv@counter^(0+128),f
  2501  0D8C  1D03               	btfss	3,2
  2502  0D8D  2D8F               	goto	u1491
  2503  0D8E  2D90               	goto	u1490
  2504  0D8F                     u1491:
  2505  0D8F  2D6B               	goto	l1685
  2506  0D90                     u1490:
  2507  0D90                     l1695:
  2508  0D90  0826               	movf	(___lwdiv@quotient+1)^(0+128),w
  2509  0D91  00A1               	movwf	(?___lwdiv+1)^(0+128)
  2510  0D92  0825               	movf	___lwdiv@quotient^(0+128),w
  2511  0D93  00A0               	movwf	?___lwdiv^(0+128)
  2512  0D94                     l580:
  2513  0D94  0008               	return
  2514  0D95                     __end_of___lwdiv:
  2515                           
  2516                           	psect	text9
  2517  07E6                     __ptext9:	
  2518 ;; *************** function ___bmul *****************
  2519 ;; Defined at:
  2520 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  2521 ;; Parameters:    Size  Location     Type
  2522 ;;  multiplier      1    wreg     unsigned char 
  2523 ;;  multiplicand    1    0[BANK1 ] unsigned char 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  multiplier      1    3[BANK1 ] unsigned char 
  2526 ;;  product         1    2[BANK1 ] unsigned char 
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      unsigned char 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2, status,0
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2536 ;;      Params:         0       0       1       0       0
  2537 ;;      Locals:         0       0       2       0       0
  2538 ;;      Temps:          0       0       1       0       0
  2539 ;;      Totals:         0       0       4       0       0
  2540 ;;Total ram usage:        4 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; Hardware stack levels required when called:    3
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_sprintf
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           
  2551                           ;psect for function ___bmul
  2552  07E6                     ___bmul:
  2553                           
  2554                           ;incstack = 0
  2555                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2556                           ;___bmul@multiplier stored from wreg
  2557  07E6  1683               	bsf	3,5	;RP0=1, select bank1
  2558  07E7  1303               	bcf	3,6	;RP1=0, select bank1
  2559  07E8  00A3               	movwf	___bmul@multiplier^(0+128)
  2560  07E9                     l1659:
  2561  07E9  01A2               	clrf	___bmul@product^(0+128)
  2562  07EA                     l1661:
  2563  07EA  1C23               	btfss	___bmul@multiplier^(0+128),0
  2564  07EB  2FED               	goto	u1411
  2565  07EC  2FEE               	goto	u1410
  2566  07ED                     u1411:
  2567  07ED  2FF2               	goto	l1665
  2568  07EE                     u1410:
  2569  07EE                     l1663:
  2570  07EE  0820               	movf	___bmul@multiplicand^(0+128),w
  2571  07EF  00A1               	movwf	??___bmul^(0+128)
  2572  07F0  0821               	movf	??___bmul^(0+128),w
  2573  07F1  07A2               	addwf	___bmul@product^(0+128),f
  2574  07F2                     l1665:
  2575  07F2  1003               	clrc
  2576  07F3  0DA0               	rlf	___bmul@multiplicand^(0+128),f
  2577  07F4                     l1667:
  2578  07F4  1003               	clrc
  2579  07F5  0CA3               	rrf	___bmul@multiplier^(0+128),f
  2580  07F6  0823               	movf	___bmul@multiplier^(0+128),w
  2581  07F7  1D03               	btfss	3,2
  2582  07F8  2FFA               	goto	u1421
  2583  07F9  2FFB               	goto	u1420
  2584  07FA                     u1421:
  2585  07FA  2FEA               	goto	l1661
  2586  07FB                     u1420:
  2587  07FB                     l1669:
  2588  07FB  0822               	movf	___bmul@product^(0+128),w
  2589  07FC                     l334:
  2590  07FC  0008               	return
  2591  07FD                     __end_of___bmul:
  2592                           
  2593                           	psect	text10
  2594  0CEA                     __ptext10:	
  2595 ;; *************** function _lcd_write_string *****************
  2596 ;; Defined at:
  2597 ;;		line 129 in file "lib_sensor.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  a               1    wreg     PTR unsigned char 
  2600 ;;		 -> STR_3(17), 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  a               1    6[BANK1 ] PTR unsigned char 
  2603 ;;		 -> STR_3(17), 
  2604 ;;  i               2    4[BANK1 ] int 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2614 ;;      Params:         0       0       0       0       0
  2615 ;;      Locals:         0       0       3       0       0
  2616 ;;      Temps:          0       0       0       0       0
  2617 ;;      Totals:         0       0       3       0       0
  2618 ;;Total ram usage:        3 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:    5
  2621 ;; This function calls:
  2622 ;;		_lcd_write_char
  2623 ;; This function is called by:
  2624 ;;		_display
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           
  2629                           ;psect for function _lcd_write_string
  2630  0CEA                     _lcd_write_string:
  2631                           
  2632                           ;incstack = 0
  2633                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2634                           ;lcd_write_string@a stored from wreg
  2635  0CEA  1683               	bsf	3,5	;RP0=1, select bank1
  2636  0CEB  1303               	bcf	3,6	;RP1=0, select bank1
  2637  0CEC  00A6               	movwf	lcd_write_string@a^(0+128)
  2638  0CED                     l1819:
  2639                           
  2640                           ;lib_sensor.c: 129: void lcd_write_string(uint8_t *a);lib_sensor.c: 130: {;lib_sensor.c:
      +                           131:     for(int i=0; a[i] != '\0'; i++)
  2641  0CED  01A4               	clrf	lcd_write_string@i^(0+128)
  2642  0CEE  01A5               	clrf	(lcd_write_string@i+1)^(0+128)
  2643  0CEF  2D05               	goto	l1825
  2644  0CF0                     l1821:
  2645                           
  2646                           ;lib_sensor.c: 132:     {;lib_sensor.c: 133:        lcd_write_char(a[i]);
  2647  0CF0  0824               	movf	lcd_write_string@i^(0+128),w
  2648  0CF1  0726               	addwf	lcd_write_string@a^(0+128),w
  2649  0CF2  0084               	movwf	4
  2650  0CF3  120A  158A  2000  120A  158A  	fcall	stringdir
  2651  0CF8  120A  158A  247F  120A  158A  	fcall	_lcd_write_char
  2652  0CFD                     l1823:
  2653                           
  2654                           ;lib_sensor.c: 134:     }
  2655  0CFD  3001               	movlw	1
  2656  0CFE  1683               	bsf	3,5	;RP0=1, select bank1
  2657  0CFF  1303               	bcf	3,6	;RP1=0, select bank1
  2658  0D00  07A4               	addwf	lcd_write_string@i^(0+128),f
  2659  0D01  1803               	skipnc
  2660  0D02  0AA5               	incf	(lcd_write_string@i+1)^(0+128),f
  2661  0D03  3000               	movlw	0
  2662  0D04  07A5               	addwf	(lcd_write_string@i+1)^(0+128),f
  2663  0D05                     l1825:
  2664  0D05  0824               	movf	lcd_write_string@i^(0+128),w
  2665  0D06  0726               	addwf	lcd_write_string@a^(0+128),w
  2666  0D07  0084               	movwf	4
  2667  0D08  120A  158A  2000  120A  158A  	fcall	stringdir
  2668  0D0D  3A00               	xorlw	0
  2669  0D0E  1D03               	skipz
  2670  0D0F  2D11               	goto	u1711
  2671  0D10  2D12               	goto	u1710
  2672  0D11                     u1711:
  2673  0D11  2CF0               	goto	l1821
  2674  0D12                     u1710:
  2675  0D12                     l174:
  2676  0D12  0008               	return
  2677  0D13                     __end_of_lcd_write_string:
  2678                           
  2679                           	psect	text11
  2680  0C7F                     __ptext11:	
  2681 ;; *************** function _lcd_write_char *****************
  2682 ;; Defined at:
  2683 ;;		line 119 in file "lib_sensor.c"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;  data            1    wreg     unsigned char 
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;  data            1    3[BANK1 ] unsigned char 
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  1    wreg      void 
  2690 ;; Registers used:
  2691 ;;		wreg, status,2, status,0, pclath, cstack
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2697 ;;      Params:         0       0       0       0       0
  2698 ;;      Locals:         0       0       1       0       0
  2699 ;;      Temps:          0       0       2       0       0
  2700 ;;      Totals:         0       0       3       0       0
  2701 ;;Total ram usage:        3 bytes
  2702 ;; Hardware stack levels used:    1
  2703 ;; Hardware stack levels required when called:    4
  2704 ;; This function calls:
  2705 ;;		_lcd_port
  2706 ;; This function is called by:
  2707 ;;		_display
  2708 ;;		_lcd_write_string
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           
  2713                           ;psect for function _lcd_write_char
  2714  0C7F                     _lcd_write_char:
  2715                           
  2716                           ;incstack = 0
  2717                           ; Regs used in _lcd_write_char: [wreg+status,2+status,0+pclath+cstack]
  2718                           ;lcd_write_char@data stored from wreg
  2719  0C7F  1683               	bsf	3,5	;RP0=1, select bank1
  2720  0C80  1303               	bcf	3,6	;RP1=0, select bank1
  2721  0C81  00A3               	movwf	lcd_write_char@data^(0+128)
  2722  0C82                     l1627:
  2723                           
  2724                           ;lib_sensor.c: 119: void lcd_write_char(uint8_t data);lib_sensor.c: 120: {;lib_sensor.c:
      +                           121:     PORTEbits.RE0 = 1;
  2725  0C82  1283               	bcf	3,5	;RP0=0, select bank0
  2726  0C83  1303               	bcf	3,6	;RP1=0, select bank0
  2727  0C84  1409               	bsf	9,0	;volatile
  2728  0C85                     l1629:
  2729                           
  2730                           ;lib_sensor.c: 122:     lcd_port(data);
  2731  0C85  1683               	bsf	3,5	;RP0=1, select bank1
  2732  0C86  1303               	bcf	3,6	;RP1=0, select bank1
  2733  0C87  0823               	movf	lcd_write_char@data^(0+128),w
  2734  0C88  120A  158A  23F0  120A  158A  	fcall	_lcd_port
  2735  0C8D                     l1631:
  2736                           
  2737                           ;lib_sensor.c: 124:     PORTEbits.RE2 = 1;
  2738  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  2739  0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  2740  0C8F  1509               	bsf	9,2	;volatile
  2741  0C90                     l1633:
  2742                           
  2743                           ;lib_sensor.c: 125:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2744  0C90  3006               	movlw	6
  2745  0C91  1683               	bsf	3,5	;RP0=1, select bank1
  2746  0C92  1303               	bcf	3,6	;RP1=0, select bank1
  2747  0C93  00A2               	movwf	(??_lcd_write_char^(0+128)+1)
  2748  0C94  302F               	movlw	47
  2749  0C95  00A1               	movwf	??_lcd_write_char^(0+128)
  2750  0C96                     u2807:
  2751  0C96  0BA1               	decfsz	??_lcd_write_char^(0+128),f
  2752  0C97  2C96               	goto	u2807
  2753  0C98  0BA2               	decfsz	(??_lcd_write_char^(0+128)+1),f
  2754  0C99  2C96               	goto	u2807
  2755  0C9A  2C9B               	nop2
  2756  0C9B                     l1635:
  2757                           
  2758                           ;lib_sensor.c: 126:     PORTEbits.RE2 = 0;
  2759  0C9B  1283               	bcf	3,5	;RP0=0, select bank0
  2760  0C9C  1303               	bcf	3,6	;RP1=0, select bank0
  2761  0C9D  1109               	bcf	9,2	;volatile
  2762  0C9E                     l168:
  2763  0C9E  0008               	return
  2764  0C9F                     __end_of_lcd_write_char:
  2765                           
  2766                           	psect	text12
  2767  0C42                     __ptext12:	
  2768 ;; *************** function _lcd_move_cursor *****************
  2769 ;; Defined at:
  2770 ;;		line 107 in file "lib_sensor.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  row             1    wreg     unsigned char 
  2773 ;;  col             1    4[BANK1 ] unsigned char 
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;  row             1    5[BANK1 ] unsigned char 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0, pclath, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2785 ;;      Params:         0       0       1       0       0
  2786 ;;      Locals:         0       0       1       0       0
  2787 ;;      Temps:          0       0       0       0       0
  2788 ;;      Totals:         0       0       2       0       0
  2789 ;;Total ram usage:        2 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:    5
  2792 ;; This function calls:
  2793 ;;		_lcd_cmd
  2794 ;; This function is called by:
  2795 ;;		_display
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           
  2800                           ;psect for function _lcd_move_cursor
  2801  0C42                     _lcd_move_cursor:
  2802                           
  2803                           ;incstack = 0
  2804                           ; Regs used in _lcd_move_cursor: [wreg+status,2+status,0+pclath+cstack]
  2805                           ;lcd_move_cursor@row stored from wreg
  2806  0C42  1683               	bsf	3,5	;RP0=1, select bank1
  2807  0C43  1303               	bcf	3,6	;RP1=0, select bank1
  2808  0C44  00A5               	movwf	lcd_move_cursor@row^(0+128)
  2809  0C45                     l1811:
  2810                           
  2811                           ;lib_sensor.c: 107: void lcd_move_cursor(uint8_t row, uint8_t col);lib_sensor.c: 108: {;
      +                          lib_sensor.c: 109:     if(row == 0)
  2812  0C45  0825               	movf	lcd_move_cursor@row^(0+128),w
  2813  0C46  1D03               	btfss	3,2
  2814  0C47  2C49               	goto	u1691
  2815  0C48  2C4A               	goto	u1690
  2816  0C49                     u1691:
  2817  0C49  2C52               	goto	l1815
  2818  0C4A                     u1690:
  2819  0C4A                     l1813:
  2820                           
  2821                           ;lib_sensor.c: 110:     {;lib_sensor.c: 111:         lcd_cmd(0x80 + col);
  2822  0C4A  0824               	movf	lcd_move_cursor@col^(0+128),w
  2823  0C4B  3E80               	addlw	128
  2824  0C4C  120A  158A  245F  120A  158A  	fcall	_lcd_cmd
  2825                           
  2826                           ;lib_sensor.c: 112:     }
  2827  0C51  2C5E               	goto	l165
  2828  0C52                     l1815:
  2829  0C52  0325               	decf	lcd_move_cursor@row^(0+128),w
  2830  0C53  1D03               	btfss	3,2
  2831  0C54  2C56               	goto	u1701
  2832  0C55  2C57               	goto	u1700
  2833  0C56                     u1701:
  2834  0C56  2C5E               	goto	l165
  2835  0C57                     u1700:
  2836  0C57                     l1817:
  2837                           
  2838                           ;lib_sensor.c: 114:     {;lib_sensor.c: 115:         lcd_cmd(0xC0 + col);
  2839  0C57  0824               	movf	lcd_move_cursor@col^(0+128),w
  2840  0C58  3EC0               	addlw	192
  2841  0C59  120A  158A  245F  120A  158A  	fcall	_lcd_cmd
  2842  0C5E                     l165:
  2843  0C5E  0008               	return
  2844  0C5F                     __end_of_lcd_move_cursor:
  2845                           
  2846                           	psect	text13
  2847  0C5F                     __ptext13:	
  2848 ;; *************** function _lcd_cmd *****************
  2849 ;; Defined at:
  2850 ;;		line 90 in file "lib_sensor.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;  cmd             1    wreg     unsigned char 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  cmd             1    3[BANK1 ] unsigned char 
  2855 ;; Return value:  Size  Location     Type
  2856 ;;                  1    wreg      void 
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, status,0, pclath, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2864 ;;      Params:         0       0       0       0       0
  2865 ;;      Locals:         0       0       1       0       0
  2866 ;;      Temps:          0       0       2       0       0
  2867 ;;      Totals:         0       0       3       0       0
  2868 ;;Total ram usage:        3 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    4
  2871 ;; This function calls:
  2872 ;;		_lcd_port
  2873 ;; This function is called by:
  2874 ;;		_lcd_init
  2875 ;;		_lcd_move_cursor
  2876 ;;		_setup
  2877 ;;		_lcd_clear
  2878 ;;		_lcd_shift_right
  2879 ;;		_lcd_shift_left
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           
  2884                           ;psect for function _lcd_cmd
  2885  0C5F                     _lcd_cmd:
  2886                           
  2887                           ;incstack = 0
  2888                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2889                           ;lcd_cmd@cmd stored from wreg
  2890  0C5F  1683               	bsf	3,5	;RP0=1, select bank1
  2891  0C60  1303               	bcf	3,6	;RP1=0, select bank1
  2892  0C61  00A3               	movwf	lcd_cmd@cmd^(0+128)
  2893  0C62                     l1637:
  2894                           
  2895                           ;lib_sensor.c: 90: void lcd_cmd(uint8_t cmd);lib_sensor.c: 91: {;lib_sensor.c: 92:     P
      +                          ORTEbits.RE0 = 0;
  2896  0C62  1283               	bcf	3,5	;RP0=0, select bank0
  2897  0C63  1303               	bcf	3,6	;RP1=0, select bank0
  2898  0C64  1009               	bcf	9,0	;volatile
  2899  0C65                     l1639:
  2900                           
  2901                           ;lib_sensor.c: 93:     lcd_port(cmd);
  2902  0C65  1683               	bsf	3,5	;RP0=1, select bank1
  2903  0C66  1303               	bcf	3,6	;RP1=0, select bank1
  2904  0C67  0823               	movf	lcd_cmd@cmd^(0+128),w
  2905  0C68  120A  158A  23F0  120A  158A  	fcall	_lcd_port
  2906  0C6D                     l1641:
  2907                           
  2908                           ;lib_sensor.c: 95:     PORTEbits.RE2 = 1;
  2909  0C6D  1283               	bcf	3,5	;RP0=0, select bank0
  2910  0C6E  1303               	bcf	3,6	;RP1=0, select bank0
  2911  0C6F  1509               	bsf	9,2	;volatile
  2912  0C70                     l1643:
  2913                           
  2914                           ;lib_sensor.c: 96:     _delay((unsigned long)((4)*(4000000/4000.0)));
  2915  0C70  3006               	movlw	6
  2916  0C71  1683               	bsf	3,5	;RP0=1, select bank1
  2917  0C72  1303               	bcf	3,6	;RP1=0, select bank1
  2918  0C73  00A2               	movwf	(??_lcd_cmd^(0+128)+1)
  2919  0C74  302F               	movlw	47
  2920  0C75  00A1               	movwf	??_lcd_cmd^(0+128)
  2921  0C76                     u2817:
  2922  0C76  0BA1               	decfsz	??_lcd_cmd^(0+128),f
  2923  0C77  2C76               	goto	u2817
  2924  0C78  0BA2               	decfsz	(??_lcd_cmd^(0+128)+1),f
  2925  0C79  2C76               	goto	u2817
  2926  0C7A  2C7B               	nop2
  2927  0C7B                     l1645:
  2928                           
  2929                           ;lib_sensor.c: 97:     PORTEbits.RE2 = 0;
  2930  0C7B  1283               	bcf	3,5	;RP0=0, select bank0
  2931  0C7C  1303               	bcf	3,6	;RP1=0, select bank0
  2932  0C7D  1109               	bcf	9,2	;volatile
  2933  0C7E                     l156:
  2934  0C7E  0008               	return
  2935  0C7F                     __end_of_lcd_cmd:
  2936                           
  2937                           	psect	text14
  2938  0BF0                     __ptext14:	
  2939 ;; *************** function _lcd_port *****************
  2940 ;; Defined at:
  2941 ;;		line 41 in file "lib_sensor.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  a               1    wreg     unsigned char 
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;  a               1    0[BANK1 ] unsigned char 
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  1    wreg      void 
  2948 ;; Registers used:
  2949 ;;		wreg
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2955 ;;      Params:         0       0       0       0       0
  2956 ;;      Locals:         0       0       1       0       0
  2957 ;;      Temps:          0       0       0       0       0
  2958 ;;      Totals:         0       0       1       0       0
  2959 ;;Total ram usage:        1 bytes
  2960 ;; Hardware stack levels used:    1
  2961 ;; Hardware stack levels required when called:    3
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_lcd_init
  2966 ;;		_lcd_cmd
  2967 ;;		_lcd_write_char
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           
  2972                           ;psect for function _lcd_port
  2973  0BF0                     _lcd_port:
  2974                           
  2975                           ;incstack = 0
  2976                           ; Regs used in _lcd_port: [wreg]
  2977                           ;lcd_port@a stored from wreg
  2978  0BF0  1683               	bsf	3,5	;RP0=1, select bank1
  2979  0BF1  1303               	bcf	3,6	;RP1=0, select bank1
  2980  0BF2  00A0               	movwf	lcd_port@a^(0+128)
  2981  0BF3                     l1625:
  2982                           
  2983                           ;lib_sensor.c: 41: void lcd_port(uint8_t a);lib_sensor.c: 42: {;lib_sensor.c: 44:     PO
      +                          RTD = a;
  2984  0BF3  0820               	movf	lcd_port@a^(0+128),w
  2985  0BF4  1283               	bcf	3,5	;RP0=0, select bank0
  2986  0BF5  1303               	bcf	3,6	;RP1=0, select bank0
  2987  0BF6  0088               	movwf	8	;volatile
  2988  0BF7                     l153:
  2989  0BF7  0008               	return
  2990  0BF8                     __end_of_lcd_port:
  2991                           
  2992                           	psect	text15
  2993  0C2B                     __ptext15:	
  2994 ;; *************** function _ADC_2 *****************
  2995 ;; Defined at:
  2996 ;;		line 121 in file "sensor_temp.c"
  2997 ;; Parameters:    Size  Location     Type
  2998 ;;		None
  2999 ;; Auto vars:     Size  Location     Type
  3000 ;;		None
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      void 
  3003 ;; Registers used:
  3004 ;;		wreg, status,2, status,0, pclath, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3010 ;;      Params:         0       0       0       0       0
  3011 ;;      Locals:         0       0       0       0       0
  3012 ;;      Temps:          0       0       1       0       0
  3013 ;;      Totals:         0       0       1       0       0
  3014 ;;Total ram usage:        1 bytes
  3015 ;; Hardware stack levels used:    1
  3016 ;; Hardware stack levels required when called:    4
  3017 ;; This function calls:
  3018 ;;		_canal_10
  3019 ;; This function is called by:
  3020 ;;		_main
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           
  3025                           ;psect for function _ADC_2
  3026  0C2B                     _ADC_2:
  3027  0C2B                     l1931:	
  3028                           ;incstack = 0
  3029                           ; Regs used in _ADC_2: [wreg+status,2+status,0+pclath+cstack]
  3030                           
  3031                           
  3032                           ;sensor_temp.c: 122:     adc_data2 = ADRESH;
  3033  0C2B  1283               	bcf	3,5	;RP0=0, select bank0
  3034  0C2C  1303               	bcf	3,6	;RP1=0, select bank0
  3035  0C2D  081E               	movf	30,w	;volatile
  3036  0C2E  1683               	bsf	3,5	;RP0=1, select bank1
  3037  0C2F  1303               	bcf	3,6	;RP1=0, select bank1
  3038  0C30  00A0               	movwf	??_ADC_2^(0+128)
  3039  0C31  0820               	movf	??_ADC_2^(0+128),w
  3040  0C32  00C7               	movwf	_adc_data2^(0+128)
  3041  0C33                     l1933:
  3042                           
  3043                           ;sensor_temp.c: 123:     ban_an1 = 0;
  3044  0C33  01C4               	clrf	_ban_an1^(0+128)
  3045  0C34  01C5               	clrf	(_ban_an1+1)^(0+128)
  3046  0C35                     l1935:
  3047                           
  3048                           ;sensor_temp.c: 124:     ban_an2 = 1;
  3049  0C35  3001               	movlw	1
  3050  0C36  00C2               	movwf	_ban_an2^(0+128)
  3051  0C37  3000               	movlw	0
  3052  0C38  00C3               	movwf	(_ban_an2^(0+128)+1)
  3053  0C39                     l1937:
  3054                           
  3055                           ;sensor_temp.c: 125:     canal_10();
  3056  0C39  120A  158A  23E9  120A  158A  	fcall	_canal_10
  3057  0C3E                     l1939:
  3058                           
  3059                           ;sensor_temp.c: 126:     ADCON0bits.GO_DONE = 1;
  3060  0C3E  1283               	bcf	3,5	;RP0=0, select bank0
  3061  0C3F  1303               	bcf	3,6	;RP1=0, select bank0
  3062  0C40  149F               	bsf	31,1	;volatile
  3063  0C41                     l77:
  3064  0C41  0008               	return
  3065  0C42                     __end_of_ADC_2:
  3066                           
  3067                           	psect	text16
  3068  0BE9                     __ptext16:	
  3069 ;; *************** function _canal_10 *****************
  3070 ;; Defined at:
  3071 ;;		line 94 in file "sensor_temp.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		None
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3085 ;;      Params:         0       0       0       0       0
  3086 ;;      Locals:         0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0
  3088 ;;      Totals:         0       0       0       0       0
  3089 ;;Total ram usage:        0 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:    3
  3092 ;; This function calls:
  3093 ;;		Nothing
  3094 ;; This function is called by:
  3095 ;;		_ADC_2
  3096 ;;		_setup
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           
  3101                           ;psect for function _canal_10
  3102  0BE9                     _canal_10:
  3103  0BE9                     l1827:	
  3104                           ;incstack = 0
  3105                           ; Regs used in _canal_10: []
  3106                           
  3107                           
  3108                           ;sensor_temp.c: 97:     ADCON0bits.CHS3 = 1;
  3109  0BE9  1283               	bcf	3,5	;RP0=0, select bank0
  3110  0BEA  1303               	bcf	3,6	;RP1=0, select bank0
  3111  0BEB  169F               	bsf	31,5	;volatile
  3112                           
  3113                           ;sensor_temp.c: 98:     ADCON0bits.CHS2 = 1;
  3114  0BEC  161F               	bsf	31,4	;volatile
  3115                           
  3116                           ;sensor_temp.c: 99:     ADCON0bits.CHS1 = 0;
  3117  0BED  119F               	bcf	31,3	;volatile
  3118                           
  3119                           ;sensor_temp.c: 100:     ADCON0bits.CHS0 = 0;
  3120  0BEE  111F               	bcf	31,2	;volatile
  3121  0BEF                     l68:
  3122  0BEF  0008               	return
  3123  0BF0                     __end_of_canal_10:
  3124                           
  3125                           	psect	text17
  3126  0C14                     __ptext17:	
  3127 ;; *************** function _ADC_1 *****************
  3128 ;; Defined at:
  3129 ;;		line 112 in file "sensor_temp.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      void 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0, pclath, cstack
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3143 ;;      Params:         0       0       0       0       0
  3144 ;;      Locals:         0       0       0       0       0
  3145 ;;      Temps:          0       0       1       0       0
  3146 ;;      Totals:         0       0       1       0       0
  3147 ;;Total ram usage:        1 bytes
  3148 ;; Hardware stack levels used:    1
  3149 ;; Hardware stack levels required when called:    4
  3150 ;; This function calls:
  3151 ;;		_canal_12
  3152 ;; This function is called by:
  3153 ;;		_main
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           
  3158                           ;psect for function _ADC_1
  3159  0C14                     _ADC_1:
  3160  0C14                     l1923:	
  3161                           ;incstack = 0
  3162                           ; Regs used in _ADC_1: [wreg+status,2+status,0+pclath+cstack]
  3163                           
  3164                           
  3165                           ;sensor_temp.c: 113:     adc_data1 = ADRESH;
  3166  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  3167  0C15  1303               	bcf	3,6	;RP1=0, select bank0
  3168  0C16  081E               	movf	30,w	;volatile
  3169  0C17  1683               	bsf	3,5	;RP0=1, select bank1
  3170  0C18  1303               	bcf	3,6	;RP1=0, select bank1
  3171  0C19  00A0               	movwf	??_ADC_1^(0+128)
  3172  0C1A  0820               	movf	??_ADC_1^(0+128),w
  3173  0C1B  00C8               	movwf	_adc_data1^(0+128)
  3174                           
  3175                           ;sensor_temp.c: 115:     ban_an1 = 1;
  3176  0C1C  3001               	movlw	1
  3177  0C1D  00C4               	movwf	_ban_an1^(0+128)
  3178  0C1E  3000               	movlw	0
  3179  0C1F  00C5               	movwf	(_ban_an1^(0+128)+1)
  3180  0C20                     l1925:
  3181                           
  3182                           ;sensor_temp.c: 116:     ban_an2 = 0;
  3183  0C20  01C2               	clrf	_ban_an2^(0+128)
  3184  0C21  01C3               	clrf	(_ban_an2+1)^(0+128)
  3185  0C22                     l1927:
  3186                           
  3187                           ;sensor_temp.c: 117:     canal_12();
  3188  0C22  120A  158A  23E2  120A  158A  	fcall	_canal_12
  3189  0C27                     l1929:
  3190                           
  3191                           ;sensor_temp.c: 118:     ADCON0bits.GO_DONE = 1;
  3192  0C27  1283               	bcf	3,5	;RP0=0, select bank0
  3193  0C28  1303               	bcf	3,6	;RP1=0, select bank0
  3194  0C29  149F               	bsf	31,1	;volatile
  3195  0C2A                     l74:
  3196  0C2A  0008               	return
  3197  0C2B                     __end_of_ADC_1:
  3198                           
  3199                           	psect	text18
  3200  0BE2                     __ptext18:	
  3201 ;; *************** function _canal_12 *****************
  3202 ;; Defined at:
  3203 ;;		line 103 in file "sensor_temp.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;		None
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1    wreg      void 
  3210 ;; Registers used:
  3211 ;;		None
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3217 ;;      Params:         0       0       0       0       0
  3218 ;;      Locals:         0       0       0       0       0
  3219 ;;      Temps:          0       0       0       0       0
  3220 ;;      Totals:         0       0       0       0       0
  3221 ;;Total ram usage:        0 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:    3
  3224 ;; This function calls:
  3225 ;;		Nothing
  3226 ;; This function is called by:
  3227 ;;		_ADC_1
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           
  3232                           ;psect for function _canal_12
  3233  0BE2                     _canal_12:
  3234  0BE2                     l1829:	
  3235                           ;incstack = 0
  3236                           ; Regs used in _canal_12: []
  3237                           
  3238                           
  3239                           ;sensor_temp.c: 106:     ADCON0bits.CHS3 = 1;
  3240  0BE2  1283               	bcf	3,5	;RP0=0, select bank0
  3241  0BE3  1303               	bcf	3,6	;RP1=0, select bank0
  3242  0BE4  169F               	bsf	31,5	;volatile
  3243                           
  3244                           ;sensor_temp.c: 107:     ADCON0bits.CHS2 = 0;
  3245  0BE5  121F               	bcf	31,4	;volatile
  3246                           
  3247                           ;sensor_temp.c: 108:     ADCON0bits.CHS1 = 1;
  3248  0BE6  159F               	bsf	31,3	;volatile
  3249                           
  3250                           ;sensor_temp.c: 109:     ADCON0bits.CHS0 = 0;
  3251  0BE7  111F               	bcf	31,2	;volatile
  3252  0BE8                     l71:
  3253  0BE8  0008               	return
  3254  0BE9                     __end_of_canal_12:
  3255                           
  3256                           	psect	text19
  3257  0F5E                     __ptext19:	
  3258 ;; *************** function _isr *****************
  3259 ;; Defined at:
  3260 ;;		line 133 in file "sensor_temp.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;		None
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;		None
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1    wreg      void 
  3267 ;; Registers used:
  3268 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3274 ;;      Params:         0       0       0       0       0
  3275 ;;      Locals:         0       4       0       0       0
  3276 ;;      Temps:          0       7       0       0       0
  3277 ;;      Totals:         0      11       0       0       0
  3278 ;;Total ram usage:       11 bytes
  3279 ;; Hardware stack levels used:    1
  3280 ;; Hardware stack levels required when called:    2
  3281 ;; This function calls:
  3282 ;;		___fldiv
  3283 ;;		___flmul
  3284 ;;		___fltol
  3285 ;;		___xxtofl
  3286 ;; This function is called by:
  3287 ;;		Interrupt level 1
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           
  3292                           ;psect for function _isr
  3293  0F5E                     _isr:
  3294  0F5E                     i1l2379:
  3295                           
  3296                           ;sensor_temp.c: 134:     if (PIR1bits.ADIF) {
  3297  0F5E  1F0C               	btfss	12,6	;volatile
  3298  0F5F  2F61               	goto	u273_21
  3299  0F60  2F62               	goto	u273_20
  3300  0F61                     u273_21:
  3301  0F61  2FF7               	goto	i1l85
  3302  0F62                     u273_20:
  3303  0F62                     i1l2381:
  3304                           
  3305                           ;sensor_temp.c: 135:         PIR1bits.ADIF = 0;
  3306  0F62  130C               	bcf	12,6	;volatile
  3307  0F63                     i1l2383:
  3308                           
  3309                           ;sensor_temp.c: 137:         if (adc_flag) {
  3310  0F63  086B               	movf	_adc_flag,w
  3311  0F64  1903               	btfsc	3,2
  3312  0F65  2F67               	goto	u274_21
  3313  0F66  2F68               	goto	u274_20
  3314  0F67                     u274_21:
  3315  0F67  2FE6               	goto	i1l2391
  3316  0F68                     u274_20:
  3317  0F68                     i1l2385:
  3318                           
  3319                           ;sensor_temp.c: 138:             adc_data1 = ADRESH;
  3320  0F68  081E               	movf	30,w	;volatile
  3321  0F69  00DF               	movwf	??_isr
  3322  0F6A  085F               	movf	??_isr,w
  3323  0F6B  1683               	bsf	3,5	;RP0=1, select bank1
  3324  0F6C  1303               	bcf	3,6	;RP1=0, select bank1
  3325  0F6D  00C8               	movwf	_adc_data1^(0+128)
  3326  0F6E                     i1l2387:
  3327                           
  3328                           ;sensor_temp.c: 139:             prueba1 = ((adc_data1 * 5.0) / 255)*100;
  3329  0F6E  0848               	movf	_adc_data1^(0+128),w
  3330  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  3331  0F70  1303               	bcf	3,6	;RP1=0, select bank0
  3332  0F71  00DF               	movwf	??_isr
  3333  0F72  01E0               	clrf	??_isr+1
  3334  0F73  01E1               	clrf	??_isr+2
  3335  0F74  01E2               	clrf	??_isr+3
  3336  0F75  0862               	movf	??_isr+3,w
  3337  0F76  00F3               	movwf	___xxtofl@val+3
  3338  0F77  0861               	movf	??_isr+2,w
  3339  0F78  00F2               	movwf	___xxtofl@val+2
  3340  0F79  0860               	movf	??_isr+1,w
  3341  0F7A  00F1               	movwf	___xxtofl@val+1
  3342  0F7B  085F               	movf	??_isr,w
  3343  0F7C  00F0               	movwf	___xxtofl@val
  3344  0F7D  3001               	movlw	1
  3345  0F7E  120A  118A  26CB  120A  158A  	fcall	___xxtofl
  3346  0F83  0873               	movf	?___xxtofl+3,w
  3347  0F84  1283               	bcf	3,5	;RP0=0, select bank0
  3348  0F85  1303               	bcf	3,6	;RP1=0, select bank0
  3349  0F86  00A7               	movwf	___flmul@a+3
  3350  0F87  0872               	movf	?___xxtofl+2,w
  3351  0F88  00A6               	movwf	___flmul@a+2
  3352  0F89  0871               	movf	?___xxtofl+1,w
  3353  0F8A  00A5               	movwf	___flmul@a+1
  3354  0F8B  0870               	movf	?___xxtofl,w
  3355  0F8C  00A4               	movwf	___flmul@a
  3356  0F8D  3040               	movlw	64
  3357  0F8E  00A3               	movwf	___flmul@b+3
  3358  0F8F  30A0               	movlw	160
  3359  0F90  00A2               	movwf	___flmul@b+2
  3360  0F91  3000               	movlw	0
  3361  0F92  00A1               	movwf	___flmul@b+1
  3362  0F93  3000               	movlw	0
  3363  0F94  00A0               	movwf	___flmul@b
  3364  0F95  120A  118A  2028  120A  158A  	fcall	___flmul
  3365  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  3366  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  3367  0F9C  0823               	movf	?___flmul+3,w
  3368  0F9D  00C1               	movwf	___fldiv@b+3
  3369  0F9E  0822               	movf	?___flmul+2,w
  3370  0F9F  00C0               	movwf	___fldiv@b+2
  3371  0FA0  0821               	movf	?___flmul+1,w
  3372  0FA1  00BF               	movwf	___fldiv@b+1
  3373  0FA2  0820               	movf	?___flmul,w
  3374  0FA3  00BE               	movwf	___fldiv@b
  3375  0FA4  3043               	movlw	67
  3376  0FA5  00BD               	movwf	___fldiv@a+3
  3377  0FA6  307F               	movlw	127
  3378  0FA7  00BC               	movwf	___fldiv@a+2
  3379  0FA8  3000               	movlw	0
  3380  0FA9  00BB               	movwf	___fldiv@a+1
  3381  0FAA  3000               	movlw	0
  3382  0FAB  00BA               	movwf	___fldiv@a
  3383  0FAC  120A  118A  2389  120A  158A  	fcall	___fldiv
  3384  0FB1  1283               	bcf	3,5	;RP0=0, select bank0
  3385  0FB2  1303               	bcf	3,6	;RP1=0, select bank0
  3386  0FB3  083D               	movf	?___fldiv+3,w
  3387  0FB4  00E9               	movwf	_isr$1085+3
  3388  0FB5  083C               	movf	?___fldiv+2,w
  3389  0FB6  00E8               	movwf	_isr$1085+2
  3390  0FB7  083B               	movf	?___fldiv+1,w
  3391  0FB8  00E7               	movwf	_isr$1085+1
  3392  0FB9  083A               	movf	?___fldiv,w
  3393  0FBA  00E6               	movwf	_isr$1085
  3394  0FBB                     i1l2389:
  3395                           
  3396                           ;sensor_temp.c: 139:             prueba1 = ((adc_data1 * 5.0) / 255)*100;
  3397  0FBB  0869               	movf	_isr$1085+3,w
  3398  0FBC  00A7               	movwf	___flmul@a+3
  3399  0FBD  0868               	movf	_isr$1085+2,w
  3400  0FBE  00A6               	movwf	___flmul@a+2
  3401  0FBF  0867               	movf	_isr$1085+1,w
  3402  0FC0  00A5               	movwf	___flmul@a+1
  3403  0FC1  0866               	movf	_isr$1085,w
  3404  0FC2  00A4               	movwf	___flmul@a
  3405  0FC3  3042               	movlw	66
  3406  0FC4  00A3               	movwf	___flmul@b+3
  3407  0FC5  30C8               	movlw	200
  3408  0FC6  00A2               	movwf	___flmul@b+2
  3409  0FC7  3000               	movlw	0
  3410  0FC8  00A1               	movwf	___flmul@b+1
  3411  0FC9  3000               	movlw	0
  3412  0FCA  00A0               	movwf	___flmul@b
  3413  0FCB  120A  118A  2028  120A  158A  	fcall	___flmul
  3414  0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  3415  0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  3416  0FD2  0823               	movf	?___flmul+3,w
  3417  0FD3  00D7               	movwf	___fltol@f1+3
  3418  0FD4  0822               	movf	?___flmul+2,w
  3419  0FD5  00D6               	movwf	___fltol@f1+2
  3420  0FD6  0821               	movf	?___flmul+1,w
  3421  0FD7  00D5               	movwf	___fltol@f1+1
  3422  0FD8  0820               	movf	?___flmul,w
  3423  0FD9  00D4               	movwf	___fltol@f1
  3424  0FDA  120A  158A  2642  120A  158A  	fcall	___fltol
  3425  0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  3426  0FE0  1303               	bcf	3,6	;RP1=0, select bank0
  3427  0FE1  0854               	movf	?___fltol,w
  3428  0FE2  00DF               	movwf	??_isr
  3429  0FE3  085F               	movf	??_isr,w
  3430  0FE4  00EF               	movwf	_prueba1
  3431                           
  3432                           ;sensor_temp.c: 141:         } else {
  3433  0FE5  2FEC               	goto	i1l2393
  3434  0FE6                     i1l2391:
  3435                           
  3436                           ;sensor_temp.c: 142:             adc_data2 = ADRESH;
  3437  0FE6  081E               	movf	30,w	;volatile
  3438  0FE7  00DF               	movwf	??_isr
  3439  0FE8  085F               	movf	??_isr,w
  3440  0FE9  1683               	bsf	3,5	;RP0=1, select bank1
  3441  0FEA  1303               	bcf	3,6	;RP1=0, select bank1
  3442  0FEB  00C7               	movwf	_adc_data2^(0+128)
  3443  0FEC                     i1l2393:
  3444                           
  3445                           ;sensor_temp.c: 145:         adc_flag = !adc_flag;
  3446  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  3447  0FED  086B               	movf	_adc_flag,w
  3448  0FEE  1903               	btfsc	3,2
  3449  0FEF  2FF1               	goto	u275_21
  3450  0FF0  2FF3               	goto	u275_20
  3451  0FF1                     u275_21:
  3452  0FF1  3001               	movlw	1
  3453  0FF2  2FF4               	goto	u276_20
  3454  0FF3                     u275_20:
  3455  0FF3  3000               	movlw	0
  3456  0FF4                     u276_20:
  3457  0FF4  00DF               	movwf	??_isr
  3458  0FF5  085F               	movf	??_isr,w
  3459  0FF6  00EB               	movwf	_adc_flag
  3460  0FF7                     i1l85:
  3461  0FF7  0865               	movf	??_isr+6,w
  3462  0FF8  00FF               	movwf	btemp+1
  3463  0FF9  0864               	movf	??_isr+5,w
  3464  0FFA  008A               	movwf	10
  3465  0FFB  0E63               	swapf	??_isr+4,w
  3466  0FFC  0083               	movwf	3
  3467  0FFD  0EFE               	swapf	btemp,f
  3468  0FFE  0E7E               	swapf	btemp,w
  3469  0FFF  0009               	retfie
  3470  1000                     __end_of_isr:
  3471                           
  3472                           	psect	intentry
  3473  0004                     __pintentry:	
  3474                           ;incstack = 0
  3475                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3476                           
  3477  0004                     interrupt_function:
  3478  007E                     saved_w	set	btemp
  3479  0004  00FE               	movwf	btemp
  3480  0005  0E03               	swapf	3,w
  3481  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3482  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3483  0008  00E3               	movwf	??_isr+4
  3484  0009  080A               	movf	10,w
  3485  000A  00E4               	movwf	??_isr+5
  3486  000B  087F               	movf	btemp+1,w
  3487  000C  00E5               	movwf	??_isr+6
  3488  000D  120A  158A  2F5E   	ljmp	_isr
  3489                           
  3490                           	psect	text20
  3491  06CB                     __ptext20:	
  3492 ;; *************** function ___xxtofl *****************
  3493 ;; Defined at:
  3494 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  sign            1    wreg     unsigned char 
  3497 ;;  val             4    0[COMMON] long 
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;  sign            1    8[COMMON] unsigned char 
  3500 ;;  arg             4   10[COMMON] unsigned long 
  3501 ;;  exp             1    9[COMMON] unsigned char 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  4    0[COMMON] unsigned char 
  3504 ;; Registers used:
  3505 ;;		wreg, status,2, status,0
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3511 ;;      Params:         4       0       0       0       0
  3512 ;;      Locals:         6       0       0       0       0
  3513 ;;      Temps:          4       0       0       0       0
  3514 ;;      Totals:        14       0       0       0       0
  3515 ;;Total ram usage:       14 bytes
  3516 ;; Hardware stack levels used:    1
  3517 ;; This function calls:
  3518 ;;		Nothing
  3519 ;; This function is called by:
  3520 ;;		_isr
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           
  3525                           ;psect for function ___xxtofl
  3526  06CB                     ___xxtofl:
  3527                           
  3528                           ;incstack = 0
  3529                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3530                           ;___xxtofl@sign stored from wreg
  3531  06CB  00F8               	movwf	___xxtofl@sign
  3532  06CC                     i1l2313:
  3533  06CC  0878               	movf	___xxtofl@sign,w
  3534  06CD  1903               	btfsc	3,2
  3535  06CE  2ED0               	goto	u255_21
  3536  06CF  2ED1               	goto	u255_20
  3537  06D0                     u255_21:
  3538  06D0  2EE5               	goto	i1l2319
  3539  06D1                     u255_20:
  3540  06D1                     i1l2315:
  3541  06D1  1FF3               	btfss	___xxtofl@val+3,7
  3542  06D2  2ED4               	goto	u256_21
  3543  06D3  2ED5               	goto	u256_20
  3544  06D4                     u256_21:
  3545  06D4  2EE5               	goto	i1l2319
  3546  06D5                     u256_20:
  3547  06D5                     i1l2317:
  3548  06D5  0970               	comf	___xxtofl@val,w
  3549  06D6  00FA               	movwf	___xxtofl@arg
  3550  06D7  0971               	comf	___xxtofl@val+1,w
  3551  06D8  00FB               	movwf	___xxtofl@arg+1
  3552  06D9  0972               	comf	___xxtofl@val+2,w
  3553  06DA  00FC               	movwf	___xxtofl@arg+2
  3554  06DB  0973               	comf	___xxtofl@val+3,w
  3555  06DC  00FD               	movwf	___xxtofl@arg+3
  3556  06DD  0AFA               	incf	___xxtofl@arg,f
  3557  06DE  1903               	skipnz
  3558  06DF  0AFB               	incf	___xxtofl@arg+1,f
  3559  06E0  1903               	skipnz
  3560  06E1  0AFC               	incf	___xxtofl@arg+2,f
  3561  06E2  1903               	skipnz
  3562  06E3  0AFD               	incf	___xxtofl@arg+3,f
  3563  06E4  2EED               	goto	i1l741
  3564  06E5                     i1l2319:
  3565  06E5  0873               	movf	___xxtofl@val+3,w
  3566  06E6  00FD               	movwf	___xxtofl@arg+3
  3567  06E7  0872               	movf	___xxtofl@val+2,w
  3568  06E8  00FC               	movwf	___xxtofl@arg+2
  3569  06E9  0871               	movf	___xxtofl@val+1,w
  3570  06EA  00FB               	movwf	___xxtofl@arg+1
  3571  06EB  0870               	movf	___xxtofl@val,w
  3572  06EC  00FA               	movwf	___xxtofl@arg
  3573  06ED                     i1l741:
  3574  06ED  0873               	movf	___xxtofl@val+3,w
  3575  06EE  0472               	iorwf	___xxtofl@val+2,w
  3576  06EF  0471               	iorwf	___xxtofl@val+1,w
  3577  06F0  0470               	iorwf	___xxtofl@val,w
  3578  06F1  1D03               	skipz
  3579  06F2  2EF4               	goto	u257_21
  3580  06F3  2EF5               	goto	u257_20
  3581  06F4                     u257_21:
  3582  06F4  2EFE               	goto	i1l2325
  3583  06F5                     u257_20:
  3584  06F5                     i1l2321:
  3585  06F5  3000               	movlw	0
  3586  06F6  00F3               	movwf	?___xxtofl+3
  3587  06F7  3000               	movlw	0
  3588  06F8  00F2               	movwf	?___xxtofl+2
  3589  06F9  3000               	movlw	0
  3590  06FA  00F1               	movwf	?___xxtofl+1
  3591  06FB  3000               	movlw	0
  3592  06FC  00F0               	movwf	?___xxtofl
  3593  06FD  2F84               	goto	i1l743
  3594  06FE                     i1l2325:
  3595  06FE  3096               	movlw	150
  3596  06FF  00F4               	movwf	??___xxtofl
  3597  0700  0874               	movf	??___xxtofl,w
  3598  0701  00F9               	movwf	___xxtofl@exp
  3599  0702  2F10               	goto	i1l2329
  3600  0703                     i1l2327:
  3601  0703  3001               	movlw	1
  3602  0704  00F4               	movwf	??___xxtofl
  3603  0705  0874               	movf	??___xxtofl,w
  3604  0706  07F9               	addwf	___xxtofl@exp,f
  3605  0707  3001               	movlw	1
  3606  0708                     u258_25:
  3607  0708  1003               	clrc
  3608  0709  0CFD               	rrf	___xxtofl@arg+3,f
  3609  070A  0CFC               	rrf	___xxtofl@arg+2,f
  3610  070B  0CFB               	rrf	___xxtofl@arg+1,f
  3611  070C  0CFA               	rrf	___xxtofl@arg,f
  3612  070D  3EFF               	addlw	-1
  3613  070E  1D03               	skipz
  3614  070F  2F08               	goto	u258_25
  3615  0710                     i1l2329:
  3616  0710  30FE               	movlw	254
  3617  0711  057D               	andwf	___xxtofl@arg+3,w
  3618  0712  1D03               	btfss	3,2
  3619  0713  2F15               	goto	u259_21
  3620  0714  2F16               	goto	u259_20
  3621  0715                     u259_21:
  3622  0715  2F03               	goto	i1l2327
  3623  0716                     u259_20:
  3624  0716  2F32               	goto	i1l747
  3625  0717                     i1l2331:
  3626  0717  3001               	movlw	1
  3627  0718  00F4               	movwf	??___xxtofl
  3628  0719  0874               	movf	??___xxtofl,w
  3629  071A  07F9               	addwf	___xxtofl@exp,f
  3630  071B                     i1l2333:
  3631  071B  3001               	movlw	1
  3632  071C  07FA               	addwf	___xxtofl@arg,f
  3633  071D  3000               	movlw	0
  3634  071E  1803               	skipnc
  3635  071F  3001               	movlw	1
  3636  0720  07FB               	addwf	___xxtofl@arg+1,f
  3637  0721  3000               	movlw	0
  3638  0722  1803               	skipnc
  3639  0723  3001               	movlw	1
  3640  0724  07FC               	addwf	___xxtofl@arg+2,f
  3641  0725  3000               	movlw	0
  3642  0726  1803               	skipnc
  3643  0727  3001               	movlw	1
  3644  0728  07FD               	addwf	___xxtofl@arg+3,f
  3645  0729                     i1l2335:
  3646  0729  3001               	movlw	1
  3647  072A                     u260_25:
  3648  072A  1003               	clrc
  3649  072B  0CFD               	rrf	___xxtofl@arg+3,f
  3650  072C  0CFC               	rrf	___xxtofl@arg+2,f
  3651  072D  0CFB               	rrf	___xxtofl@arg+1,f
  3652  072E  0CFA               	rrf	___xxtofl@arg,f
  3653  072F  3EFF               	addlw	-1
  3654  0730  1D03               	skipz
  3655  0731  2F2A               	goto	u260_25
  3656  0732                     i1l747:
  3657  0732  30FF               	movlw	255
  3658  0733  057D               	andwf	___xxtofl@arg+3,w
  3659  0734  1D03               	btfss	3,2
  3660  0735  2F37               	goto	u261_21
  3661  0736  2F38               	goto	u261_20
  3662  0737                     u261_21:
  3663  0737  2F17               	goto	i1l2331
  3664  0738                     u261_20:
  3665  0738  2F44               	goto	i1l2339
  3666  0739                     i1l2337:
  3667  0739  3001               	movlw	1
  3668  073A  02F9               	subwf	___xxtofl@exp,f
  3669  073B  3001               	movlw	1
  3670  073C  00F4               	movwf	??___xxtofl
  3671  073D                     u262_25:
  3672  073D  1003               	clrc
  3673  073E  0DFA               	rlf	___xxtofl@arg,f
  3674  073F  0DFB               	rlf	___xxtofl@arg+1,f
  3675  0740  0DFC               	rlf	___xxtofl@arg+2,f
  3676  0741  0DFD               	rlf	___xxtofl@arg+3,f
  3677  0742  0BF4               	decfsz	??___xxtofl,f
  3678  0743  2F3D               	goto	u262_25
  3679  0744                     i1l2339:
  3680  0744  1BFC               	btfsc	___xxtofl@arg+2,7
  3681  0745  2F47               	goto	u263_21
  3682  0746  2F48               	goto	u263_20
  3683  0747                     u263_21:
  3684  0747  2F4E               	goto	i1l754
  3685  0748                     u263_20:
  3686  0748                     i1l2341:
  3687  0748  3002               	movlw	2
  3688  0749  0279               	subwf	___xxtofl@exp,w
  3689  074A  1803               	skipnc
  3690  074B  2F4D               	goto	u264_21
  3691  074C  2F4E               	goto	u264_20
  3692  074D                     u264_21:
  3693  074D  2F39               	goto	i1l2337
  3694  074E                     u264_20:
  3695  074E                     i1l754:
  3696  074E  1879               	btfsc	___xxtofl@exp,0
  3697  074F  2F51               	goto	u265_21
  3698  0750  2F52               	goto	u265_20
  3699  0751                     u265_21:
  3700  0751  2F5A               	goto	i1l755
  3701  0752                     u265_20:
  3702  0752                     i1l2343:
  3703  0752  30FF               	movlw	255
  3704  0753  05FA               	andwf	___xxtofl@arg,f
  3705  0754  30FF               	movlw	255
  3706  0755  05FB               	andwf	___xxtofl@arg+1,f
  3707  0756  307F               	movlw	127
  3708  0757  05FC               	andwf	___xxtofl@arg+2,f
  3709  0758  30FF               	movlw	255
  3710  0759  05FD               	andwf	___xxtofl@arg+3,f
  3711  075A                     i1l755:
  3712  075A  1003               	clrc
  3713  075B  0CF9               	rrf	___xxtofl@exp,f
  3714  075C                     i1l2345:
  3715  075C  0879               	movf	___xxtofl@exp,w
  3716  075D  00F4               	movwf	??___xxtofl
  3717  075E  01F5               	clrf	??___xxtofl+1
  3718  075F  01F6               	clrf	??___xxtofl+2
  3719  0760  01F7               	clrf	??___xxtofl+3
  3720  0761  3018               	movlw	24
  3721  0762                     u266_25:
  3722  0762  1003               	clrc
  3723  0763  0DF4               	rlf	??___xxtofl,f
  3724  0764  0DF5               	rlf	??___xxtofl+1,f
  3725  0765  0DF6               	rlf	??___xxtofl+2,f
  3726  0766  0DF7               	rlf	??___xxtofl+3,f
  3727  0767                     u266_20:
  3728  0767  3EFF               	addlw	-1
  3729  0768  1D03               	skipz
  3730  0769  2F62               	goto	u266_25
  3731  076A  0874               	movf	??___xxtofl,w
  3732  076B  04FA               	iorwf	___xxtofl@arg,f
  3733  076C  0875               	movf	??___xxtofl+1,w
  3734  076D  04FB               	iorwf	___xxtofl@arg+1,f
  3735  076E  0876               	movf	??___xxtofl+2,w
  3736  076F  04FC               	iorwf	___xxtofl@arg+2,f
  3737  0770  0877               	movf	??___xxtofl+3,w
  3738  0771  04FD               	iorwf	___xxtofl@arg+3,f
  3739  0772                     i1l2347:
  3740  0772  0878               	movf	___xxtofl@sign,w
  3741  0773  1903               	btfsc	3,2
  3742  0774  2F76               	goto	u267_21
  3743  0775  2F77               	goto	u267_20
  3744  0776                     u267_21:
  3745  0776  2F7C               	goto	i1l2353
  3746  0777                     u267_20:
  3747  0777                     i1l2349:
  3748  0777  1FF3               	btfss	___xxtofl@val+3,7
  3749  0778  2F7A               	goto	u268_21
  3750  0779  2F7B               	goto	u268_20
  3751  077A                     u268_21:
  3752  077A  2F7C               	goto	i1l2353
  3753  077B                     u268_20:
  3754  077B                     i1l2351:
  3755  077B  17FD               	bsf	___xxtofl@arg+3,7
  3756  077C                     i1l2353:
  3757  077C  087D               	movf	___xxtofl@arg+3,w
  3758  077D  00F3               	movwf	?___xxtofl+3
  3759  077E  087C               	movf	___xxtofl@arg+2,w
  3760  077F  00F2               	movwf	?___xxtofl+2
  3761  0780  087B               	movf	___xxtofl@arg+1,w
  3762  0781  00F1               	movwf	?___xxtofl+1
  3763  0782  087A               	movf	___xxtofl@arg,w
  3764  0783  00F0               	movwf	?___xxtofl
  3765  0784                     i1l743:
  3766  0784  0008               	return
  3767  0785                     __end_of___xxtofl:
  3768                           
  3769                           	psect	text21
  3770  0E42                     __ptext21:	
  3771 ;; *************** function ___fltol *****************
  3772 ;; Defined at:
  3773 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;  f1              4   52[BANK0 ] unsigned char 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  exp1            1   62[BANK0 ] unsigned char 
  3778 ;;  sign1           1   61[BANK0 ] unsigned char 
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  4   52[BANK0 ] long 
  3781 ;; Registers used:
  3782 ;;		wreg, status,2, status,0
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3788 ;;      Params:         0       4       0       0       0
  3789 ;;      Locals:         0       2       0       0       0
  3790 ;;      Temps:          0       5       0       0       0
  3791 ;;      Totals:         0      11       0       0       0
  3792 ;;Total ram usage:       11 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; This function calls:
  3795 ;;		Nothing
  3796 ;; This function is called by:
  3797 ;;		_isr
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           
  3802                           ;psect for function ___fltol
  3803  0E42                     ___fltol:
  3804  0E42                     i1l1995:	
  3805                           ;incstack = 0
  3806                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3807                           
  3808  0E42  1003               	clrc
  3809  0E43  1283               	bcf	3,5	;RP0=0, select bank0
  3810  0E44  1303               	bcf	3,6	;RP1=0, select bank0
  3811  0E45  0D56               	rlf	___fltol@f1+2,w
  3812  0E46  0D57               	rlf	___fltol@f1+3,w
  3813  0E47  00D8               	movwf	??___fltol
  3814  0E48  0858               	movf	??___fltol,w
  3815  0E49  00DE               	movwf	___fltol@exp1
  3816  0E4A  085E               	movf	___fltol@exp1,w
  3817  0E4B  1D03               	btfss	3,2
  3818  0E4C  2E4E               	goto	u179_21
  3819  0E4D  2E4F               	goto	u179_20
  3820  0E4E                     u179_21:
  3821  0E4E  2E58               	goto	i1l2001
  3822  0E4F                     u179_20:
  3823  0E4F                     i1l1997:
  3824  0E4F  3000               	movlw	0
  3825  0E50  00D7               	movwf	?___fltol+3
  3826  0E51  3000               	movlw	0
  3827  0E52  00D6               	movwf	?___fltol+2
  3828  0E53  3000               	movlw	0
  3829  0E54  00D5               	movwf	?___fltol+1
  3830  0E55  3000               	movlw	0
  3831  0E56  00D4               	movwf	?___fltol
  3832  0E57  2EBD               	goto	i1l494
  3833  0E58                     i1l2001:
  3834  0E58  0854               	movf	___fltol@f1,w
  3835  0E59  00D8               	movwf	??___fltol
  3836  0E5A  0855               	movf	___fltol@f1+1,w
  3837  0E5B  00D9               	movwf	??___fltol+1
  3838  0E5C  0856               	movf	___fltol@f1+2,w
  3839  0E5D  00DA               	movwf	??___fltol+2
  3840  0E5E  0857               	movf	___fltol@f1+3,w
  3841  0E5F  00DB               	movwf	??___fltol+3
  3842  0E60  301F               	movlw	31
  3843  0E61                     u180_25:
  3844  0E61  1003               	clrc
  3845  0E62  0CDB               	rrf	??___fltol+3,f
  3846  0E63  0CDA               	rrf	??___fltol+2,f
  3847  0E64  0CD9               	rrf	??___fltol+1,f
  3848  0E65  0CD8               	rrf	??___fltol,f
  3849  0E66                     u180_20:
  3850  0E66  3EFF               	addlw	-1
  3851  0E67  1D03               	skipz
  3852  0E68  2E61               	goto	u180_25
  3853  0E69  0858               	movf	??___fltol,w
  3854  0E6A  00DC               	movwf	??___fltol+4
  3855  0E6B  085C               	movf	??___fltol+4,w
  3856  0E6C  00DD               	movwf	___fltol@sign1
  3857  0E6D                     i1l2003:
  3858  0E6D  17D6               	bsf	___fltol@f1+2,7
  3859  0E6E                     i1l2005:
  3860  0E6E  30FF               	movlw	255
  3861  0E6F  05D4               	andwf	___fltol@f1,f
  3862  0E70  30FF               	movlw	255
  3863  0E71  05D5               	andwf	___fltol@f1+1,f
  3864  0E72  30FF               	movlw	255
  3865  0E73  05D6               	andwf	___fltol@f1+2,f
  3866  0E74  3000               	movlw	0
  3867  0E75  05D7               	andwf	___fltol@f1+3,f
  3868  0E76                     i1l2007:
  3869  0E76  3096               	movlw	150
  3870  0E77  02DE               	subwf	___fltol@exp1,f
  3871  0E78                     i1l2009:
  3872  0E78  1FDE               	btfss	___fltol@exp1,7
  3873  0E79  2E7B               	goto	u181_21
  3874  0E7A  2E7C               	goto	u181_20
  3875  0E7B                     u181_21:
  3876  0E7B  2E96               	goto	i1l2019
  3877  0E7C                     u181_20:
  3878  0E7C                     i1l2011:
  3879  0E7C  085E               	movf	___fltol@exp1,w
  3880  0E7D  3A80               	xorlw	128
  3881  0E7E  3E97               	addlw	151
  3882  0E7F  1803               	skipnc
  3883  0E80  2E82               	goto	u182_21
  3884  0E81  2E83               	goto	u182_20
  3885  0E82                     u182_21:
  3886  0E82  2E84               	goto	i1l2017
  3887  0E83                     u182_20:
  3888  0E83  2E4F               	goto	i1l1997
  3889  0E84                     i1l2017:
  3890  0E84  3001               	movlw	1
  3891  0E85                     u183_25:
  3892  0E85  1003               	clrc
  3893  0E86  0CD7               	rrf	___fltol@f1+3,f
  3894  0E87  0CD6               	rrf	___fltol@f1+2,f
  3895  0E88  0CD5               	rrf	___fltol@f1+1,f
  3896  0E89  0CD4               	rrf	___fltol@f1,f
  3897  0E8A  3EFF               	addlw	-1
  3898  0E8B  1D03               	skipz
  3899  0E8C  2E85               	goto	u183_25
  3900  0E8D  3001               	movlw	1
  3901  0E8E  00D8               	movwf	??___fltol
  3902  0E8F  0858               	movf	??___fltol,w
  3903  0E90  07DE               	addwf	___fltol@exp1,f
  3904  0E91  1D03               	btfss	3,2
  3905  0E92  2E94               	goto	u184_21
  3906  0E93  2E95               	goto	u184_20
  3907  0E94                     u184_21:
  3908  0E94  2E84               	goto	i1l2017
  3909  0E95                     u184_20:
  3910  0E95  2EAD               	goto	i1l2027
  3911  0E96                     i1l2019:
  3912  0E96  3020               	movlw	32
  3913  0E97  025E               	subwf	___fltol@exp1,w
  3914  0E98  1C03               	skipc
  3915  0E99  2E9B               	goto	u185_21
  3916  0E9A  2E9C               	goto	u185_20
  3917  0E9B                     u185_21:
  3918  0E9B  2EA8               	goto	i1l501
  3919  0E9C                     u185_20:
  3920  0E9C  2E4F               	goto	i1l1997
  3921  0E9D                     i1l2025:
  3922  0E9D  3001               	movlw	1
  3923  0E9E  00D8               	movwf	??___fltol
  3924  0E9F                     u186_25:
  3925  0E9F  1003               	clrc
  3926  0EA0  0DD4               	rlf	___fltol@f1,f
  3927  0EA1  0DD5               	rlf	___fltol@f1+1,f
  3928  0EA2  0DD6               	rlf	___fltol@f1+2,f
  3929  0EA3  0DD7               	rlf	___fltol@f1+3,f
  3930  0EA4  0BD8               	decfsz	??___fltol,f
  3931  0EA5  2E9F               	goto	u186_25
  3932  0EA6  3001               	movlw	1
  3933  0EA7  02DE               	subwf	___fltol@exp1,f
  3934  0EA8                     i1l501:
  3935  0EA8  085E               	movf	___fltol@exp1,w
  3936  0EA9  1D03               	btfss	3,2
  3937  0EAA  2EAC               	goto	u187_21
  3938  0EAB  2EAD               	goto	u187_20
  3939  0EAC                     u187_21:
  3940  0EAC  2E9D               	goto	i1l2025
  3941  0EAD                     u187_20:
  3942  0EAD                     i1l2027:
  3943  0EAD  085D               	movf	___fltol@sign1,w
  3944  0EAE  1903               	btfsc	3,2
  3945  0EAF  2EB1               	goto	u188_21
  3946  0EB0  2EB2               	goto	u188_20
  3947  0EB1                     u188_21:
  3948  0EB1  2EBD               	goto	i1l504
  3949  0EB2                     u188_20:
  3950  0EB2                     i1l2029:
  3951  0EB2  09D4               	comf	___fltol@f1,f
  3952  0EB3  09D5               	comf	___fltol@f1+1,f
  3953  0EB4  09D6               	comf	___fltol@f1+2,f
  3954  0EB5  09D7               	comf	___fltol@f1+3,f
  3955  0EB6  0AD4               	incf	___fltol@f1,f
  3956  0EB7  1903               	skipnz
  3957  0EB8  0AD5               	incf	___fltol@f1+1,f
  3958  0EB9  1903               	skipnz
  3959  0EBA  0AD6               	incf	___fltol@f1+2,f
  3960  0EBB  1903               	skipnz
  3961  0EBC  0AD7               	incf	___fltol@f1+3,f
  3962  0EBD                     i1l504:
  3963  0EBD                     i1l494:
  3964  0EBD  0008               	return
  3965  0EBE                     __end_of___fltol:
  3966                           
  3967                           	psect	text22
  3968  0028                     __ptext22:	
  3969 ;; *************** function ___flmul *****************
  3970 ;; Defined at:
  3971 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  b               4    0[BANK0 ] long 
  3974 ;;  a               4    4[BANK0 ] long 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;  prod            4   20[BANK0 ] struct .
  3977 ;;  grs             4   14[BANK0 ] unsigned long 
  3978 ;;  temp            2   24[BANK0 ] struct .
  3979 ;;  bexp            1   19[BANK0 ] unsigned char 
  3980 ;;  aexp            1   18[BANK0 ] unsigned char 
  3981 ;;  sign            1   13[BANK0 ] unsigned char 
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  4    0[BANK0 ] unsigned char 
  3984 ;; Registers used:
  3985 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3991 ;;      Params:         0       8       0       0       0
  3992 ;;      Locals:         0      13       0       0       0
  3993 ;;      Temps:          0       5       0       0       0
  3994 ;;      Totals:         0      26       0       0       0
  3995 ;;Total ram usage:       26 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; Hardware stack levels required when called:    1
  3998 ;; This function calls:
  3999 ;;		__Umul8_16
  4000 ;; This function is called by:
  4001 ;;		_isr
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           
  4006                           ;psect for function ___flmul
  4007  0028                     ___flmul:
  4008  0028                     i1l2173:	
  4009                           ;incstack = 0
  4010                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4011                           
  4012  0028  1283               	bcf	3,5	;RP0=0, select bank0
  4013  0029  1303               	bcf	3,6	;RP1=0, select bank0
  4014  002A  0823               	movf	___flmul@b+3,w
  4015  002B  3980               	andlw	128
  4016  002C  00A8               	movwf	??___flmul
  4017  002D  0828               	movf	??___flmul,w
  4018  002E  00AD               	movwf	___flmul@sign
  4019  002F                     i1l2175:
  4020  002F  0823               	movf	___flmul@b+3,w
  4021  0030  00A8               	movwf	??___flmul
  4022  0031  0728               	addwf	??___flmul,w
  4023  0032  00A9               	movwf	??___flmul+1
  4024  0033  0829               	movf	??___flmul+1,w
  4025  0034  00B3               	movwf	___flmul@bexp
  4026  0035                     i1l2177:
  4027  0035  1FA2               	btfss	___flmul@b+2,7
  4028  0036  2838               	goto	u218_21
  4029  0037  2839               	goto	u218_20
  4030  0038                     u218_21:
  4031  0038  283A               	goto	i1l2181
  4032  0039                     u218_20:
  4033  0039                     i1l2179:
  4034  0039  1433               	bsf	___flmul@bexp,0
  4035  003A                     i1l2181:
  4036  003A  0833               	movf	___flmul@bexp,w
  4037  003B  1903               	btfsc	3,2
  4038  003C  283E               	goto	u219_21
  4039  003D  283F               	goto	u219_20
  4040  003E                     u219_21:
  4041  003E  284E               	goto	i1l2189
  4042  003F                     u219_20:
  4043  003F                     i1l2183:
  4044  003F  0A33               	incf	___flmul@bexp,w
  4045  0040  1D03               	btfss	3,2
  4046  0041  2843               	goto	u220_21
  4047  0042  2844               	goto	u220_20
  4048  0043                     u220_21:
  4049  0043  284C               	goto	i1l2187
  4050  0044                     u220_20:
  4051  0044                     i1l2185:
  4052  0044  3000               	movlw	0
  4053  0045  00A3               	movwf	___flmul@b+3
  4054  0046  3000               	movlw	0
  4055  0047  00A2               	movwf	___flmul@b+2
  4056  0048  3000               	movlw	0
  4057  0049  00A1               	movwf	___flmul@b+1
  4058  004A  3000               	movlw	0
  4059  004B  00A0               	movwf	___flmul@b
  4060  004C                     i1l2187:
  4061  004C  17A2               	bsf	___flmul@b+2,7
  4062  004D  2856               	goto	i1l2191
  4063  004E                     i1l2189:
  4064  004E  3000               	movlw	0
  4065  004F  00A3               	movwf	___flmul@b+3
  4066  0050  3000               	movlw	0
  4067  0051  00A2               	movwf	___flmul@b+2
  4068  0052  3000               	movlw	0
  4069  0053  00A1               	movwf	___flmul@b+1
  4070  0054  3000               	movlw	0
  4071  0055  00A0               	movwf	___flmul@b
  4072  0056                     i1l2191:
  4073  0056  0827               	movf	___flmul@a+3,w
  4074  0057  3980               	andlw	128
  4075  0058  00A8               	movwf	??___flmul
  4076  0059  0828               	movf	??___flmul,w
  4077  005A  06AD               	xorwf	___flmul@sign,f
  4078  005B                     i1l2193:
  4079  005B  0827               	movf	___flmul@a+3,w
  4080  005C  00A8               	movwf	??___flmul
  4081  005D  0728               	addwf	??___flmul,w
  4082  005E  00A9               	movwf	??___flmul+1
  4083  005F  0829               	movf	??___flmul+1,w
  4084  0060  00B2               	movwf	___flmul@aexp
  4085  0061                     i1l2195:
  4086  0061  1FA6               	btfss	___flmul@a+2,7
  4087  0062  2864               	goto	u221_21
  4088  0063  2865               	goto	u221_20
  4089  0064                     u221_21:
  4090  0064  2866               	goto	i1l2199
  4091  0065                     u221_20:
  4092  0065                     i1l2197:
  4093  0065  1432               	bsf	___flmul@aexp,0
  4094  0066                     i1l2199:
  4095  0066  0832               	movf	___flmul@aexp,w
  4096  0067  1903               	btfsc	3,2
  4097  0068  286A               	goto	u222_21
  4098  0069  286B               	goto	u222_20
  4099  006A                     u222_21:
  4100  006A  287A               	goto	i1l2207
  4101  006B                     u222_20:
  4102  006B                     i1l2201:
  4103  006B  0A32               	incf	___flmul@aexp,w
  4104  006C  1D03               	btfss	3,2
  4105  006D  286F               	goto	u223_21
  4106  006E  2870               	goto	u223_20
  4107  006F                     u223_21:
  4108  006F  2878               	goto	i1l2205
  4109  0070                     u223_20:
  4110  0070                     i1l2203:
  4111  0070  3000               	movlw	0
  4112  0071  00A7               	movwf	___flmul@a+3
  4113  0072  3000               	movlw	0
  4114  0073  00A6               	movwf	___flmul@a+2
  4115  0074  3000               	movlw	0
  4116  0075  00A5               	movwf	___flmul@a+1
  4117  0076  3000               	movlw	0
  4118  0077  00A4               	movwf	___flmul@a
  4119  0078                     i1l2205:
  4120  0078  17A6               	bsf	___flmul@a+2,7
  4121  0079  2882               	goto	i1l2209
  4122  007A                     i1l2207:
  4123  007A  3000               	movlw	0
  4124  007B  00A7               	movwf	___flmul@a+3
  4125  007C  3000               	movlw	0
  4126  007D  00A6               	movwf	___flmul@a+2
  4127  007E  3000               	movlw	0
  4128  007F  00A5               	movwf	___flmul@a+1
  4129  0080  3000               	movlw	0
  4130  0081  00A4               	movwf	___flmul@a
  4131  0082                     i1l2209:
  4132  0082  0832               	movf	___flmul@aexp,w
  4133  0083  1903               	btfsc	3,2
  4134  0084  2886               	goto	u224_21
  4135  0085  2887               	goto	u224_20
  4136  0086                     u224_21:
  4137  0086  288C               	goto	i1l2213
  4138  0087                     u224_20:
  4139  0087                     i1l2211:
  4140  0087  0833               	movf	___flmul@bexp,w
  4141  0088  1D03               	btfss	3,2
  4142  0089  288B               	goto	u225_21
  4143  008A  288C               	goto	u225_20
  4144  008B                     u225_21:
  4145  008B  2895               	goto	i1l2217
  4146  008C                     u225_20:
  4147  008C                     i1l2213:
  4148  008C  3000               	movlw	0
  4149  008D  00A3               	movwf	?___flmul+3
  4150  008E  3000               	movlw	0
  4151  008F  00A2               	movwf	?___flmul+2
  4152  0090  3000               	movlw	0
  4153  0091  00A1               	movwf	?___flmul+1
  4154  0092  3000               	movlw	0
  4155  0093  00A0               	movwf	?___flmul
  4156  0094  2B88               	goto	i1l697
  4157  0095                     i1l2217:
  4158  0095  0820               	movf	___flmul@b,w
  4159  0096  00A8               	movwf	??___flmul
  4160  0097  0828               	movf	??___flmul,w
  4161  0098  00F0               	movwf	__Umul8_16@multiplicand
  4162  0099  0826               	movf	___flmul@a+2,w
  4163  009A  120A  158A  24C3  120A  118A  	fcall	__Umul8_16
  4164  009F  0871               	movf	?__Umul8_16+1,w
  4165  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  4166  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  4167  00A2  00B9               	movwf	___flmul@temp+1
  4168  00A3  0870               	movf	?__Umul8_16,w
  4169  00A4  00B8               	movwf	___flmul@temp
  4170  00A5                     i1l2219:
  4171  00A5  0838               	movf	___flmul@temp,w
  4172  00A6  00A8               	movwf	??___flmul
  4173  00A7  01A9               	clrf	??___flmul+1
  4174  00A8  01AA               	clrf	??___flmul+2
  4175  00A9  01AB               	clrf	??___flmul+3
  4176  00AA  082B               	movf	??___flmul+3,w
  4177  00AB  00B1               	movwf	___flmul@grs+3
  4178  00AC  082A               	movf	??___flmul+2,w
  4179  00AD  00B0               	movwf	___flmul@grs+2
  4180  00AE  0829               	movf	??___flmul+1,w
  4181  00AF  00AF               	movwf	___flmul@grs+1
  4182  00B0  0828               	movf	??___flmul,w
  4183  00B1  00AE               	movwf	___flmul@grs
  4184  00B2                     i1l2221:
  4185  00B2  0839               	movf	___flmul@temp+1,w
  4186  00B3  00A8               	movwf	??___flmul
  4187  00B4  01A9               	clrf	??___flmul+1
  4188  00B5  01AA               	clrf	??___flmul+2
  4189  00B6  01AB               	clrf	??___flmul+3
  4190  00B7  082B               	movf	??___flmul+3,w
  4191  00B8  00B7               	movwf	___flmul@prod+3
  4192  00B9  082A               	movf	??___flmul+2,w
  4193  00BA  00B6               	movwf	___flmul@prod+2
  4194  00BB  0829               	movf	??___flmul+1,w
  4195  00BC  00B5               	movwf	___flmul@prod+1
  4196  00BD  0828               	movf	??___flmul,w
  4197  00BE  00B4               	movwf	___flmul@prod
  4198  00BF  0821               	movf	___flmul@b+1,w
  4199  00C0  00A8               	movwf	??___flmul
  4200  00C1  0828               	movf	??___flmul,w
  4201  00C2  00F0               	movwf	__Umul8_16@multiplicand
  4202  00C3  0825               	movf	___flmul@a+1,w
  4203  00C4  120A  158A  24C3  120A  118A  	fcall	__Umul8_16
  4204  00C9  0871               	movf	?__Umul8_16+1,w
  4205  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  4206  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  4207  00CC  00B9               	movwf	___flmul@temp+1
  4208  00CD  0870               	movf	?__Umul8_16,w
  4209  00CE  00B8               	movwf	___flmul@temp
  4210  00CF                     i1l2223:
  4211  00CF  0838               	movf	___flmul@temp,w
  4212  00D0  00A8               	movwf	??___flmul
  4213  00D1  01A9               	clrf	??___flmul+1
  4214  00D2  01AA               	clrf	??___flmul+2
  4215  00D3  01AB               	clrf	??___flmul+3
  4216  00D4  0828               	movf	??___flmul,w
  4217  00D5  07AE               	addwf	___flmul@grs,f
  4218  00D6  0829               	movf	??___flmul+1,w
  4219  00D7  1103               	clrz
  4220  00D8  1803               	skipnc
  4221  00D9  3E01               	addlw	1
  4222  00DA  1903               	skipnz
  4223  00DB  28DD               	goto	u226_21
  4224  00DC  07AF               	addwf	___flmul@grs+1,f
  4225  00DD                     u226_21:
  4226  00DD  082A               	movf	??___flmul+2,w
  4227  00DE  1103               	clrz
  4228  00DF  1803               	skipnc
  4229  00E0  3E01               	addlw	1
  4230  00E1  1903               	skipnz
  4231  00E2  28E4               	goto	u226_22
  4232  00E3  07B0               	addwf	___flmul@grs+2,f
  4233  00E4                     u226_22:
  4234  00E4  082B               	movf	??___flmul+3,w
  4235  00E5  1103               	clrz
  4236  00E6  1803               	skipnc
  4237  00E7  3E01               	addlw	1
  4238  00E8  1903               	skipnz
  4239  00E9  28EB               	goto	u226_23
  4240  00EA  07B1               	addwf	___flmul@grs+3,f
  4241  00EB                     u226_23:
  4242  00EB                     i1l2225:
  4243  00EB  0839               	movf	___flmul@temp+1,w
  4244  00EC  00A8               	movwf	??___flmul
  4245  00ED  01A9               	clrf	??___flmul+1
  4246  00EE  01AA               	clrf	??___flmul+2
  4247  00EF  01AB               	clrf	??___flmul+3
  4248  00F0  0828               	movf	??___flmul,w
  4249  00F1  07B4               	addwf	___flmul@prod,f
  4250  00F2  0829               	movf	??___flmul+1,w
  4251  00F3  1103               	clrz
  4252  00F4  1803               	skipnc
  4253  00F5  3E01               	addlw	1
  4254  00F6  1903               	skipnz
  4255  00F7  28F9               	goto	u227_21
  4256  00F8  07B5               	addwf	___flmul@prod+1,f
  4257  00F9                     u227_21:
  4258  00F9  082A               	movf	??___flmul+2,w
  4259  00FA  1103               	clrz
  4260  00FB  1803               	skipnc
  4261  00FC  3E01               	addlw	1
  4262  00FD  1903               	skipnz
  4263  00FE  2900               	goto	u227_22
  4264  00FF  07B6               	addwf	___flmul@prod+2,f
  4265  0100                     u227_22:
  4266  0100  082B               	movf	??___flmul+3,w
  4267  0101  1103               	clrz
  4268  0102  1803               	skipnc
  4269  0103  3E01               	addlw	1
  4270  0104  1903               	skipnz
  4271  0105  2907               	goto	u227_23
  4272  0106  07B7               	addwf	___flmul@prod+3,f
  4273  0107                     u227_23:
  4274  0107  0822               	movf	___flmul@b+2,w
  4275  0108  00A8               	movwf	??___flmul
  4276  0109  0828               	movf	??___flmul,w
  4277  010A  00F0               	movwf	__Umul8_16@multiplicand
  4278  010B  0824               	movf	___flmul@a,w
  4279  010C  120A  158A  24C3  120A  118A  	fcall	__Umul8_16
  4280  0111  0871               	movf	?__Umul8_16+1,w
  4281  0112  1283               	bcf	3,5	;RP0=0, select bank0
  4282  0113  1303               	bcf	3,6	;RP1=0, select bank0
  4283  0114  00B9               	movwf	___flmul@temp+1
  4284  0115  0870               	movf	?__Umul8_16,w
  4285  0116  00B8               	movwf	___flmul@temp
  4286  0117                     i1l2227:
  4287  0117  0838               	movf	___flmul@temp,w
  4288  0118  00A8               	movwf	??___flmul
  4289  0119  01A9               	clrf	??___flmul+1
  4290  011A  01AA               	clrf	??___flmul+2
  4291  011B  01AB               	clrf	??___flmul+3
  4292  011C  0828               	movf	??___flmul,w
  4293  011D  07AE               	addwf	___flmul@grs,f
  4294  011E  0829               	movf	??___flmul+1,w
  4295  011F  1103               	clrz
  4296  0120  1803               	skipnc
  4297  0121  3E01               	addlw	1
  4298  0122  1903               	skipnz
  4299  0123  2925               	goto	u228_21
  4300  0124  07AF               	addwf	___flmul@grs+1,f
  4301  0125                     u228_21:
  4302  0125  082A               	movf	??___flmul+2,w
  4303  0126  1103               	clrz
  4304  0127  1803               	skipnc
  4305  0128  3E01               	addlw	1
  4306  0129  1903               	skipnz
  4307  012A  292C               	goto	u228_22
  4308  012B  07B0               	addwf	___flmul@grs+2,f
  4309  012C                     u228_22:
  4310  012C  082B               	movf	??___flmul+3,w
  4311  012D  1103               	clrz
  4312  012E  1803               	skipnc
  4313  012F  3E01               	addlw	1
  4314  0130  1903               	skipnz
  4315  0131  2933               	goto	u228_23
  4316  0132  07B1               	addwf	___flmul@grs+3,f
  4317  0133                     u228_23:
  4318  0133                     i1l2229:
  4319  0133  0839               	movf	___flmul@temp+1,w
  4320  0134  00A8               	movwf	??___flmul
  4321  0135  01A9               	clrf	??___flmul+1
  4322  0136  01AA               	clrf	??___flmul+2
  4323  0137  01AB               	clrf	??___flmul+3
  4324  0138  0828               	movf	??___flmul,w
  4325  0139  07B4               	addwf	___flmul@prod,f
  4326  013A  0829               	movf	??___flmul+1,w
  4327  013B  1103               	clrz
  4328  013C  1803               	skipnc
  4329  013D  3E01               	addlw	1
  4330  013E  1903               	skipnz
  4331  013F  2941               	goto	u229_21
  4332  0140  07B5               	addwf	___flmul@prod+1,f
  4333  0141                     u229_21:
  4334  0141  082A               	movf	??___flmul+2,w
  4335  0142  1103               	clrz
  4336  0143  1803               	skipnc
  4337  0144  3E01               	addlw	1
  4338  0145  1903               	skipnz
  4339  0146  2948               	goto	u229_22
  4340  0147  07B6               	addwf	___flmul@prod+2,f
  4341  0148                     u229_22:
  4342  0148  082B               	movf	??___flmul+3,w
  4343  0149  1103               	clrz
  4344  014A  1803               	skipnc
  4345  014B  3E01               	addlw	1
  4346  014C  1903               	skipnz
  4347  014D  294F               	goto	u229_23
  4348  014E  07B7               	addwf	___flmul@prod+3,f
  4349  014F                     u229_23:
  4350  014F                     i1l2231:
  4351  014F  3008               	movlw	8
  4352  0150  00A8               	movwf	??___flmul
  4353  0151                     u230_25:
  4354  0151  1003               	clrc
  4355  0152  0DAE               	rlf	___flmul@grs,f
  4356  0153  0DAF               	rlf	___flmul@grs+1,f
  4357  0154  0DB0               	rlf	___flmul@grs+2,f
  4358  0155  0DB1               	rlf	___flmul@grs+3,f
  4359  0156  0BA8               	decfsz	??___flmul,f
  4360  0157  2951               	goto	u230_25
  4361  0158                     i1l2233:
  4362  0158  0821               	movf	___flmul@b+1,w
  4363  0159  00A8               	movwf	??___flmul
  4364  015A  0828               	movf	??___flmul,w
  4365  015B  00F0               	movwf	__Umul8_16@multiplicand
  4366  015C  0824               	movf	___flmul@a,w
  4367  015D  120A  158A  24C3  120A  118A  	fcall	__Umul8_16
  4368  0162  0871               	movf	?__Umul8_16+1,w
  4369  0163  1283               	bcf	3,5	;RP0=0, select bank0
  4370  0164  1303               	bcf	3,6	;RP1=0, select bank0
  4371  0165  00B9               	movwf	___flmul@temp+1
  4372  0166  0870               	movf	?__Umul8_16,w
  4373  0167  00B8               	movwf	___flmul@temp
  4374  0168                     i1l2235:
  4375  0168  0838               	movf	___flmul@temp,w
  4376  0169  00A8               	movwf	??___flmul
  4377  016A  0839               	movf	___flmul@temp+1,w
  4378  016B  00A9               	movwf	??___flmul+1
  4379  016C  01AA               	clrf	??___flmul+2
  4380  016D  01AB               	clrf	??___flmul+3
  4381  016E  0828               	movf	??___flmul,w
  4382  016F  07AE               	addwf	___flmul@grs,f
  4383  0170  0829               	movf	??___flmul+1,w
  4384  0171  1103               	clrz
  4385  0172  1803               	skipnc
  4386  0173  3E01               	addlw	1
  4387  0174  1903               	skipnz
  4388  0175  2977               	goto	u231_21
  4389  0176  07AF               	addwf	___flmul@grs+1,f
  4390  0177                     u231_21:
  4391  0177  082A               	movf	??___flmul+2,w
  4392  0178  1103               	clrz
  4393  0179  1803               	skipnc
  4394  017A  3E01               	addlw	1
  4395  017B  1903               	skipnz
  4396  017C  297E               	goto	u231_22
  4397  017D  07B0               	addwf	___flmul@grs+2,f
  4398  017E                     u231_22:
  4399  017E  082B               	movf	??___flmul+3,w
  4400  017F  1103               	clrz
  4401  0180  1803               	skipnc
  4402  0181  3E01               	addlw	1
  4403  0182  1903               	skipnz
  4404  0183  2985               	goto	u231_23
  4405  0184  07B1               	addwf	___flmul@grs+3,f
  4406  0185                     u231_23:
  4407  0185                     i1l2237:
  4408  0185  0820               	movf	___flmul@b,w
  4409  0186  00A8               	movwf	??___flmul
  4410  0187  0828               	movf	??___flmul,w
  4411  0188  00F0               	movwf	__Umul8_16@multiplicand
  4412  0189  0825               	movf	___flmul@a+1,w
  4413  018A  120A  158A  24C3  120A  118A  	fcall	__Umul8_16
  4414  018F  0871               	movf	?__Umul8_16+1,w
  4415  0190  1283               	bcf	3,5	;RP0=0, select bank0
  4416  0191  1303               	bcf	3,6	;RP1=0, select bank0
  4417  0192  00B9               	movwf	___flmul@temp+1
  4418  0193  0870               	movf	?__Umul8_16,w
  4419  0194  00B8               	movwf	___flmul@temp
  4420  0195                     i1l2239:
  4421  0195  0838               	movf	___flmul@temp,w
  4422  0196  00A8               	movwf	??___flmul
  4423  0197  0839               	movf	___flmul@temp+1,w
  4424  0198  00A9               	movwf	??___flmul+1
  4425  0199  01AA               	clrf	??___flmul+2
  4426  019A  01AB               	clrf	??___flmul+3
  4427  019B  0828               	movf	??___flmul,w
  4428  019C  07AE               	addwf	___flmul@grs,f
  4429  019D  0829               	movf	??___flmul+1,w
  4430  019E  1103               	clrz
  4431  019F  1803               	skipnc
  4432  01A0  3E01               	addlw	1
  4433  01A1  1903               	skipnz
  4434  01A2  29A4               	goto	u232_21
  4435  01A3  07AF               	addwf	___flmul@grs+1,f
  4436  01A4                     u232_21:
  4437  01A4  082A               	movf	??___flmul+2,w
  4438  01A5  1103               	clrz
  4439  01A6  1803               	skipnc
  4440  01A7  3E01               	addlw	1
  4441  01A8  1903               	skipnz
  4442  01A9  29AB               	goto	u232_22
  4443  01AA  07B0               	addwf	___flmul@grs+2,f
  4444  01AB                     u232_22:
  4445  01AB  082B               	movf	??___flmul+3,w
  4446  01AC  1103               	clrz
  4447  01AD  1803               	skipnc
  4448  01AE  3E01               	addlw	1
  4449  01AF  1903               	skipnz
  4450  01B0  29B2               	goto	u232_23
  4451  01B1  07B1               	addwf	___flmul@grs+3,f
  4452  01B2                     u232_23:
  4453  01B2                     i1l2241:
  4454  01B2  3008               	movlw	8
  4455  01B3  00A8               	movwf	??___flmul
  4456  01B4                     u233_25:
  4457  01B4  1003               	clrc
  4458  01B5  0DAE               	rlf	___flmul@grs,f
  4459  01B6  0DAF               	rlf	___flmul@grs+1,f
  4460  01B7  0DB0               	rlf	___flmul@grs+2,f
  4461  01B8  0DB1               	rlf	___flmul@grs+3,f
  4462  01B9  0BA8               	decfsz	??___flmul,f
  4463  01BA  29B4               	goto	u233_25
  4464  01BB  0820               	movf	___flmul@b,w
  4465  01BC  00A8               	movwf	??___flmul
  4466  01BD  0828               	movf	??___flmul,w
  4467  01BE  00F0               	movwf	__Umul8_16@multiplicand
  4468  01BF  0824               	movf	___flmul@a,w
  4469  01C0  120A  158A  24C3  120A  118A  	fcall	__Umul8_16
  4470  01C5  0871               	movf	?__Umul8_16+1,w
  4471  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  4472  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  4473  01C8  00B9               	movwf	___flmul@temp+1
  4474  01C9  0870               	movf	?__Umul8_16,w
  4475  01CA  00B8               	movwf	___flmul@temp
  4476  01CB                     i1l2243:
  4477  01CB  0838               	movf	___flmul@temp,w
  4478  01CC  00A8               	movwf	??___flmul
  4479  01CD  0839               	movf	___flmul@temp+1,w
  4480  01CE  00A9               	movwf	??___flmul+1
  4481  01CF  01AA               	clrf	??___flmul+2
  4482  01D0  01AB               	clrf	??___flmul+3
  4483  01D1  0828               	movf	??___flmul,w
  4484  01D2  07AE               	addwf	___flmul@grs,f
  4485  01D3  0829               	movf	??___flmul+1,w
  4486  01D4  1103               	clrz
  4487  01D5  1803               	skipnc
  4488  01D6  3E01               	addlw	1
  4489  01D7  1903               	skipnz
  4490  01D8  29DA               	goto	u234_21
  4491  01D9  07AF               	addwf	___flmul@grs+1,f
  4492  01DA                     u234_21:
  4493  01DA  082A               	movf	??___flmul+2,w
  4494  01DB  1103               	clrz
  4495  01DC  1803               	skipnc
  4496  01DD  3E01               	addlw	1
  4497  01DE  1903               	skipnz
  4498  01DF  29E1               	goto	u234_22
  4499  01E0  07B0               	addwf	___flmul@grs+2,f
  4500  01E1                     u234_22:
  4501  01E1  082B               	movf	??___flmul+3,w
  4502  01E2  1103               	clrz
  4503  01E3  1803               	skipnc
  4504  01E4  3E01               	addlw	1
  4505  01E5  1903               	skipnz
  4506  01E6  29E8               	goto	u234_23
  4507  01E7  07B1               	addwf	___flmul@grs+3,f
  4508  01E8                     u234_23:
  4509  01E8                     i1l2245:
  4510  01E8  0821               	movf	___flmul@b+1,w
  4511  01E9  00A8               	movwf	??___flmul
  4512  01EA  0828               	movf	??___flmul,w
  4513  01EB  00F0               	movwf	__Umul8_16@multiplicand
  4514  01EC  0826               	movf	___flmul@a+2,w
  4515  01ED  120A  158A  24C3  120A  118A  	fcall	__Umul8_16
  4516  01F2  0871               	movf	?__Umul8_16+1,w
  4517  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  4518  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  4519  01F5  00B9               	movwf	___flmul@temp+1
  4520  01F6  0870               	movf	?__Umul8_16,w
  4521  01F7  00B8               	movwf	___flmul@temp
  4522  01F8  0838               	movf	___flmul@temp,w
  4523  01F9  00A8               	movwf	??___flmul
  4524  01FA  0839               	movf	___flmul@temp+1,w
  4525  01FB  00A9               	movwf	??___flmul+1
  4526  01FC  01AA               	clrf	??___flmul+2
  4527  01FD  01AB               	clrf	??___flmul+3
  4528  01FE  0828               	movf	??___flmul,w
  4529  01FF  07B4               	addwf	___flmul@prod,f
  4530  0200  0829               	movf	??___flmul+1,w
  4531  0201  1103               	clrz
  4532  0202  1803               	skipnc
  4533  0203  3E01               	addlw	1
  4534  0204  1903               	skipnz
  4535  0205  2A07               	goto	u235_21
  4536  0206  07B5               	addwf	___flmul@prod+1,f
  4537  0207                     u235_21:
  4538  0207  082A               	movf	??___flmul+2,w
  4539  0208  1103               	clrz
  4540  0209  1803               	skipnc
  4541  020A  3E01               	addlw	1
  4542  020B  1903               	skipnz
  4543  020C  2A0E               	goto	u235_22
  4544  020D  07B6               	addwf	___flmul@prod+2,f
  4545  020E                     u235_22:
  4546  020E  082B               	movf	??___flmul+3,w
  4547  020F  1103               	clrz
  4548  0210  1803               	skipnc
  4549  0211  3E01               	addlw	1
  4550  0212  1903               	skipnz
  4551  0213  2A15               	goto	u235_23
  4552  0214  07B7               	addwf	___flmul@prod+3,f
  4553  0215                     u235_23:
  4554  0215                     i1l2247:
  4555  0215  0822               	movf	___flmul@b+2,w
  4556  0216  00A8               	movwf	??___flmul
  4557  0217  0828               	movf	??___flmul,w
  4558  0218  00F0               	movwf	__Umul8_16@multiplicand
  4559  0219  0825               	movf	___flmul@a+1,w
  4560  021A  120A  158A  24C3  120A  118A  	fcall	__Umul8_16
  4561  021F  0871               	movf	?__Umul8_16+1,w
  4562  0220  1283               	bcf	3,5	;RP0=0, select bank0
  4563  0221  1303               	bcf	3,6	;RP1=0, select bank0
  4564  0222  00B9               	movwf	___flmul@temp+1
  4565  0223  0870               	movf	?__Umul8_16,w
  4566  0224  00B8               	movwf	___flmul@temp
  4567  0225                     i1l2249:
  4568  0225  0838               	movf	___flmul@temp,w
  4569  0226  00A8               	movwf	??___flmul
  4570  0227  0839               	movf	___flmul@temp+1,w
  4571  0228  00A9               	movwf	??___flmul+1
  4572  0229  01AA               	clrf	??___flmul+2
  4573  022A  01AB               	clrf	??___flmul+3
  4574  022B  0828               	movf	??___flmul,w
  4575  022C  07B4               	addwf	___flmul@prod,f
  4576  022D  0829               	movf	??___flmul+1,w
  4577  022E  1103               	clrz
  4578  022F  1803               	skipnc
  4579  0230  3E01               	addlw	1
  4580  0231  1903               	skipnz
  4581  0232  2A34               	goto	u236_21
  4582  0233  07B5               	addwf	___flmul@prod+1,f
  4583  0234                     u236_21:
  4584  0234  082A               	movf	??___flmul+2,w
  4585  0235  1103               	clrz
  4586  0236  1803               	skipnc
  4587  0237  3E01               	addlw	1
  4588  0238  1903               	skipnz
  4589  0239  2A3B               	goto	u236_22
  4590  023A  07B6               	addwf	___flmul@prod+2,f
  4591  023B                     u236_22:
  4592  023B  082B               	movf	??___flmul+3,w
  4593  023C  1103               	clrz
  4594  023D  1803               	skipnc
  4595  023E  3E01               	addlw	1
  4596  023F  1903               	skipnz
  4597  0240  2A42               	goto	u236_23
  4598  0241  07B7               	addwf	___flmul@prod+3,f
  4599  0242                     u236_23:
  4600  0242  0822               	movf	___flmul@b+2,w
  4601  0243  00A8               	movwf	??___flmul
  4602  0244  0828               	movf	??___flmul,w
  4603  0245  00F0               	movwf	__Umul8_16@multiplicand
  4604  0246  0826               	movf	___flmul@a+2,w
  4605  0247  120A  158A  24C3  120A  118A  	fcall	__Umul8_16
  4606  024C  0871               	movf	?__Umul8_16+1,w
  4607  024D  1283               	bcf	3,5	;RP0=0, select bank0
  4608  024E  1303               	bcf	3,6	;RP1=0, select bank0
  4609  024F  00B9               	movwf	___flmul@temp+1
  4610  0250  0870               	movf	?__Umul8_16,w
  4611  0251  00B8               	movwf	___flmul@temp
  4612  0252                     i1l2251:
  4613  0252  0838               	movf	___flmul@temp,w
  4614  0253  00A8               	movwf	??___flmul
  4615  0254  0839               	movf	___flmul@temp+1,w
  4616  0255  00A9               	movwf	??___flmul+1
  4617  0256  01AA               	clrf	??___flmul+2
  4618  0257  01AB               	clrf	??___flmul+3
  4619  0258  3008               	movlw	8
  4620  0259                     u237_25:
  4621  0259  1003               	clrc
  4622  025A  0DA8               	rlf	??___flmul,f
  4623  025B  0DA9               	rlf	??___flmul+1,f
  4624  025C  0DAA               	rlf	??___flmul+2,f
  4625  025D  0DAB               	rlf	??___flmul+3,f
  4626  025E                     u237_20:
  4627  025E  3EFF               	addlw	-1
  4628  025F  1D03               	skipz
  4629  0260  2A59               	goto	u237_25
  4630  0261  0828               	movf	??___flmul,w
  4631  0262  07B4               	addwf	___flmul@prod,f
  4632  0263  0829               	movf	??___flmul+1,w
  4633  0264  1103               	clrz
  4634  0265  1803               	skipnc
  4635  0266  3E01               	addlw	1
  4636  0267  1903               	skipnz
  4637  0268  2A6A               	goto	u238_21
  4638  0269  07B5               	addwf	___flmul@prod+1,f
  4639  026A                     u238_21:
  4640  026A  082A               	movf	??___flmul+2,w
  4641  026B  1103               	clrz
  4642  026C  1803               	skipnc
  4643  026D  3E01               	addlw	1
  4644  026E  1903               	skipnz
  4645  026F  2A71               	goto	u238_22
  4646  0270  07B6               	addwf	___flmul@prod+2,f
  4647  0271                     u238_22:
  4648  0271  082B               	movf	??___flmul+3,w
  4649  0272  1103               	clrz
  4650  0273  1803               	skipnc
  4651  0274  3E01               	addlw	1
  4652  0275  1903               	skipnz
  4653  0276  2A78               	goto	u238_23
  4654  0277  07B7               	addwf	___flmul@prod+3,f
  4655  0278                     u238_23:
  4656  0278                     i1l2253:
  4657  0278  082E               	movf	___flmul@grs,w
  4658  0279  00A8               	movwf	??___flmul
  4659  027A  082F               	movf	___flmul@grs+1,w
  4660  027B  00A9               	movwf	??___flmul+1
  4661  027C  0830               	movf	___flmul@grs+2,w
  4662  027D  00AA               	movwf	??___flmul+2
  4663  027E  0831               	movf	___flmul@grs+3,w
  4664  027F  00AB               	movwf	??___flmul+3
  4665  0280  3018               	movlw	24
  4666  0281                     u239_25:
  4667  0281  1003               	clrc
  4668  0282  0CAB               	rrf	??___flmul+3,f
  4669  0283  0CAA               	rrf	??___flmul+2,f
  4670  0284  0CA9               	rrf	??___flmul+1,f
  4671  0285  0CA8               	rrf	??___flmul,f
  4672  0286                     u239_20:
  4673  0286  3EFF               	addlw	-1
  4674  0287  1D03               	skipz
  4675  0288  2A81               	goto	u239_25
  4676  0289  0828               	movf	??___flmul,w
  4677  028A  07B4               	addwf	___flmul@prod,f
  4678  028B  0829               	movf	??___flmul+1,w
  4679  028C  1103               	clrz
  4680  028D  1803               	skipnc
  4681  028E  3E01               	addlw	1
  4682  028F  1903               	skipnz
  4683  0290  2A92               	goto	u240_21
  4684  0291  07B5               	addwf	___flmul@prod+1,f
  4685  0292                     u240_21:
  4686  0292  082A               	movf	??___flmul+2,w
  4687  0293  1103               	clrz
  4688  0294  1803               	skipnc
  4689  0295  3E01               	addlw	1
  4690  0296  1903               	skipnz
  4691  0297  2A99               	goto	u240_22
  4692  0298  07B6               	addwf	___flmul@prod+2,f
  4693  0299                     u240_22:
  4694  0299  082B               	movf	??___flmul+3,w
  4695  029A  1103               	clrz
  4696  029B  1803               	skipnc
  4697  029C  3E01               	addlw	1
  4698  029D  1903               	skipnz
  4699  029E  2AA0               	goto	u240_23
  4700  029F  07B7               	addwf	___flmul@prod+3,f
  4701  02A0                     u240_23:
  4702  02A0                     i1l2255:
  4703  02A0  3008               	movlw	8
  4704  02A1  00A8               	movwf	??___flmul
  4705  02A2                     u241_25:
  4706  02A2  1003               	clrc
  4707  02A3  0DAE               	rlf	___flmul@grs,f
  4708  02A4  0DAF               	rlf	___flmul@grs+1,f
  4709  02A5  0DB0               	rlf	___flmul@grs+2,f
  4710  02A6  0DB1               	rlf	___flmul@grs+3,f
  4711  02A7  0BA8               	decfsz	??___flmul,f
  4712  02A8  2AA2               	goto	u241_25
  4713  02A9                     i1l2257:
  4714  02A9  0833               	movf	___flmul@bexp,w
  4715  02AA  0732               	addwf	___flmul@aexp,w
  4716  02AB  00A8               	movwf	??___flmul
  4717  02AC  01A9               	clrf	??___flmul+1
  4718  02AD  0DA9               	rlf	??___flmul+1,f
  4719  02AE  0828               	movf	??___flmul,w
  4720  02AF  3E82               	addlw	130
  4721  02B0  00B8               	movwf	___flmul@temp
  4722  02B1  0829               	movf	??___flmul+1,w
  4723  02B2  1803               	skipnc
  4724  02B3  3E01               	addlw	1
  4725  02B4  3EFF               	addlw	255
  4726  02B5  00B9               	movwf	___flmul@temp+1
  4727  02B6  2AD4               	goto	i1l2269
  4728  02B7                     i1l2259:
  4729  02B7  3001               	movlw	1
  4730  02B8  00A8               	movwf	??___flmul
  4731  02B9                     u242_25:
  4732  02B9  1003               	clrc
  4733  02BA  0DB4               	rlf	___flmul@prod,f
  4734  02BB  0DB5               	rlf	___flmul@prod+1,f
  4735  02BC  0DB6               	rlf	___flmul@prod+2,f
  4736  02BD  0DB7               	rlf	___flmul@prod+3,f
  4737  02BE  0BA8               	decfsz	??___flmul,f
  4738  02BF  2AB9               	goto	u242_25
  4739  02C0                     i1l2261:
  4740  02C0  1FB1               	btfss	___flmul@grs+3,7
  4741  02C1  2AC3               	goto	u243_21
  4742  02C2  2AC4               	goto	u243_20
  4743  02C3                     u243_21:
  4744  02C3  2AC5               	goto	i1l2265
  4745  02C4                     u243_20:
  4746  02C4                     i1l2263:
  4747  02C4  1434               	bsf	___flmul@prod,0
  4748  02C5                     i1l2265:
  4749  02C5  3001               	movlw	1
  4750  02C6  00A8               	movwf	??___flmul
  4751  02C7                     u244_25:
  4752  02C7  1003               	clrc
  4753  02C8  0DAE               	rlf	___flmul@grs,f
  4754  02C9  0DAF               	rlf	___flmul@grs+1,f
  4755  02CA  0DB0               	rlf	___flmul@grs+2,f
  4756  02CB  0DB1               	rlf	___flmul@grs+3,f
  4757  02CC  0BA8               	decfsz	??___flmul,f
  4758  02CD  2AC7               	goto	u244_25
  4759  02CE                     i1l2267:
  4760  02CE  30FF               	movlw	255
  4761  02CF  07B8               	addwf	___flmul@temp,f
  4762  02D0  1803               	skipnc
  4763  02D1  0AB9               	incf	___flmul@temp+1,f
  4764  02D2  30FF               	movlw	255
  4765  02D3  07B9               	addwf	___flmul@temp+1,f
  4766  02D4                     i1l2269:
  4767  02D4  1FB6               	btfss	___flmul@prod+2,7
  4768  02D5  2AD7               	goto	u245_21
  4769  02D6  2AD8               	goto	u245_20
  4770  02D7                     u245_21:
  4771  02D7  2AB7               	goto	i1l2259
  4772  02D8                     u245_20:
  4773  02D8                     i1l2271:
  4774  02D8  01B2               	clrf	___flmul@aexp
  4775  02D9                     i1l2273:
  4776  02D9  1FB1               	btfss	___flmul@grs+3,7
  4777  02DA  2ADC               	goto	u246_21
  4778  02DB  2ADD               	goto	u246_20
  4779  02DC                     u246_21:
  4780  02DC  2AF9               	goto	i1l2281
  4781  02DD                     u246_20:
  4782  02DD                     i1l2275:
  4783  02DD  30FF               	movlw	255
  4784  02DE  052E               	andwf	___flmul@grs,w
  4785  02DF  00A8               	movwf	??___flmul
  4786  02E0  30FF               	movlw	255
  4787  02E1  052F               	andwf	___flmul@grs+1,w
  4788  02E2  00A9               	movwf	??___flmul+1
  4789  02E3  30FF               	movlw	255
  4790  02E4  0530               	andwf	___flmul@grs+2,w
  4791  02E5  00AA               	movwf	??___flmul+2
  4792  02E6  307F               	movlw	127
  4793  02E7  0531               	andwf	___flmul@grs+3,w
  4794  02E8  00AB               	movwf	??___flmul+3
  4795  02E9  082B               	movf	??___flmul+3,w
  4796  02EA  042A               	iorwf	??___flmul+2,w
  4797  02EB  0429               	iorwf	??___flmul+1,w
  4798  02EC  0428               	iorwf	??___flmul,w
  4799  02ED  1903               	skipnz
  4800  02EE  2AF0               	goto	u247_21
  4801  02EF  2AF1               	goto	u247_20
  4802  02F0                     u247_21:
  4803  02F0  2AF4               	goto	i1l703
  4804  02F1                     u247_20:
  4805  02F1                     i1l2277:
  4806  02F1  01B2               	clrf	___flmul@aexp
  4807  02F2  0AB2               	incf	___flmul@aexp,f
  4808  02F3  2AF9               	goto	i1l2281
  4809  02F4                     i1l703:
  4810  02F4  1C34               	btfss	___flmul@prod,0
  4811  02F5  2AF7               	goto	u248_21
  4812  02F6  2AF8               	goto	u248_20
  4813  02F7                     u248_21:
  4814  02F7  2AF9               	goto	i1l2281
  4815  02F8                     u248_20:
  4816  02F8  2AF1               	goto	i1l2277
  4817  02F9                     i1l2281:
  4818  02F9  0832               	movf	___flmul@aexp,w
  4819  02FA  1903               	btfsc	3,2
  4820  02FB  2AFD               	goto	u249_21
  4821  02FC  2AFE               	goto	u249_20
  4822  02FD                     u249_21:
  4823  02FD  2B2F               	goto	i1l2291
  4824  02FE                     u249_20:
  4825  02FE                     i1l2283:
  4826  02FE  3001               	movlw	1
  4827  02FF  07B4               	addwf	___flmul@prod,f
  4828  0300  3000               	movlw	0
  4829  0301  1803               	skipnc
  4830  0302  3001               	movlw	1
  4831  0303  07B5               	addwf	___flmul@prod+1,f
  4832  0304  3000               	movlw	0
  4833  0305  1803               	skipnc
  4834  0306  3001               	movlw	1
  4835  0307  07B6               	addwf	___flmul@prod+2,f
  4836  0308  3000               	movlw	0
  4837  0309  1803               	skipnc
  4838  030A  3001               	movlw	1
  4839  030B  07B7               	addwf	___flmul@prod+3,f
  4840  030C                     i1l2285:
  4841  030C  1C37               	btfss	___flmul@prod+3,0
  4842  030D  2B0F               	goto	u250_21
  4843  030E  2B10               	goto	u250_20
  4844  030F                     u250_21:
  4845  030F  2B2F               	goto	i1l2291
  4846  0310                     u250_20:
  4847  0310                     i1l2287:
  4848  0310  0834               	movf	___flmul@prod,w
  4849  0311  00A8               	movwf	??___flmul
  4850  0312  0835               	movf	___flmul@prod+1,w
  4851  0313  00A9               	movwf	??___flmul+1
  4852  0314  0836               	movf	___flmul@prod+2,w
  4853  0315  00AA               	movwf	??___flmul+2
  4854  0316  0837               	movf	___flmul@prod+3,w
  4855  0317  00AB               	movwf	??___flmul+3
  4856  0318  3001               	movlw	1
  4857  0319  00AC               	movwf	??___flmul+4
  4858  031A                     u251_25:
  4859  031A  0D2B               	rlf	??___flmul+3,w
  4860  031B  0CAB               	rrf	??___flmul+3,f
  4861  031C  0CAA               	rrf	??___flmul+2,f
  4862  031D  0CA9               	rrf	??___flmul+1,f
  4863  031E  0CA8               	rrf	??___flmul,f
  4864  031F                     u251_20:
  4865  031F  0BAC               	decfsz	??___flmul+4,f
  4866  0320  2B1A               	goto	u251_25
  4867  0321  082B               	movf	??___flmul+3,w
  4868  0322  00B7               	movwf	___flmul@prod+3
  4869  0323  082A               	movf	??___flmul+2,w
  4870  0324  00B6               	movwf	___flmul@prod+2
  4871  0325  0829               	movf	??___flmul+1,w
  4872  0326  00B5               	movwf	___flmul@prod+1
  4873  0327  0828               	movf	??___flmul,w
  4874  0328  00B4               	movwf	___flmul@prod
  4875  0329                     i1l2289:
  4876  0329  3001               	movlw	1
  4877  032A  07B8               	addwf	___flmul@temp,f
  4878  032B  1803               	skipnc
  4879  032C  0AB9               	incf	___flmul@temp+1,f
  4880  032D  3000               	movlw	0
  4881  032E  07B9               	addwf	___flmul@temp+1,f
  4882  032F                     i1l2291:
  4883  032F  0839               	movf	___flmul@temp+1,w
  4884  0330  3A80               	xorlw	128
  4885  0331  00FF               	movwf	btemp+1
  4886  0332  3080               	movlw	128
  4887  0333  027F               	subwf	btemp+1,w
  4888  0334  1D03               	skipz
  4889  0335  2B38               	goto	u252_25
  4890  0336  30FF               	movlw	255
  4891  0337  0238               	subwf	___flmul@temp,w
  4892  0338                     u252_25:
  4893  0338  1C03               	skipc
  4894  0339  2B3B               	goto	u252_21
  4895  033A  2B3C               	goto	u252_20
  4896  033B                     u252_21:
  4897  033B  2B47               	goto	i1l2295
  4898  033C                     u252_20:
  4899  033C                     i1l2293:
  4900  033C  307F               	movlw	127
  4901  033D  1283               	bcf	3,5	;RP0=0, select bank0
  4902  033E  1303               	bcf	3,6	;RP1=0, select bank0
  4903  033F  00B7               	movwf	___flmul@prod+3
  4904  0340  3080               	movlw	128
  4905  0341  00B6               	movwf	___flmul@prod+2
  4906  0342  3000               	movlw	0
  4907  0343  00B5               	movwf	___flmul@prod+1
  4908  0344  3000               	movlw	0
  4909  0345  00B4               	movwf	___flmul@prod
  4910  0346  2B7C               	goto	i1l709
  4911  0347                     i1l2295:
  4912  0347  1283               	bcf	3,5	;RP0=0, select bank0
  4913  0348  1303               	bcf	3,6	;RP1=0, select bank0
  4914  0349  0839               	movf	___flmul@temp+1,w
  4915  034A  3A80               	xorlw	128
  4916  034B  00FF               	movwf	btemp+1
  4917  034C  3080               	movlw	128
  4918  034D  027F               	subwf	btemp+1,w
  4919  034E  1D03               	skipz
  4920  034F  2B52               	goto	u253_25
  4921  0350  3001               	movlw	1
  4922  0351  0238               	subwf	___flmul@temp,w
  4923  0352                     u253_25:
  4924  0352  1803               	skipnc
  4925  0353  2B55               	goto	u253_21
  4926  0354  2B56               	goto	u253_20
  4927  0355                     u253_21:
  4928  0355  2B62               	goto	i1l2301
  4929  0356                     u253_20:
  4930  0356                     i1l2297:
  4931  0356  3000               	movlw	0
  4932  0357  1283               	bcf	3,5	;RP0=0, select bank0
  4933  0358  1303               	bcf	3,6	;RP1=0, select bank0
  4934  0359  00B7               	movwf	___flmul@prod+3
  4935  035A  3000               	movlw	0
  4936  035B  00B6               	movwf	___flmul@prod+2
  4937  035C  3000               	movlw	0
  4938  035D  00B5               	movwf	___flmul@prod+1
  4939  035E  3000               	movlw	0
  4940  035F  00B4               	movwf	___flmul@prod
  4941  0360                     i1l2299:
  4942  0360  01AD               	clrf	___flmul@sign
  4943  0361  2B7C               	goto	i1l709
  4944  0362                     i1l2301:
  4945  0362  1283               	bcf	3,5	;RP0=0, select bank0
  4946  0363  1303               	bcf	3,6	;RP1=0, select bank0
  4947  0364  0838               	movf	___flmul@temp,w
  4948  0365  00A8               	movwf	??___flmul
  4949  0366  0828               	movf	??___flmul,w
  4950  0367  00B3               	movwf	___flmul@bexp
  4951  0368  30FF               	movlw	255
  4952  0369  05B4               	andwf	___flmul@prod,f
  4953  036A  30FF               	movlw	255
  4954  036B  05B5               	andwf	___flmul@prod+1,f
  4955  036C  307F               	movlw	127
  4956  036D  05B6               	andwf	___flmul@prod+2,f
  4957  036E  3000               	movlw	0
  4958  036F  05B7               	andwf	___flmul@prod+3,f
  4959  0370                     i1l2303:
  4960  0370  1C33               	btfss	___flmul@bexp,0
  4961  0371  2B73               	goto	u254_21
  4962  0372  2B74               	goto	u254_20
  4963  0373                     u254_21:
  4964  0373  2B75               	goto	i1l2307
  4965  0374                     u254_20:
  4966  0374                     i1l2305:
  4967  0374  17B6               	bsf	___flmul@prod+2,7
  4968  0375                     i1l2307:
  4969  0375  0833               	movf	___flmul@bexp,w
  4970  0376  00A8               	movwf	??___flmul
  4971  0377  1003               	clrc
  4972  0378  0C28               	rrf	??___flmul,w
  4973  0379  00A9               	movwf	??___flmul+1
  4974  037A  0829               	movf	??___flmul+1,w
  4975  037B  00B7               	movwf	___flmul@prod+3
  4976  037C                     i1l709:
  4977  037C  082D               	movf	___flmul@sign,w
  4978  037D  00A8               	movwf	??___flmul
  4979  037E  0828               	movf	??___flmul,w
  4980  037F  04B7               	iorwf	___flmul@prod+3,f
  4981  0380                     i1l2309:
  4982  0380  0837               	movf	___flmul@prod+3,w
  4983  0381  00A3               	movwf	?___flmul+3
  4984  0382  0836               	movf	___flmul@prod+2,w
  4985  0383  00A2               	movwf	?___flmul+2
  4986  0384  0835               	movf	___flmul@prod+1,w
  4987  0385  00A1               	movwf	?___flmul+1
  4988  0386  0834               	movf	___flmul@prod,w
  4989  0387  00A0               	movwf	?___flmul
  4990  0388                     i1l697:
  4991  0388  0008               	return
  4992  0389                     __end_of___flmul:
  4993                           
  4994                           	psect	text23
  4995  0CC3                     __ptext23:	
  4996 ;; *************** function __Umul8_16 *****************
  4997 ;; Defined at:
  4998 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;  multiplier      1    wreg     unsigned char 
  5001 ;;  multiplicand    1    0[COMMON] unsigned char 
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;  multiplier      1    8[COMMON] unsigned char 
  5004 ;;  word_mpld       2    6[COMMON] unsigned int 
  5005 ;;  product         2    4[COMMON] unsigned int 
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  2    0[COMMON] unsigned int 
  5008 ;; Registers used:
  5009 ;;		wreg, status,2, status,0
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5015 ;;      Params:         2       0       0       0       0
  5016 ;;      Locals:         5       0       0       0       0
  5017 ;;      Temps:          2       0       0       0       0
  5018 ;;      Totals:         9       0       0       0       0
  5019 ;;Total ram usage:        9 bytes
  5020 ;; Hardware stack levels used:    1
  5021 ;; This function calls:
  5022 ;;		Nothing
  5023 ;; This function is called by:
  5024 ;;		___flmul
  5025 ;; This function uses a non-reentrant model
  5026 ;;
  5027                           
  5028                           
  5029                           ;psect for function __Umul8_16
  5030  0CC3                     __Umul8_16:
  5031                           
  5032                           ;incstack = 0
  5033                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5034                           ;__Umul8_16@multiplier stored from wreg
  5035  0CC3  00F8               	movwf	__Umul8_16@multiplier
  5036  0CC4                     i1l1841:
  5037  0CC4  01F4               	clrf	__Umul8_16@product
  5038  0CC5  01F5               	clrf	__Umul8_16@product+1
  5039  0CC6                     i1l1843:
  5040  0CC6  0870               	movf	__Umul8_16@multiplicand,w
  5041  0CC7  00F2               	movwf	??__Umul8_16
  5042  0CC8  01F3               	clrf	??__Umul8_16+1
  5043  0CC9  0872               	movf	??__Umul8_16,w
  5044  0CCA  00F6               	movwf	__Umul8_16@word_mpld
  5045  0CCB  0873               	movf	??__Umul8_16+1,w
  5046  0CCC  00F7               	movwf	__Umul8_16@word_mpld+1
  5047  0CCD                     i1l1845:
  5048  0CCD  1C78               	btfss	__Umul8_16@multiplier,0
  5049  0CCE  2CD0               	goto	u172_21
  5050  0CCF  2CD1               	goto	u172_20
  5051  0CD0                     u172_21:
  5052  0CD0  2CD7               	goto	i1l716
  5053  0CD1                     u172_20:
  5054  0CD1                     i1l1847:
  5055  0CD1  0876               	movf	__Umul8_16@word_mpld,w
  5056  0CD2  07F4               	addwf	__Umul8_16@product,f
  5057  0CD3  1803               	skipnc
  5058  0CD4  0AF5               	incf	__Umul8_16@product+1,f
  5059  0CD5  0877               	movf	__Umul8_16@word_mpld+1,w
  5060  0CD6  07F5               	addwf	__Umul8_16@product+1,f
  5061  0CD7                     i1l716:
  5062  0CD7  3001               	movlw	1
  5063  0CD8                     u173_25:
  5064  0CD8  1003               	clrc
  5065  0CD9  0DF6               	rlf	__Umul8_16@word_mpld,f
  5066  0CDA  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5067  0CDB  3EFF               	addlw	-1
  5068  0CDC  1D03               	skipz
  5069  0CDD  2CD8               	goto	u173_25
  5070  0CDE  1003               	clrc
  5071  0CDF  0CF8               	rrf	__Umul8_16@multiplier,f
  5072  0CE0                     i1l1849:
  5073  0CE0  0878               	movf	__Umul8_16@multiplier,w
  5074  0CE1  1D03               	btfss	3,2
  5075  0CE2  2CE4               	goto	u174_21
  5076  0CE3  2CE5               	goto	u174_20
  5077  0CE4                     u174_21:
  5078  0CE4  2CCD               	goto	i1l1845
  5079  0CE5                     u174_20:
  5080  0CE5                     i1l1851:
  5081  0CE5  0875               	movf	__Umul8_16@product+1,w
  5082  0CE6  00F1               	movwf	?__Umul8_16+1
  5083  0CE7  0874               	movf	__Umul8_16@product,w
  5084  0CE8  00F0               	movwf	?__Umul8_16
  5085  0CE9                     i1l718:
  5086  0CE9  0008               	return
  5087  0CEA                     __end_of__Umul8_16:
  5088                           
  5089                           	psect	text24
  5090  0389                     __ptext24:	
  5091 ;; *************** function ___fldiv *****************
  5092 ;; Defined at:
  5093 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  a               4   26[BANK0 ] unsigned int 
  5096 ;;  b               4   30[BANK0 ] unsigned int 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;  grs             4   46[BANK0 ] unsigned long 
  5099 ;;  rem             4   39[BANK0 ] unsigned long 
  5100 ;;  new_exp         2   44[BANK0 ] int 
  5101 ;;  aexp            1   51[BANK0 ] unsigned char 
  5102 ;;  bexp            1   50[BANK0 ] unsigned char 
  5103 ;;  sign            1   43[BANK0 ] unsigned char 
  5104 ;; Return value:  Size  Location     Type
  5105 ;;                  4   26[BANK0 ] unsigned char 
  5106 ;; Registers used:
  5107 ;;		wreg, status,2, status,0, btemp+1
  5108 ;; Tracked objects:
  5109 ;;		On entry : 0/0
  5110 ;;		On exit  : 0/0
  5111 ;;		Unchanged: 0/0
  5112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5113 ;;      Params:         0       8       0       0       0
  5114 ;;      Locals:         0      13       0       0       0
  5115 ;;      Temps:          0       5       0       0       0
  5116 ;;      Totals:         0      26       0       0       0
  5117 ;;Total ram usage:       26 bytes
  5118 ;; Hardware stack levels used:    1
  5119 ;; This function calls:
  5120 ;;		Nothing
  5121 ;; This function is called by:
  5122 ;;		_isr
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           
  5127                           ;psect for function ___fldiv
  5128  0389                     ___fldiv:
  5129  0389                     i1l2031:	
  5130                           ;incstack = 0
  5131                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  5132                           
  5133  0389  1283               	bcf	3,5	;RP0=0, select bank0
  5134  038A  1303               	bcf	3,6	;RP1=0, select bank0
  5135  038B  0841               	movf	___fldiv@b+3,w
  5136  038C  3980               	andlw	128
  5137  038D  00C2               	movwf	??___fldiv
  5138  038E  0842               	movf	??___fldiv,w
  5139  038F  00CB               	movwf	___fldiv@sign
  5140  0390                     i1l2033:
  5141  0390  0841               	movf	___fldiv@b+3,w
  5142  0391  00C2               	movwf	??___fldiv
  5143  0392  0742               	addwf	??___fldiv,w
  5144  0393  00C3               	movwf	??___fldiv+1
  5145  0394  0843               	movf	??___fldiv+1,w
  5146  0395  00D2               	movwf	___fldiv@bexp
  5147  0396                     i1l2035:
  5148  0396  1FC0               	btfss	___fldiv@b+2,7
  5149  0397  2B99               	goto	u189_21
  5150  0398  2B9A               	goto	u189_20
  5151  0399                     u189_21:
  5152  0399  2B9B               	goto	i1l2039
  5153  039A                     u189_20:
  5154  039A                     i1l2037:
  5155  039A  1452               	bsf	___fldiv@bexp,0
  5156  039B                     i1l2039:
  5157  039B  0852               	movf	___fldiv@bexp,w
  5158  039C  1903               	btfsc	3,2
  5159  039D  2B9F               	goto	u190_21
  5160  039E  2BA0               	goto	u190_20
  5161  039F                     u190_21:
  5162  039F  2BB0               	goto	i1l2049
  5163  03A0                     u190_20:
  5164  03A0                     i1l2041:
  5165  03A0  0A52               	incf	___fldiv@bexp,w
  5166  03A1  1D03               	btfss	3,2
  5167  03A2  2BA4               	goto	u191_21
  5168  03A3  2BA5               	goto	u191_20
  5169  03A4                     u191_21:
  5170  03A4  2BAD               	goto	i1l2045
  5171  03A5                     u191_20:
  5172  03A5                     i1l2043:
  5173  03A5  3000               	movlw	0
  5174  03A6  00C1               	movwf	___fldiv@b+3
  5175  03A7  3000               	movlw	0
  5176  03A8  00C0               	movwf	___fldiv@b+2
  5177  03A9  3000               	movlw	0
  5178  03AA  00BF               	movwf	___fldiv@b+1
  5179  03AB  3000               	movlw	0
  5180  03AC  00BE               	movwf	___fldiv@b
  5181  03AD                     i1l2045:
  5182  03AD  17C0               	bsf	___fldiv@b+2,7
  5183  03AE                     i1l2047:
  5184  03AE  01C1               	clrf	___fldiv@b+3
  5185  03AF  2BB8               	goto	i1l2051
  5186  03B0                     i1l2049:
  5187  03B0  3000               	movlw	0
  5188  03B1  00C1               	movwf	___fldiv@b+3
  5189  03B2  3000               	movlw	0
  5190  03B3  00C0               	movwf	___fldiv@b+2
  5191  03B4  3000               	movlw	0
  5192  03B5  00BF               	movwf	___fldiv@b+1
  5193  03B6  3000               	movlw	0
  5194  03B7  00BE               	movwf	___fldiv@b
  5195  03B8                     i1l2051:
  5196  03B8  083D               	movf	___fldiv@a+3,w
  5197  03B9  3980               	andlw	128
  5198  03BA  00C2               	movwf	??___fldiv
  5199  03BB  0842               	movf	??___fldiv,w
  5200  03BC  06CB               	xorwf	___fldiv@sign,f
  5201  03BD                     i1l2053:
  5202  03BD  083D               	movf	___fldiv@a+3,w
  5203  03BE  00C2               	movwf	??___fldiv
  5204  03BF  0742               	addwf	??___fldiv,w
  5205  03C0  00C3               	movwf	??___fldiv+1
  5206  03C1  0843               	movf	??___fldiv+1,w
  5207  03C2  00D3               	movwf	___fldiv@aexp
  5208  03C3                     i1l2055:
  5209  03C3  1FBC               	btfss	___fldiv@a+2,7
  5210  03C4  2BC6               	goto	u192_21
  5211  03C5  2BC7               	goto	u192_20
  5212  03C6                     u192_21:
  5213  03C6  2BC8               	goto	i1l2059
  5214  03C7                     u192_20:
  5215  03C7                     i1l2057:
  5216  03C7  1453               	bsf	___fldiv@aexp,0
  5217  03C8                     i1l2059:
  5218  03C8  0853               	movf	___fldiv@aexp,w
  5219  03C9  1903               	btfsc	3,2
  5220  03CA  2BCC               	goto	u193_21
  5221  03CB  2BCD               	goto	u193_20
  5222  03CC                     u193_21:
  5223  03CC  2BDD               	goto	i1l2069
  5224  03CD                     u193_20:
  5225  03CD                     i1l2061:
  5226  03CD  0A53               	incf	___fldiv@aexp,w
  5227  03CE  1D03               	btfss	3,2
  5228  03CF  2BD1               	goto	u194_21
  5229  03D0  2BD2               	goto	u194_20
  5230  03D1                     u194_21:
  5231  03D1  2BDA               	goto	i1l2065
  5232  03D2                     u194_20:
  5233  03D2                     i1l2063:
  5234  03D2  3000               	movlw	0
  5235  03D3  00BD               	movwf	___fldiv@a+3
  5236  03D4  3000               	movlw	0
  5237  03D5  00BC               	movwf	___fldiv@a+2
  5238  03D6  3000               	movlw	0
  5239  03D7  00BB               	movwf	___fldiv@a+1
  5240  03D8  3000               	movlw	0
  5241  03D9  00BA               	movwf	___fldiv@a
  5242  03DA                     i1l2065:
  5243  03DA  17BC               	bsf	___fldiv@a+2,7
  5244  03DB                     i1l2067:
  5245  03DB  01BD               	clrf	___fldiv@a+3
  5246  03DC  2BE5               	goto	i1l657
  5247  03DD                     i1l2069:
  5248  03DD  3000               	movlw	0
  5249  03DE  00BD               	movwf	___fldiv@a+3
  5250  03DF  3000               	movlw	0
  5251  03E0  00BC               	movwf	___fldiv@a+2
  5252  03E1  3000               	movlw	0
  5253  03E2  00BB               	movwf	___fldiv@a+1
  5254  03E3  3000               	movlw	0
  5255  03E4  00BA               	movwf	___fldiv@a
  5256  03E5                     i1l657:
  5257  03E5  083D               	movf	___fldiv@a+3,w
  5258  03E6  043C               	iorwf	___fldiv@a+2,w
  5259  03E7  043B               	iorwf	___fldiv@a+1,w
  5260  03E8  043A               	iorwf	___fldiv@a,w
  5261  03E9  1D03               	skipz
  5262  03EA  2BEC               	goto	u195_21
  5263  03EB  2BED               	goto	u195_20
  5264  03EC                     u195_21:
  5265  03EC  2C06               	goto	i1l2079
  5266  03ED                     u195_20:
  5267  03ED                     i1l2071:
  5268  03ED  3000               	movlw	0
  5269  03EE  00C1               	movwf	___fldiv@b+3
  5270  03EF  3000               	movlw	0
  5271  03F0  00C0               	movwf	___fldiv@b+2
  5272  03F1  3000               	movlw	0
  5273  03F2  00BF               	movwf	___fldiv@b+1
  5274  03F3  3000               	movlw	0
  5275  03F4  00BE               	movwf	___fldiv@b
  5276  03F5  3080               	movlw	128
  5277  03F6  04C0               	iorwf	___fldiv@b+2,f
  5278  03F7  307F               	movlw	127
  5279  03F8  04C1               	iorwf	___fldiv@b+3,f
  5280  03F9                     i1l2073:
  5281  03F9  084B               	movf	___fldiv@sign,w
  5282  03FA  00C2               	movwf	??___fldiv
  5283  03FB  0842               	movf	??___fldiv,w
  5284  03FC  04C1               	iorwf	___fldiv@b+3,f
  5285  03FD                     i1l2075:
  5286  03FD  0841               	movf	___fldiv@b+3,w
  5287  03FE  00BD               	movwf	?___fldiv+3
  5288  03FF  0840               	movf	___fldiv@b+2,w
  5289  0400  00BC               	movwf	?___fldiv+2
  5290  0401  083F               	movf	___fldiv@b+1,w
  5291  0402  00BB               	movwf	?___fldiv+1
  5292  0403  083E               	movf	___fldiv@b,w
  5293  0404  00BA               	movwf	?___fldiv
  5294  0405  2D65               	goto	i1l659
  5295  0406                     i1l2079:
  5296  0406  0852               	movf	___fldiv@bexp,w
  5297  0407  1D03               	btfss	3,2
  5298  0408  2C0A               	goto	u196_21
  5299  0409  2C0B               	goto	u196_20
  5300  040A                     u196_21:
  5301  040A  2C14               	goto	i1l2085
  5302  040B                     u196_20:
  5303  040B                     i1l2081:
  5304  040B  3000               	movlw	0
  5305  040C  00BD               	movwf	?___fldiv+3
  5306  040D  3000               	movlw	0
  5307  040E  00BC               	movwf	?___fldiv+2
  5308  040F  3000               	movlw	0
  5309  0410  00BB               	movwf	?___fldiv+1
  5310  0411  3000               	movlw	0
  5311  0412  00BA               	movwf	?___fldiv
  5312  0413  2D65               	goto	i1l659
  5313  0414                     i1l2085:
  5314  0414  0852               	movf	___fldiv@bexp,w
  5315  0415  00C2               	movwf	??___fldiv
  5316  0416  01C3               	clrf	??___fldiv+1
  5317  0417  0843               	movf	??___fldiv+1,w
  5318  0418  00C5               	movwf	??___fldiv+3
  5319  0419  0853               	movf	___fldiv@aexp,w
  5320  041A  0242               	subwf	??___fldiv,w
  5321  041B  00C4               	movwf	??___fldiv+2
  5322  041C  1C03               	skipc
  5323  041D  03C5               	decf	??___fldiv+3,f
  5324  041E  0844               	movf	??___fldiv+2,w
  5325  041F  3E7F               	addlw	127
  5326  0420  00CC               	movwf	___fldiv@new_exp
  5327  0421  0845               	movf	??___fldiv+3,w
  5328  0422  1803               	skipnc
  5329  0423  3E01               	addlw	1
  5330  0424  3E00               	addlw	0
  5331  0425  00CD               	movwf	___fldiv@new_exp+1
  5332  0426                     i1l2087:
  5333  0426  0841               	movf	___fldiv@b+3,w
  5334  0427  00CA               	movwf	___fldiv@rem+3
  5335  0428  0840               	movf	___fldiv@b+2,w
  5336  0429  00C9               	movwf	___fldiv@rem+2
  5337  042A  083F               	movf	___fldiv@b+1,w
  5338  042B  00C8               	movwf	___fldiv@rem+1
  5339  042C  083E               	movf	___fldiv@b,w
  5340  042D  00C7               	movwf	___fldiv@rem
  5341  042E                     i1l2089:
  5342  042E  3000               	movlw	0
  5343  042F  00C1               	movwf	___fldiv@b+3
  5344  0430  3000               	movlw	0
  5345  0431  00C0               	movwf	___fldiv@b+2
  5346  0432  3000               	movlw	0
  5347  0433  00BF               	movwf	___fldiv@b+1
  5348  0434  3000               	movlw	0
  5349  0435  00BE               	movwf	___fldiv@b
  5350  0436                     i1l2091:
  5351  0436  3000               	movlw	0
  5352  0437  00D1               	movwf	___fldiv@grs+3
  5353  0438  3000               	movlw	0
  5354  0439  00D0               	movwf	___fldiv@grs+2
  5355  043A  3000               	movlw	0
  5356  043B  00CF               	movwf	___fldiv@grs+1
  5357  043C  3000               	movlw	0
  5358  043D  00CE               	movwf	___fldiv@grs
  5359  043E                     i1l2093:
  5360  043E  01D3               	clrf	___fldiv@aexp
  5361  043F  2C8A               	goto	i1l2113
  5362  0440                     i1l2095:
  5363  0440  0853               	movf	___fldiv@aexp,w
  5364  0441  1903               	btfsc	3,2
  5365  0442  2C44               	goto	u197_21
  5366  0443  2C45               	goto	u197_20
  5367  0444                     u197_21:
  5368  0444  2C65               	goto	i1l2105
  5369  0445                     u197_20:
  5370  0445                     i1l2097:
  5371  0445  3001               	movlw	1
  5372  0446  00C2               	movwf	??___fldiv
  5373  0447                     u198_25:
  5374  0447  1003               	clrc
  5375  0448  0DC7               	rlf	___fldiv@rem,f
  5376  0449  0DC8               	rlf	___fldiv@rem+1,f
  5377  044A  0DC9               	rlf	___fldiv@rem+2,f
  5378  044B  0DCA               	rlf	___fldiv@rem+3,f
  5379  044C  0BC2               	decfsz	??___fldiv,f
  5380  044D  2C47               	goto	u198_25
  5381  044E  3001               	movlw	1
  5382  044F  00C2               	movwf	??___fldiv
  5383  0450                     u199_25:
  5384  0450  1003               	clrc
  5385  0451  0DBE               	rlf	___fldiv@b,f
  5386  0452  0DBF               	rlf	___fldiv@b+1,f
  5387  0453  0DC0               	rlf	___fldiv@b+2,f
  5388  0454  0DC1               	rlf	___fldiv@b+3,f
  5389  0455  0BC2               	decfsz	??___fldiv,f
  5390  0456  2C50               	goto	u199_25
  5391  0457                     i1l2099:
  5392  0457  1FD1               	btfss	___fldiv@grs+3,7
  5393  0458  2C5A               	goto	u200_21
  5394  0459  2C5B               	goto	u200_20
  5395  045A                     u200_21:
  5396  045A  2C5C               	goto	i1l2103
  5397  045B                     u200_20:
  5398  045B                     i1l2101:
  5399  045B  143E               	bsf	___fldiv@b,0
  5400  045C                     i1l2103:
  5401  045C  3001               	movlw	1
  5402  045D  00C2               	movwf	??___fldiv
  5403  045E                     u201_25:
  5404  045E  1003               	clrc
  5405  045F  0DCE               	rlf	___fldiv@grs,f
  5406  0460  0DCF               	rlf	___fldiv@grs+1,f
  5407  0461  0DD0               	rlf	___fldiv@grs+2,f
  5408  0462  0DD1               	rlf	___fldiv@grs+3,f
  5409  0463  0BC2               	decfsz	??___fldiv,f
  5410  0464  2C5E               	goto	u201_25
  5411  0465                     i1l2105:
  5412  0465  083D               	movf	___fldiv@a+3,w
  5413  0466  024A               	subwf	___fldiv@rem+3,w
  5414  0467  1D03               	skipz
  5415  0468  2C73               	goto	u202_25
  5416  0469  083C               	movf	___fldiv@a+2,w
  5417  046A  0249               	subwf	___fldiv@rem+2,w
  5418  046B  1D03               	skipz
  5419  046C  2C73               	goto	u202_25
  5420  046D  083B               	movf	___fldiv@a+1,w
  5421  046E  0248               	subwf	___fldiv@rem+1,w
  5422  046F  1D03               	skipz
  5423  0470  2C73               	goto	u202_25
  5424  0471  083A               	movf	___fldiv@a,w
  5425  0472  0247               	subwf	___fldiv@rem,w
  5426  0473                     u202_25:
  5427  0473  1C03               	skipc
  5428  0474  2C76               	goto	u202_21
  5429  0475  2C77               	goto	u202_20
  5430  0476                     u202_21:
  5431  0476  2C86               	goto	i1l2111
  5432  0477                     u202_20:
  5433  0477                     i1l2107:
  5434  0477  1751               	bsf	___fldiv@grs+3,6
  5435  0478                     i1l2109:
  5436  0478  083A               	movf	___fldiv@a,w
  5437  0479  02C7               	subwf	___fldiv@rem,f
  5438  047A  083B               	movf	___fldiv@a+1,w
  5439  047B  1C03               	skipc
  5440  047C  0F3B               	incfsz	___fldiv@a+1,w
  5441  047D  02C8               	subwf	___fldiv@rem+1,f
  5442  047E  083C               	movf	___fldiv@a+2,w
  5443  047F  1C03               	skipc
  5444  0480  0F3C               	incfsz	___fldiv@a+2,w
  5445  0481  02C9               	subwf	___fldiv@rem+2,f
  5446  0482  083D               	movf	___fldiv@a+3,w
  5447  0483  1C03               	skipc
  5448  0484  0F3D               	incfsz	___fldiv@a+3,w
  5449  0485  02CA               	subwf	___fldiv@rem+3,f
  5450  0486                     i1l2111:
  5451  0486  3001               	movlw	1
  5452  0487  00C2               	movwf	??___fldiv
  5453  0488  0842               	movf	??___fldiv,w
  5454  0489  07D3               	addwf	___fldiv@aexp,f
  5455  048A                     i1l2113:
  5456  048A  301A               	movlw	26
  5457  048B  0253               	subwf	___fldiv@aexp,w
  5458  048C  1C03               	skipc
  5459  048D  2C8F               	goto	u203_21
  5460  048E  2C90               	goto	u203_20
  5461  048F                     u203_21:
  5462  048F  2C40               	goto	i1l2095
  5463  0490                     u203_20:
  5464  0490                     i1l2115:
  5465  0490  084A               	movf	___fldiv@rem+3,w
  5466  0491  0449               	iorwf	___fldiv@rem+2,w
  5467  0492  0448               	iorwf	___fldiv@rem+1,w
  5468  0493  0447               	iorwf	___fldiv@rem,w
  5469  0494  1903               	skipnz
  5470  0495  2C97               	goto	u204_21
  5471  0496  2C98               	goto	u204_20
  5472  0497                     u204_21:
  5473  0497  2CB7               	goto	i1l2129
  5474  0498                     u204_20:
  5475  0498                     i1l2117:
  5476  0498  144E               	bsf	___fldiv@grs,0
  5477  0499  2CB7               	goto	i1l2129
  5478  049A                     i1l2119:
  5479  049A  3001               	movlw	1
  5480  049B  00C2               	movwf	??___fldiv
  5481  049C                     u205_25:
  5482  049C  1003               	clrc
  5483  049D  0DBE               	rlf	___fldiv@b,f
  5484  049E  0DBF               	rlf	___fldiv@b+1,f
  5485  049F  0DC0               	rlf	___fldiv@b+2,f
  5486  04A0  0DC1               	rlf	___fldiv@b+3,f
  5487  04A1  0BC2               	decfsz	??___fldiv,f
  5488  04A2  2C9C               	goto	u205_25
  5489  04A3                     i1l2121:
  5490  04A3  1FD1               	btfss	___fldiv@grs+3,7
  5491  04A4  2CA6               	goto	u206_21
  5492  04A5  2CA7               	goto	u206_20
  5493  04A6                     u206_21:
  5494  04A6  2CA8               	goto	i1l2125
  5495  04A7                     u206_20:
  5496  04A7                     i1l2123:
  5497  04A7  143E               	bsf	___fldiv@b,0
  5498  04A8                     i1l2125:
  5499  04A8  3001               	movlw	1
  5500  04A9  00C2               	movwf	??___fldiv
  5501  04AA                     u207_25:
  5502  04AA  1003               	clrc
  5503  04AB  0DCE               	rlf	___fldiv@grs,f
  5504  04AC  0DCF               	rlf	___fldiv@grs+1,f
  5505  04AD  0DD0               	rlf	___fldiv@grs+2,f
  5506  04AE  0DD1               	rlf	___fldiv@grs+3,f
  5507  04AF  0BC2               	decfsz	??___fldiv,f
  5508  04B0  2CAA               	goto	u207_25
  5509  04B1                     i1l2127:
  5510  04B1  30FF               	movlw	255
  5511  04B2  07CC               	addwf	___fldiv@new_exp,f
  5512  04B3  1803               	skipnc
  5513  04B4  0ACD               	incf	___fldiv@new_exp+1,f
  5514  04B5  30FF               	movlw	255
  5515  04B6  07CD               	addwf	___fldiv@new_exp+1,f
  5516  04B7                     i1l2129:
  5517  04B7  1FC0               	btfss	___fldiv@b+2,7
  5518  04B8  2CBA               	goto	u208_21
  5519  04B9  2CBB               	goto	u208_20
  5520  04BA                     u208_21:
  5521  04BA  2C9A               	goto	i1l2119
  5522  04BB                     u208_20:
  5523  04BB                     i1l2131:
  5524  04BB  01D3               	clrf	___fldiv@aexp
  5525  04BC                     i1l2133:
  5526  04BC  1FD1               	btfss	___fldiv@grs+3,7
  5527  04BD  2CBF               	goto	u209_21
  5528  04BE  2CC0               	goto	u209_20
  5529  04BF                     u209_21:
  5530  04BF  2CDC               	goto	i1l2141
  5531  04C0                     u209_20:
  5532  04C0                     i1l2135:
  5533  04C0  30FF               	movlw	255
  5534  04C1  054E               	andwf	___fldiv@grs,w
  5535  04C2  00C2               	movwf	??___fldiv
  5536  04C3  30FF               	movlw	255
  5537  04C4  054F               	andwf	___fldiv@grs+1,w
  5538  04C5  00C3               	movwf	??___fldiv+1
  5539  04C6  30FF               	movlw	255
  5540  04C7  0550               	andwf	___fldiv@grs+2,w
  5541  04C8  00C4               	movwf	??___fldiv+2
  5542  04C9  307F               	movlw	127
  5543  04CA  0551               	andwf	___fldiv@grs+3,w
  5544  04CB  00C5               	movwf	??___fldiv+3
  5545  04CC  0845               	movf	??___fldiv+3,w
  5546  04CD  0444               	iorwf	??___fldiv+2,w
  5547  04CE  0443               	iorwf	??___fldiv+1,w
  5548  04CF  0442               	iorwf	??___fldiv,w
  5549  04D0  1903               	skipnz
  5550  04D1  2CD3               	goto	u210_21
  5551  04D2  2CD4               	goto	u210_20
  5552  04D3                     u210_21:
  5553  04D3  2CD7               	goto	i1l673
  5554  04D4                     u210_20:
  5555  04D4                     i1l2137:
  5556  04D4  01D3               	clrf	___fldiv@aexp
  5557  04D5  0AD3               	incf	___fldiv@aexp,f
  5558  04D6  2CDC               	goto	i1l2141
  5559  04D7                     i1l673:
  5560  04D7  1C3E               	btfss	___fldiv@b,0
  5561  04D8  2CDA               	goto	u211_21
  5562  04D9  2CDB               	goto	u211_20
  5563  04DA                     u211_21:
  5564  04DA  2CDC               	goto	i1l2141
  5565  04DB                     u211_20:
  5566  04DB  2CD4               	goto	i1l2137
  5567  04DC                     i1l2141:
  5568  04DC  0853               	movf	___fldiv@aexp,w
  5569  04DD  1903               	btfsc	3,2
  5570  04DE  2CE0               	goto	u212_21
  5571  04DF  2CE1               	goto	u212_20
  5572  04E0                     u212_21:
  5573  04E0  2D12               	goto	i1l2151
  5574  04E1                     u212_20:
  5575  04E1                     i1l2143:
  5576  04E1  3001               	movlw	1
  5577  04E2  07BE               	addwf	___fldiv@b,f
  5578  04E3  3000               	movlw	0
  5579  04E4  1803               	skipnc
  5580  04E5  3001               	movlw	1
  5581  04E6  07BF               	addwf	___fldiv@b+1,f
  5582  04E7  3000               	movlw	0
  5583  04E8  1803               	skipnc
  5584  04E9  3001               	movlw	1
  5585  04EA  07C0               	addwf	___fldiv@b+2,f
  5586  04EB  3000               	movlw	0
  5587  04EC  1803               	skipnc
  5588  04ED  3001               	movlw	1
  5589  04EE  07C1               	addwf	___fldiv@b+3,f
  5590  04EF                     i1l2145:
  5591  04EF  1C41               	btfss	___fldiv@b+3,0
  5592  04F0  2CF2               	goto	u213_21
  5593  04F1  2CF3               	goto	u213_20
  5594  04F2                     u213_21:
  5595  04F2  2D12               	goto	i1l2151
  5596  04F3                     u213_20:
  5597  04F3                     i1l2147:
  5598  04F3  083E               	movf	___fldiv@b,w
  5599  04F4  00C2               	movwf	??___fldiv
  5600  04F5  083F               	movf	___fldiv@b+1,w
  5601  04F6  00C3               	movwf	??___fldiv+1
  5602  04F7  0840               	movf	___fldiv@b+2,w
  5603  04F8  00C4               	movwf	??___fldiv+2
  5604  04F9  0841               	movf	___fldiv@b+3,w
  5605  04FA  00C5               	movwf	??___fldiv+3
  5606  04FB  3001               	movlw	1
  5607  04FC  00C6               	movwf	??___fldiv+4
  5608  04FD                     u214_25:
  5609  04FD  0D45               	rlf	??___fldiv+3,w
  5610  04FE  0CC5               	rrf	??___fldiv+3,f
  5611  04FF  0CC4               	rrf	??___fldiv+2,f
  5612  0500  0CC3               	rrf	??___fldiv+1,f
  5613  0501  0CC2               	rrf	??___fldiv,f
  5614  0502                     u214_20:
  5615  0502  0BC6               	decfsz	??___fldiv+4,f
  5616  0503  2CFD               	goto	u214_25
  5617  0504  0845               	movf	??___fldiv+3,w
  5618  0505  00C1               	movwf	___fldiv@b+3
  5619  0506  0844               	movf	??___fldiv+2,w
  5620  0507  00C0               	movwf	___fldiv@b+2
  5621  0508  0843               	movf	??___fldiv+1,w
  5622  0509  00BF               	movwf	___fldiv@b+1
  5623  050A  0842               	movf	??___fldiv,w
  5624  050B  00BE               	movwf	___fldiv@b
  5625  050C                     i1l2149:
  5626  050C  3001               	movlw	1
  5627  050D  07CC               	addwf	___fldiv@new_exp,f
  5628  050E  1803               	skipnc
  5629  050F  0ACD               	incf	___fldiv@new_exp+1,f
  5630  0510  3000               	movlw	0
  5631  0511  07CD               	addwf	___fldiv@new_exp+1,f
  5632  0512                     i1l2151:
  5633  0512  084D               	movf	___fldiv@new_exp+1,w
  5634  0513  3A80               	xorlw	128
  5635  0514  00FF               	movwf	btemp+1
  5636  0515  3080               	movlw	128
  5637  0516  027F               	subwf	btemp+1,w
  5638  0517  1D03               	skipz
  5639  0518  2D1B               	goto	u215_25
  5640  0519  30FF               	movlw	255
  5641  051A  024C               	subwf	___fldiv@new_exp,w
  5642  051B                     u215_25:
  5643  051B  1C03               	skipc
  5644  051C  2D1E               	goto	u215_21
  5645  051D  2D1F               	goto	u215_20
  5646  051E                     u215_21:
  5647  051E  2D2D               	goto	i1l2155
  5648  051F                     u215_20:
  5649  051F                     i1l2153:
  5650  051F  30FF               	movlw	255
  5651  0520  1283               	bcf	3,5	;RP0=0, select bank0
  5652  0521  1303               	bcf	3,6	;RP1=0, select bank0
  5653  0522  00CC               	movwf	___fldiv@new_exp
  5654  0523  3000               	movlw	0
  5655  0524  00CD               	movwf	___fldiv@new_exp+1
  5656  0525  3000               	movlw	0
  5657  0526  00C1               	movwf	___fldiv@b+3
  5658  0527  3000               	movlw	0
  5659  0528  00C0               	movwf	___fldiv@b+2
  5660  0529  3000               	movlw	0
  5661  052A  00BF               	movwf	___fldiv@b+1
  5662  052B  3000               	movlw	0
  5663  052C  00BE               	movwf	___fldiv@b
  5664  052D                     i1l2155:
  5665  052D  1283               	bcf	3,5	;RP0=0, select bank0
  5666  052E  1303               	bcf	3,6	;RP1=0, select bank0
  5667  052F  084D               	movf	___fldiv@new_exp+1,w
  5668  0530  3A80               	xorlw	128
  5669  0531  00FF               	movwf	btemp+1
  5670  0532  3080               	movlw	128
  5671  0533  027F               	subwf	btemp+1,w
  5672  0534  1D03               	skipz
  5673  0535  2D38               	goto	u216_25
  5674  0536  3001               	movlw	1
  5675  0537  024C               	subwf	___fldiv@new_exp,w
  5676  0538                     u216_25:
  5677  0538  1803               	skipnc
  5678  0539  2D3B               	goto	u216_21
  5679  053A  2D3C               	goto	u216_20
  5680  053B                     u216_21:
  5681  053B  2D49               	goto	i1l679
  5682  053C                     u216_20:
  5683  053C                     i1l2157:
  5684  053C  1283               	bcf	3,5	;RP0=0, select bank0
  5685  053D  1303               	bcf	3,6	;RP1=0, select bank0
  5686  053E  01CC               	clrf	___fldiv@new_exp
  5687  053F  01CD               	clrf	___fldiv@new_exp+1
  5688  0540                     i1l2159:
  5689  0540  3000               	movlw	0
  5690  0541  00C1               	movwf	___fldiv@b+3
  5691  0542  3000               	movlw	0
  5692  0543  00C0               	movwf	___fldiv@b+2
  5693  0544  3000               	movlw	0
  5694  0545  00BF               	movwf	___fldiv@b+1
  5695  0546  3000               	movlw	0
  5696  0547  00BE               	movwf	___fldiv@b
  5697  0548                     i1l2161:
  5698  0548  01CB               	clrf	___fldiv@sign
  5699  0549                     i1l679:
  5700  0549  1283               	bcf	3,5	;RP0=0, select bank0
  5701  054A  1303               	bcf	3,6	;RP1=0, select bank0
  5702  054B  084C               	movf	___fldiv@new_exp,w
  5703  054C  00C2               	movwf	??___fldiv
  5704  054D  0842               	movf	??___fldiv,w
  5705  054E  00D2               	movwf	___fldiv@bexp
  5706  054F                     i1l2163:
  5707  054F  1C52               	btfss	___fldiv@bexp,0
  5708  0550  2D52               	goto	u217_21
  5709  0551  2D53               	goto	u217_20
  5710  0552                     u217_21:
  5711  0552  2D55               	goto	i1l2167
  5712  0553                     u217_20:
  5713  0553                     i1l2165:
  5714  0553  17C0               	bsf	___fldiv@b+2,7
  5715  0554  2D59               	goto	i1l681
  5716  0555                     i1l2167:
  5717  0555  307F               	movlw	127
  5718  0556  00C2               	movwf	??___fldiv
  5719  0557  0842               	movf	??___fldiv,w
  5720  0558  05C0               	andwf	___fldiv@b+2,f
  5721  0559                     i1l681:
  5722  0559  0852               	movf	___fldiv@bexp,w
  5723  055A  00C2               	movwf	??___fldiv
  5724  055B  1003               	clrc
  5725  055C  0C42               	rrf	??___fldiv,w
  5726  055D  00C3               	movwf	??___fldiv+1
  5727  055E  0843               	movf	??___fldiv+1,w
  5728  055F  00C1               	movwf	___fldiv@b+3
  5729  0560  084B               	movf	___fldiv@sign,w
  5730  0561  00C2               	movwf	??___fldiv
  5731  0562  0842               	movf	??___fldiv,w
  5732  0563  04C1               	iorwf	___fldiv@b+3,f
  5733  0564  2BFD               	goto	i1l2075
  5734  0565                     i1l659:
  5735  0565  0008               	return
  5736  0566                     __end_of___fldiv:
  5737  007E                     btemp	set	126	;btemp
  5738  007E                     wtemp0	set	126
  5739                           
  5740                           	psect	config
  5741                           
  5742                           ;Config register CONFIG1 @ 0x2007
  5743                           ;	Oscillator Selection bits
  5744                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5745                           ;	Watchdog Timer Enable bit
  5746                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5747                           ;	Power-up Timer Enable bit
  5748                           ;	PWRTE = OFF, PWRT disabled
  5749                           ;	RE3/MCLR pin function select bit
  5750                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5751                           ;	Code Protection bit
  5752                           ;	CP = OFF, Program memory code protection is disabled
  5753                           ;	Data Code Protection bit
  5754                           ;	CPD = OFF, Data memory code protection is disabled
  5755                           ;	Brown Out Reset Selection bits
  5756                           ;	BOREN = OFF, BOR disabled
  5757                           ;	Internal External Switchover bit
  5758                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5759                           ;	Fail-Safe Clock Monitor Enabled bit
  5760                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5761                           ;	Low Voltage Programming Enable bit
  5762                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5763                           ;	In-Circuit Debugger Mode bit
  5764                           ;	DEBUG = 0x1, unprogrammed default
  5765  2007                     	org	8199
  5766  2007  20D4               	dw	8404
  5767                           
  5768                           ;Config register CONFIG2 @ 0x2008
  5769                           ;	Brown-out Reset Selection bit
  5770                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5771                           ;	Flash Program Memory Self Write Enable bits
  5772                           ;	WRT = OFF, Write protection off
  5773  2008                     	org	8200
  5774  2008  3FFF               	dw	16383

Data Sizes:
    Strings     37
    Constant    10
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      80
    BANK1            80     34      52
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_4(CODE[5]), STR_2(CODE[8]), STR_1(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 6
		 -> display@str(BANK1[3]), str_pot_b(BANK1[5]), str_pot_a(BANK1[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    lcd_write_string@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[17]), 

    display@str	PTR unsigned char [3] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    str_pot_b	PTR unsigned char [5] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    str_pot_a	PTR unsigned char [6] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___xxtofl
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->___fltol
    ___fltol->___fldiv
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_display
    _setup->_lcd_init
    _lcd_init->_lcd_cmd
    _display->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_write_string->_lcd_write_char
    _lcd_write_char->_lcd_port
    _lcd_move_cursor->_lcd_cmd
    _lcd_cmd->_lcd_port

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4556
                                             31 BANK1      3     3      0
                              _ADC_1
                              _ADC_2
                            _display
                           _semaforo
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     110
                           _canal_10
                            _lcd_cmd
                           _lcd_init
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             2     2      0      66
                                              4 BANK1      2     2      0
                            _lcd_cmd
                           _lcd_port
 ---------------------------------------------------------------------------------
 (1) _semaforo                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              4     4      0    2531
                                             27 BANK1      4     4      0
                    _lcd_move_cursor
                     _lcd_write_char
                   _lcd_write_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1915
                                             14 BANK1     13    10      3
                             ___bmul
                            ___lwdiv
                            ___lwmod
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (2) _lcd_write_string                                     3     3      0     167
                                              4 BANK1      3     3      0
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (3) _lcd_write_char                                       3     3      0      44
                                              1 BANK1      3     3      0
                           _lcd_port
 ---------------------------------------------------------------------------------
 (2) _lcd_move_cursor                                      2     1      1     284
                                              4 BANK1      2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              3     3      0      44
                                              1 BANK1      3     3      0
                           _lcd_port
 ---------------------------------------------------------------------------------
 (3) _lcd_port                                             1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_2                                                1     1      0       0
                                              0 BANK1      1     1      0
                           _canal_10
 ---------------------------------------------------------------------------------
 (2) _canal_10                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_1                                                1     1      0       0
                                              0 BANK1      1     1      0
                           _canal_12
 ---------------------------------------------------------------------------------
 (2) _canal_12                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                 11    11      0    4568
                                             63 BANK0     11    11      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             11     7      4     305
                                             52 BANK0     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             26    18      8    2569
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    1273
                                             26 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_1
     _canal_12
   _ADC_2
     _canal_10
   _display
     _lcd_move_cursor
       _lcd_cmd
         _lcd_port
     _lcd_write_char
       _lcd_port
     _lcd_write_string
       _lcd_write_char
         _lcd_port
     _sprintf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _isdigit
   _semaforo
   _setup
     _canal_10
     _lcd_cmd
       _lcd_port
     _lcd_init
       _lcd_cmd
         _lcd_port
       _lcd_port
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _isdigit

 _isr (ROOT)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___fldiv (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      92       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     22      34       7       65.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      92      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 21:24:43 2021

             ___fldiv@aexp 0053               ___fldiv@bexp 0052                          pc 0002  
             ___fldiv@sign 004B             ___bmul@product 00A2                         l71 0BE8  
                       l65 0F5D                         l74 0C2A                         l91 0CC2  
                       l68 0BEF                         l77 0C41                         fsr 0004  
      __Umul8_16@word_mpld 0076                        l150 0E41                        l304 06CA  
                      l153 0BF7                        l156 0C7E                        l165 0C5E  
                      l174 0D12                        l334 07FC                        l183 0DEA  
                      l168 0C9E                        l580 0D94                        l590 0D4E  
                      l761 0C13                        _isr 0F5E                        fsr0 0004  
                      indf 0000               ___flmul@aexp 0032               ___flmul@bexp 0033  
             ___flmul@sign 002D               ___flmul@temp 0038               ___flmul@prod 0034  
             ___fltol@exp1 005E                       l1701 0D1B                       l1631 0C8D  
                     l1711 0D37                       l1703 0D1E                       l2431 05D9  
                     l1625 0BF3                       l1641 0C6D                       l1633 0C90  
                     l1713 0D3D                       l1705 0D25                       l1801 06C6  
                     l1721 0569                       l2361 0790                       l1643 0C70  
                     l1811 0C45                       l1635 0C9B                       l1627 0C82  
                     l1715 0D44                       l1707 0D29                       l1651 0C0A  
                     l1731 0581                       l1723 056E                       l2371 07B0  
                     l2363 0798                       l1645 0C7B                       l1637 0C62  
                     l1813 0C4A                       l1629 0C85                       l1821 0CF0  
                     l1661 07EA                       l1709 0D2D                       l1717 0D4A  
                     l1653 0C10                       l1741 05AF                       l1733 058D  
                     l1725 0574                       l1901 0DD1                       l2373 07C4  
                     l2365 079D                       l2357 0785                       l1639 0C65  
                     l1815 0C52                       l1823 0CFD                       l1663 07EE  
                     l1655 0C12                       l1647 0C03                       l1751 05E4  
                     l1743 05B3                       l1735 0591                       l1727 057B  
                     l1831 0DEB                       l1911 0DDA                       l1903 0DD4  
                     l2375 07D8                       l2367 07A3                       l2359 078A  
                     l1817 0C57                       l1825 0D05                       l1665 07F2  
                     l1681 0D63                       l1673 0D4F                       l1649 0C04  
                     l1761 05FD                       l1753 05EC                       l1737 0593  
                     l1745 05C4                       l1729 0580                       l1833 0DF1  
                     l1913 0DDB                       l1905 0DD5                       l2377 07DD  
                     l2369 07AB                       l1923 0C14                       l1827 0BE9  
                     l1931 0C2B                       l1819 0CED                       l1667 07F4  
                     l1659 07E9                       l1691 0D83                       l1683 0D67  
                     l1675 0D53                       l1771 060E                       l1763 0602  
                     l1755 05F0                       l1739 05A4                       l1835 0DFC  
                     l1915 0DDE                       l1907 0DD6                       l1829 0BE2  
                     l1925 0C20                       l1933 0C33                       l1669 07FB  
                     l1693 0D8A                       l1685 0D6B                       l1677 0D59  
                     l1781 0645                       l1765 0608                       l1757 05F4  
                     l1749 05C5                       l1941 0EBE                       l1837 0E0D  
                     l1917 0DE1                       l1909 0DD9                       l1861 0DAC  
                     l1927 0C22                       l1935 0C35                       l1687 0D7C  
                     l1679 0D5C                       l1695 0D90                       l1791 0673  
                     l1783 0659                       l1775 062A                       l1767 060C  
                     l1759 05F8                       l1951 0EED                       l1943 0EC7  
                     l1839 0E13                       l1919 0DE5                       l1871 0DB2  
                     l1863 0DAD                       l1855 0D95                       l1929 0C27  
                     l1937 0C39                       l1689 0D82                       l1793 06A3  
                     l1785 065F                       l1777 0634                       l1961 0F11  
                     l1953 0EF3                       l1945 0ECD                       l1881 0DB7  
                     l1873 0DB3                       l1865 0DAE                       l1857 0D99  
                     l1939 0C3E                       l1699 0D13                       l1787 0667  
                     l1779 0644                       l1971 0F37                       l1963 0F19  
                     l1955 0EFB                       l1947 0ED6                       l1891 0DCA  
                     l1883 0DBB                       l1875 0DB4                       l1867 0DAF  
                     l1859 0D9A                       l1789 066E                       l1797 06AB  
                     l1973 0F3D                       l1965 0F1F                       l1957 0F03  
                     l1949 0EE5                       l1981 0C9F                       l1893 0DCB  
                     l1885 0DBC                       l1877 0DB5                       l1869 0DB0  
                     l1799 06B4                       l1975 0F45                       l1967 0F27  
                     l1959 0F0B                       l1991 0CB9                       l1983 0CA7  
                     l1895 0DCE                       l1887 0DC1                       l1879 0DB6  
                     l1977 0F4D                       l1969 0F2F                       l1993 0CBF  
                     l1985 0CAA                       l1897 0DCF                       l1889 0DC7  
                     l1979 0F55                       l1987 0CB0                       l1899 0DD0  
                     l1989 0CB6                       ?_isr 0070                       STR_1 0829  
                     STR_2 0821                       STR_3 0810                       STR_4 0830  
                     u1400 0C10                       u1401 0C0F                       u1410 07EE  
                     u1411 07ED                       u1420 07FB                       u1500 0D1B  
                     _IOCB 0096                       u1421 07FA                       u1501 0D1A  
                     u1430 0D59                       u1431 0D58                       u1520 0D2D  
                     u1600 0602                       u1521 0D2C                       u1601 0601  
                     u1450 0D6B                       u1530 0D37                       u1610 0608  
                     u1451 0D6A                       u1531 0D36                       u1515 0D1F  
                     u1611 0607                       u1700 0C57                       u1620 0629  
                     u1701 0C56                       u1445 0D5D                       u1621 0628  
                     u1710 0D12                       u1470 0D7C                       u1550 0D4A  
                     u1390 0C0A                       u1630 0634                       u1711 0D11  
                     u1471 0D7B                       u1551 0D49                       u1535 0D33  
                     u1391 0C09                       u1631 0633                       u1640 0644  
                     u1560 0574                       u1465 0D6C                       u1545 0D3E  
                     u1641 0643                       u1625 0625                       u1561 0573  
                     u1490 0D90                       u1650 0659                       u1570 058D  
                     u1491 0D8F                       u1475 0D78                       u1651 0658  
                     u1571 058C                       u1660 0667                       u1580 05C3  
                     u2700 0798                       u1485 0D84                       u1661 0666  
                     u1645 0640                       u1581 05C2                       u2701 0797  
                     u1670 06B4                       u1590 05F4                       u1750 0CA7  
                     u2710 07A3                       u1671 06B3                       u1655 0655  
                     u1591 05F3                       u1751 0CA6                       u2711 07A2  
                     u1680 06C6                       u1760 0CB0                       u2720 07AB  
                     u1681 06C5                       u1761 0CAF                       u2721 07AA  
                     u1690 0C4A                       u1770 0CB6                       u1691 0C49  
                     u1771 0CB5                       u1780 0CBF                       u1781 0CBE  
                     u2807 0C96                       u2817 0C76                       u2690 0790  
                     u2691 078F                       u2777 0DF7                       u2787 0E08  
                     u2797 0E19                       i1l85 0FF7                       _TMR0 0001  
   __end_of_lcd_write_char 0C9F                       _main 0785                       btemp 007E  
                     start 0010            ___fldiv@new_exp 004C          ___bmul@multiplier 00A3  
         ?_lcd_move_cursor 00A4                      ??_isr 005F              ___fltol@sign1 005D  
                    ?_main 0070                      _ADC_1 0C14                      _ADC_2 0C2B  
          __end_of___fldiv 0566            __end_of___flmul 0389            __end_of___fltol 0EBE  
                    _ANSEL 0188            __end_of___lwdiv 0D95                      i1l501 0EA8  
                    i1l504 0EBD            __end_of___lwmod 0D4F                      i1l703 02F4  
                    i1l716 0CD7                      i1l709 037C                      i1l741 06ED  
                    i1l718 0CE9                      i1l494 0EBD                      i1l743 0784  
                    i1l681 0559                      i1l673 04D7                      i1l657 03E5  
                    i1l754 074E                      i1l659 0565                      i1l755 075A  
                    i1l747 0732                      i1l679 0549                      i1l697 0388  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089            __end_of_lcd_cmd 0C7F            __end_of_display 0F5E  
          __end_of_dpowers 0810            __end_of_isdigit 0C14                      _setup 0D95  
                    pclath 000A            ?_lcd_write_char 0070                      status 0003  
                    wtemp0 007E            __end_of_sprintf 06CB            __initialization 0013  
             __end_of_main 07E6                     ??_main 00BF                     ?_ADC_1 0070  
                   ?_ADC_2 0070                     _ADRESH 001E                     ?_setup 0070  
                   _ANSELH 0189                     i1l2001 0E58                     i1l2011 0E7C  
                   i1l2003 0E6D                     i1l2101 045B                     i1l2005 0E6E  
                   i1l2111 0486                     i1l2103 045C                     i1l2031 0389  
                   i1l2007 0E76                     i1l2121 04A3                     i1l2105 0465  
                   i1l2113 048A                     i1l2041 03A0                     i1l2033 0390  
                   i1l2201 006B                     i1l2025 0E9D                     i1l2017 0E84  
                   i1l2009 0E78                     i1l2131 04BB                     i1l2123 04A7  
                   i1l2115 0490                     i1l2107 0477                     i1l2051 03B8  
                   i1l2043 03A5                     i1l2035 0396                     i1l2211 0087  
                   i1l2203 0070                     i1l2027 0EAD                     i1l2019 0E96  
                   i1l2141 04DC                     i1l2133 04BC                     i1l2125 04A8  
                   i1l2117 0498                     i1l2109 0478                     i1l2061 03CD  
                   i1l2053 03BD                     i1l2045 03AD                     i1l2037 039A  
                   i1l2301 0362                     i1l2221 00B2                     i1l2213 008C  
                   i1l2205 0078                     i1l2029 0EB2                     i1l2143 04E1  
                   i1l2151 0512                     i1l2135 04C0                     i1l2127 04B1  
                   i1l2119 049A                     i1l2071 03ED                     i1l2063 03D2  
                   i1l2055 03C3                     i1l2047 03AE                     i1l2039 039B  
                   i1l2303 0370                     i1l2231 014F                     i1l2223 00CF  
                   i1l2207 007A                     u200_20 045B                     i1l2161 0548  
                   i1l2153 051F                     i1l2145 04EF                     i1l2137 04D4  
                   i1l2129 04B7                     u200_21 045A                     i1l2081 040B  
                   i1l2073 03F9                     i1l2065 03DA                     i1l2057 03C7  
                   i1l2049 03B0                     i1l2305 0374                     i1l2241 01B2  
                   i1l2233 0158                     i1l2225 00EB                     i1l2217 0095  
                   i1l2209 0082                     i1l2321 06F5                     i1l2313 06CC  
                   i1l2163 054F                     i1l2155 052D                     i1l2147 04F3  
                   i1l2091 0436                     i1l2075 03FD                     i1l2067 03DB  
                   i1l2059 03C8                     i1l2307 0375                     i1l2251 0252  
                   i1l2243 01CB                     i1l2235 0168                     i1l2227 0117  
                   i1l2219 00A5                     i1l2331 0717                     i1l2315 06D1  
                   i1l2165 0553                     i1l2157 053C                     i1l2149 050C  
                   i1l2093 043E                     i1l2085 0414                     i1l2069 03DD  
                   i1l2309 0380                     i1l2261 02C0                     i1l2253 0278  
                   i1l2245 01E8                     i1l2237 0185                     i1l2229 0133  
                   i1l2181 003A                     i1l2173 0028                     i1l2341 0748  
                   i1l2333 071B                     i1l2325 06FE                     i1l2317 06D5  
                   i1l2167 0555                     i1l2159 0540                     i1l2095 0440  
                   i1l2087 0426                     i1l2079 0406                     i1l2271 02D8  
                   i1l2263 02C4                     i1l2255 02A0                     i1l2247 0215  
                   i1l2239 0195                     i1l2191 0056                     i1l2183 003F  
                   i1l2175 002F                     i1l2351 077B                     i1l2343 0752  
                   i1l2335 0729                     i1l2327 0703                     i1l2319 06E5  
                   i1l2097 0445                     i1l2089 042E                     i1l2281 02F9  
                   i1l2273 02D9                     i1l2265 02C5                     i1l2257 02A9  
                   i1l2249 0225                     i1l2193 005B                     i1l2185 0044  
                   i1l2177 0035                     i1l2353 077C                     i1l2345 075C  
                   i1l2337 0739                     i1l2329 0710                     i1l2099 0457  
                   i1l2283 02FE                     i1l2291 032F                     i1l2275 02DD  
                   i1l2267 02CE                     i1l2259 02B7                     i1l2195 0061  
                   i1l2187 004C                     i1l2179 0039                     i1l2347 0772  
                   i1l2339 0744                     u201_25 045E                     i1l2293 033C  
                   i1l2285 030C                     i1l2277 02F1                     i1l2269 02D4  
                   i1l2197 0065                     i1l2189 004E                     i1l2349 0777  
                   i1l2381 0F62                     i1l2295 0347                     i1l2287 0310  
                   i1l2199 0066                     i1l2391 0FE6                     i1l2383 0F63  
                   u210_20 04D4                     u202_20 0477                     u210_21 04D3  
                   u202_21 0476                     i1l1841 0CC4                     i1l2297 0356  
                   i1l2289 0329                     i1l2393 0FEC                     i1l2385 0F68  
                   i1l1851 0CE5                     i1l1843 0CC6                     i1l2299 0360  
                   i1l2387 0F6E                     i1l2379 0F5E                     u202_25 0473  
                   i1l1845 0CCD                     i1l2389 0FBB                     i1l1847 0CD1  
                   u211_20 04DB                     u203_20 0490                     u211_21 04DA  
                   u203_21 048F                     i1l1849 0CE0                     u212_20 04E1  
                   u204_20 0498                     u220_20 0044                     u212_21 04E0  
                   u204_21 0497                     u220_21 0043                     i1l1995 0E42  
                   i1l1997 0E4F                     u213_20 04F3                     u221_20 0065  
                   u213_21 04F2                     u221_21 0064                     u205_25 049C  
                   u214_20 0502                     u206_20 04A7                     u222_20 006B  
                   u206_21 04A6                     u222_21 006A                     u214_25 04FD  
                   u230_25 0151                     u215_20 051F                     u223_20 0070  
                   u215_21 051E                     u231_21 0177                     u223_21 006F  
                   u231_22 017E                     u231_23 0185                     u215_25 051B  
                   u207_25 04AA                     u216_20 053C                     u208_20 04BB  
                   u224_20 0087                     u216_21 053B                     u208_21 04BA  
                   u240_21 0292                     u232_21 01A4                     u224_21 0086  
                   u240_22 0299                     u232_22 01AB                     u240_23 02A0  
                   u232_23 01B2                     u216_25 0538                     u217_20 0553  
                   u209_20 04C0                     u225_20 008C                     u217_21 0552  
                   u209_21 04BF                     u225_21 008B                     u241_25 02A2  
                   u233_25 01B4                     u250_20 0310                     u218_20 0039  
                   u250_21 030F                     u234_21 01DA                     u226_21 00DD  
                   u218_21 0038                     u234_22 01E1                     u226_22 00E4  
                   u234_23 01E8                     u226_23 00EB                     u242_25 02B9  
                   u251_20 031F                     u243_20 02C4                     u219_20 003F  
                   u243_21 02C3                     u235_21 0207                     u227_21 00F9  
                   u219_21 003E                     u235_22 020E                     u227_22 0100  
                   u235_23 0215                     u227_23 0107                     u251_25 031A  
                   u172_20 0CD1                     u252_20 033C                     u180_20 0E66  
                   u172_21 0CD0                     u252_21 033B                     u236_21 0234  
                   u228_21 0125                     u236_22 023B                     u228_22 012C  
                   u236_23 0242                     u228_23 0133                     u252_25 0338  
                   u244_25 02C7                     u180_25 0E61                     u260_25 072A  
                   u253_20 0356                     u245_20 02D8                     u237_20 025E  
                   u181_20 0E7C                     u261_20 0738                     u253_21 0355  
                   u245_21 02D7                     u229_21 0141                     u181_21 0E7B  
                   u261_21 0737                     u229_22 0148                     u229_23 014F  
                   u173_25 0CD8                     u253_25 0352                     u237_25 0259  
                   u190_20 03A0                     u174_20 0CE5                     u254_20 0374  
                   u246_20 02DD                     u182_20 0E83                     u190_21 039F  
                   u174_21 0CE4                     u254_21 0373                     u246_21 02DC  
                   u238_21 026A                     u182_21 0E82                     u238_22 0271  
                   u238_23 0278                     u262_25 073D                     u191_20 03A5  
                   u247_20 02F1                     u239_20 0286                     u263_20 0748  
                   u255_20 06D1                     u191_21 03A4                     u247_21 02F0  
                   u263_21 0747                     u255_21 06D0                     u239_25 0281  
                   u183_25 0E85                     u192_20 03C7                     u248_20 02F8  
                   u184_20 0E95                     u264_20 074E                     u256_20 06D5  
                   u192_21 03C6                     u248_21 02F7                     u184_21 0E94  
                   u264_21 074D                     u256_21 06D4                     u193_20 03CD  
                   u249_20 02FE                     u185_20 0E9C                     u265_20 0752  
                   u257_20 06F5                     u273_20 0F62                     u193_21 03CC  
                   u249_21 02FD                     u185_21 0E9B                     u265_21 0751  
                   u257_21 06F4                     u273_21 0F61                     u194_20 03D2  
                   u266_20 0767                     u274_20 0F68                     u194_21 03D1  
                   u274_21 0F67                     u186_25 0E9F                     u266_25 0762  
                   u258_25 0708                     u195_20 03ED                     u187_20 0EAD  
                   u179_20 0E4F                     u267_20 0777                     u259_20 0716  
                   u275_20 0FF3                     u195_21 03EC                     u187_21 0EAC  
                   u179_21 0E4E                     u267_21 0776                     u259_21 0715  
                   u275_21 0FF1                     u196_20 040B                     u188_20 0EB2  
                   u268_20 077B                     u276_20 0FF4                     u196_21 040A  
                   u188_21 0EB1                     u268_21 077A                     u197_20 0445  
                   u189_20 039A                     u197_21 0444                     u189_21 0399  
                   u198_25 0447                     u199_25 0450           __end_of_canal_10 0BF0  
         __end_of_canal_12 0BE9                     _OSCCON 008F           __end_of___xxtofl 0785  
         __end_of_lcd_init 0E42           __end_of_lcd_port 0BF8                     ___bmul 07E6  
                ??___fldiv 0042                  ??___flmul 0028                  ??___fltol 0058  
                ??___lwdiv 00A4                  ??___lwmod 00AC   __end_of_lcd_write_string 0D13  
                ??_lcd_cmd 00A1                  ??_display 00BB           __end_of_semaforo 0CC3  
                ??_isdigit 00A0         __size_of__Umul8_16 0027                     saved_w 007E  
                ??_sprintf 00B1               ___xxtofl@arg 007A          lcd_write_string@a 00A6  
             ___xxtofl@exp 0079          lcd_write_string@i 00A4               ___xxtofl@val 0070  
  __end_of__initialization 0024              __end_of_ADC_1 0C2B              __end_of_ADC_2 0C42  
               ___fltol@f1 0054        ___bmul@multiplicand 00A0             __pcstackCOMMON 0070  
            __end_of_setup 0DEB                    ??_ADC_1 00A0                    ??_ADC_2 00A0  
           _OPTION_REGbits 0081                    ??_setup 00A6                 __pbssBANK0 006A  
               __pbssBANK1 00C2          __end_of__Umul8_16 0CEA                 __pmaintext 0785  
                  ?___bmul 00A0                 __pintentry 0004                  ?_canal_10 0070  
                ?_canal_12 0070                  ?___xxtofl 0070           ??_lcd_write_char 00A1  
                ?_lcd_init 0070                  ?_lcd_port 0070                 __stringtab 0800  
       lcd_write_char@data 00A3                  ?_semaforo 0070            __size_of___bmul 0017  
                  ___fldiv 0389                    ___flmul 0028                    ___fltol 0E42  
                  ___lwdiv 0D4F                    _ban_an1 00C4                    _ban_an2 00C2  
                  ___lwmod 0D13                    __ptext1 0D95                    __ptext2 0DEB  
                  __ptext3 0C9F                    __ptext4 0EBE                    __ptext5 0566  
                  __ptext6 0C00                    __ptext7 0D13                    __ptext8 0D4F  
                  __ptext9 07E6                    _lcd_cmd 0C5F   __size_of_lcd_move_cursor 001D  
                  _display 0EBE                 ??_canal_10 00A0                 ??_canal_12 00A0  
                  _dpowers 0806                    _isdigit 0C00               __size_of_isr 00A2  
               ??___xxtofl 0074                    _prueba1 006F                    _prueba2 006E  
                  _sprintf 0566                    clrloop0 0BF9                 ??_lcd_init 00A4  
                  _str_pos 006C                 ??_lcd_port 00A0       end_of_initialization 0024  
               ??_semaforo 00A0                  _PORTCbits 0007          ?_lcd_write_string 0070  
                _PORTEbits 0009         ??_lcd_write_string 00A4              ___xxtofl@sign 0078  
               lcd_cmd@cmd 00A3                ___fldiv@grs 004E                ___fldiv@rem 0047  
              ___flmul@grs 002E                 display@str 00BC             __end_of___bmul 07FD  
      start_initialization 0013                __end_of_isr 1000          ??_lcd_move_cursor 00A5  
                 ??___bmul 00A1                  __Umul8_16 0CC3                  ___fldiv@a 003A  
                ___fldiv@b 003E                  ___flmul@a 0024                  ___flmul@b 0020  
                ___latbits 0002              __pcstackBANK0 0020          __size_of_canal_10 0007  
            __pcstackBANK1 00A0          __size_of_canal_12 0007                  _adc_data1 00C8  
                _adc_data2 00C7          __size_of___xxtofl 00BA          __size_of_lcd_init 0057  
              sprintf@flag 00B5          __size_of_lcd_port 0008                sprintf@prec 00B9  
         ___lwdiv@dividend 00A2          __size_of_semaforo 0024                   ?___fldiv 003A  
                 ?___flmul 0020                   ?___fltol 0054                 ?__Umul8_16 0070  
                 ?___lwdiv 00A0                   ?___lwmod 00A8                  __pstrings 0800  
                 ?_lcd_cmd 0070             __size_of_ADC_1 0017             __size_of_ADC_2 0017  
                 ?_display 0070                   ?_isdigit 0070         lcd_move_cursor@col 00A4  
       lcd_move_cursor@row 00A5           ___lwdiv@quotient 00A5                   ?_sprintf 00AE  
           __size_of_setup 0056          interrupt_function 0004                  clear_ram0 0BF8  
                 _PIE1bits 008C                   _PIR1bits 000C                  _uart_data 006D  
                _uart_cont 00C6                 _ADCON0bits 001F                __stringbase 0805  
               _ADCON1bits 009F                  lcd_port@a 00A0                  _str_pot_a 00C9  
                _str_pot_b 00CF  __size_of_lcd_write_string 0029    __size_of_lcd_write_char 0020  
              ??__Umul8_16 0072           __size_of___fldiv 01DD           __size_of___flmul 0361  
         __size_of___fltol 007C           __size_of___lwdiv 0046           __size_of___lwmod 003C  
          _lcd_move_cursor 0C42                   _adc_flag 006B         __end_of__stringtab 0806  
              _isdigit$907 00A0                   _canal_10 0BE9                   _canal_12 0BE2  
               _ANSELHbits 0189           __size_of_lcd_cmd 0020           __size_of_display 00A0  
               sprintf@val 00B6                   ___xxtofl 06CB                   _isr$1085 0066  
         __size_of_isdigit 0014            ___lwdiv@divisor 00A0            ___lwdiv@counter 00A7  
                 __ptext10 0CEA                   __ptext11 0C7F                   __ptext20 06CB  
                 __ptext12 0C42                   __ptext21 0E42                   __ptext13 0C5F  
                 __ptext22 0028                   __ptext14 0BF0                   __ptext23 0CC3  
                 __ptext15 0C2B                   __ptext24 0389                   __ptext16 0BE9  
                 __ptext17 0C14                   __ptext18 0BE2                   __ptext19 0F5E  
                 _lcd_init 0DEB                _eusart_flag 006A                   _lcd_port 0BF0  
         __size_of_sprintf 0165              __size_of_main 0061                   _semaforo 0C9F  
               _INTCONbits 000B                   isdigit@c 00A1                   intlevel1 0000  
                sprintf@ap 00B4                  sprintf@sp 00B8           ___lwmod@dividend 00AA  
                stringcode 0800    __end_of_lcd_move_cursor 0C5F     __Umul8_16@multiplicand 0070  
                 sprintf@c 00BA                   sprintf@f 00AE            ___lwmod@divisor 00A8  
          ___lwmod@counter 00AD                   stringdir 0800                   stringtab 0800  
         _lcd_write_string 0CEA       __Umul8_16@multiplier 0078             _lcd_write_char 0C7F  
        __Umul8_16@product 0074  
