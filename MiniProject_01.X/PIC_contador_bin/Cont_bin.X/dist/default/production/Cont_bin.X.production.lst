

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 22 22:46:24 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F887 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  008F                     	;# 
    96  0090                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0096                     	;# 
   105  0097                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009A                     	;# 
   109  009B                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  0105                     	;# 
   115  0107                     	;# 
   116  0108                     	;# 
   117  0109                     	;# 
   118  010C                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  0185                     	;# 
   124  0187                     	;# 
   125  0188                     	;# 
   126  0189                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  008F                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  0105                     	;# 
   193  0107                     	;# 
   194  0108                     	;# 
   195  0109                     	;# 
   196  010C                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0185                     	;# 
   202  0187                     	;# 
   203  0188                     	;# 
   204  0189                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000D                     	;# 
   221  000E                     	;# 
   222  000E                     	;# 
   223  000F                     	;# 
   224  0010                     	;# 
   225  0011                     	;# 
   226  0012                     	;# 
   227  0013                     	;# 
   228  0014                     	;# 
   229  0015                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001D                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  0081                     	;# 
   243  0085                     	;# 
   244  0086                     	;# 
   245  0087                     	;# 
   246  0088                     	;# 
   247  0089                     	;# 
   248  008C                     	;# 
   249  008D                     	;# 
   250  008E                     	;# 
   251  008F                     	;# 
   252  0090                     	;# 
   253  0091                     	;# 
   254  0092                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0094                     	;# 
   259  0095                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  0105                     	;# 
   271  0107                     	;# 
   272  0108                     	;# 
   273  0109                     	;# 
   274  010C                     	;# 
   275  010C                     	;# 
   276  010D                     	;# 
   277  010E                     	;# 
   278  010F                     	;# 
   279  0185                     	;# 
   280  0187                     	;# 
   281  0188                     	;# 
   282  0189                     	;# 
   283  018C                     	;# 
   284  018D                     	;# 
   285                           
   286                           	psect	idataBANK0
   287  065E                     __pidataBANK0:
   288                           
   289                           ;initializer for _todo
   290  065E  3401               	retlw	1
   291                           
   292                           ;initializer for _ciclo
   293  065F  3401               	retlw	1
   294                           
   295                           	psect	strings
   296  0003                     __pstrings:
   297  0003                     stringtab:
   298  0003                     __stringtab:
   299  0003                     stringcode:	
   300                           ;	String table - string pointers are 1 byte each
   301                           
   302  0003                     stringdir:
   303  0003  3000               	movlw	high stringdir
   304  0004  008A               	movwf	10
   305  0005  0804               	movf	4,w
   306  0006  0A84               	incf	4,f
   307  0007  0782               	addwf	2,f
   308  0008                     __stringbase:
   309  0008  3400               	retlw	0
   310  0009                     __end_of__stringtab:
   311  0009                     _display:
   312  0009  343F               	retlw	63
   313  000A  3406               	retlw	6
   314  000B  345B               	retlw	91
   315  000C  344F               	retlw	79
   316  000D  3466               	retlw	102
   317  000E  346D               	retlw	109
   318  000F  347D               	retlw	125
   319  0010  3407               	retlw	7
   320  0011  347F               	retlw	127
   321  0012  3467               	retlw	103
   322  0013  3477               	retlw	119
   323  0014  347C               	retlw	124
   324  0015  3439               	retlw	57
   325  0016  345E               	retlw	94
   326  0017  3479               	retlw	121
   327  0018  3471               	retlw	113
   328  0019                     __end_of_display:
   329  000B                     _INTCONbits	set	11
   330  0006                     _PORTB	set	6
   331  0007                     _PORTCbits	set	7
   332  0008                     _PORTD	set	8
   333  001E                     _ADRESH	set	30
   334  001F                     _ADCON0bits	set	31
   335  0005                     _PORTA	set	5
   336  0006                     _PORTBbits	set	6
   337  0096                     _IOCB	set	150
   338  0086                     _TRISB	set	134
   339  0085                     _TRISA	set	133
   340  0096                     _IOCBbits	set	150
   341  0189                     _ANSELH	set	393
   342                           
   343                           	psect	cinit
   344  07E2                     start_initialization:	
   345                           ; #config settings
   346                           
   347  07E2                     __initialization:
   348                           
   349                           ; Initialize objects allocated to BANK0
   350  07E2  120A  118A  265E  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   351  07E7  00AE               	movwf	__pdataBANK0& (0+127)
   352  07E8  120A  118A  265F  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   353  07ED  00AF               	movwf	(__pdataBANK0+1)& (0+127)
   354                           
   355                           ; Clear objects allocated to BANK0
   356  07EE  01A0               	clrf	__pbssBANK0& (0+127)
   357  07EF  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   358  07F0  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   359  07F1  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   360  07F2  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   361  07F3  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   362  07F4  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   363  07F5  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   364  07F6  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   365  07F7  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   366  07F8  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   367  07F9  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   368  07FA  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   369  07FB  01AD               	clrf	(__pbssBANK0+13)& (0+127)
   370  07FC                     end_of_initialization:	
   371                           ;End of C runtime variable initialization code
   372                           
   373  07FC                     __end_of__initialization:
   374  07FC  0183               	clrf	3
   375  07FD  120A  118A  2E60   	ljmp	_main	;jump to C main() function
   376                           
   377                           	psect	bssBANK0
   378  0020                     __pbssBANK0:
   379  0020                     _volt:
   380  0020                     	ds	4
   381  0024                     _suma:
   382  0024                     	ds	2
   383  0026                     _L:
   384  0026                     	ds	2
   385  0028                     _H:
   386  0028                     	ds	2
   387  002A                     _adc:
   388  002A                     	ds	2
   389  002C                     _cont0:
   390  002C                     	ds	2
   391                           
   392                           	psect	dataBANK0
   393  002E                     __pdataBANK0:
   394  002E                     _todo:
   395  002E                     	ds	1
   396  002F                     _ciclo:
   397  002F                     	ds	1
   398                           
   399                           	psect	cstackCOMMON
   400  0070                     __pcstackCOMMON:
   401  0070                     ?_setup:
   402  0070                     ??_setup:	
   403                           ; 1 bytes @ 0x0
   404                           
   405  0070                     ?_contadorbinario:	
   406                           ; 1 bytes @ 0x0
   407                           
   408  0070                     ?_main:	
   409                           ; 1 bytes @ 0x0
   410                           
   411  0070                     ?___awdiv:	
   412                           ; 1 bytes @ 0x0
   413                           
   414  0070                     ___awdiv@divisor:	
   415                           ; 2 bytes @ 0x0
   416                           
   417                           
   418                           ; 2 bytes @ 0x0
   419  0070                     	ds	2
   420  0072                     ___awdiv@dividend:
   421                           
   422                           ; 2 bytes @ 0x2
   423  0072                     	ds	2
   424  0074                     ??___awdiv:
   425                           
   426                           ; 1 bytes @ 0x4
   427  0074                     	ds	1
   428  0075                     ___awdiv@counter:
   429                           
   430                           ; 1 bytes @ 0x5
   431  0075                     	ds	1
   432  0076                     ___awdiv@sign:
   433                           
   434                           ; 1 bytes @ 0x6
   435  0076                     	ds	1
   436  0077                     ___awdiv@quotient:
   437                           
   438                           ; 2 bytes @ 0x7
   439  0077                     	ds	2
   440  0079                     ??_contadorbinario:
   441                           
   442                           ; 1 bytes @ 0x9
   443  0079                     	ds	3
   444  007C                     _contadorbinario$184:
   445                           
   446                           ; 1 bytes @ 0xC
   447  007C                     	ds	1
   448  007D                     _contadorbinario$185:
   449                           
   450                           ; 1 bytes @ 0xD
   451  007D                     	ds	1
   452  007E                     ??_main:
   453                           
   454                           	psect	maintext
   455  0660                     __pmaintext:	
   456                           ; 1 bytes @ 0xE
   457 ;;
   458 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   459 ;;
   460 ;; *************** function _main *****************
   461 ;; Defined at:
   462 ;;		line 30 in file "contador_bin.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;		None
   465 ;; Auto vars:     Size  Location     Type
   466 ;;		None
   467 ;; Return value:  Size  Location     Type
   468 ;;                  1    wreg      void 
   469 ;; Registers used:
   470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   471 ;; Tracked objects:
   472 ;;		On entry : B00/0
   473 ;;		On exit  : 0/0
   474 ;;		Unchanged: 0/0
   475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   476 ;;      Params:         0       0       0       0       0
   477 ;;      Locals:         0       0       0       0       0
   478 ;;      Temps:          0       0       0       0       0
   479 ;;      Totals:         0       0       0       0       0
   480 ;;Total ram usage:        0 bytes
   481 ;; Hardware stack levels required when called:    2
   482 ;; This function calls:
   483 ;;		_contadorbinario
   484 ;;		_setup
   485 ;; This function is called by:
   486 ;;		Startup code after reset
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           
   491                           ;psect for function _main
   492  0660                     _main:
   493  0660                     l917:	
   494                           ;incstack = 0
   495                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   496                           
   497                           
   498                           ;contador_bin.c: 32:     setup();
   499  0660  120A  118A  266D  120A  118A  	fcall	_setup
   500  0665                     l919:
   501                           
   502                           ;contador_bin.c: 33:     contadorbinario();
   503  0665  120A  118A  26EA  120A  118A  	fcall	_contadorbinario
   504  066A                     l43:
   505  066A  120A  118A  2800   	ljmp	start
   506  066D                     __end_of_main:
   507                           
   508                           	psect	text1
   509  066D                     __ptext1:	
   510 ;; *************** function _setup *****************
   511 ;; Defined at:
   512 ;;		line 10 in file "lib_cont.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;		None
   515 ;; Auto vars:     Size  Location     Type
   516 ;;		None
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      void 
   519 ;; Registers used:
   520 ;;		wreg, status,2
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   526 ;;      Params:         0       0       0       0       0
   527 ;;      Locals:         0       0       0       0       0
   528 ;;      Temps:          0       0       0       0       0
   529 ;;      Totals:         0       0       0       0       0
   530 ;;Total ram usage:        0 bytes
   531 ;; Hardware stack levels used:    1
   532 ;; This function calls:
   533 ;;		Nothing
   534 ;; This function is called by:
   535 ;;		_main
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           
   540                           ;psect for function _setup
   541  066D                     _setup:
   542  066D                     l717:	
   543                           ;incstack = 0
   544                           ; Regs used in _setup: [wreg+status,2]
   545                           
   546                           
   547                           ;lib_cont.c: 14:     TRISA = 0b00000000;
   548  066D  1683               	bsf	3,5	;RP0=1, select bank1
   549  066E  1303               	bcf	3,6	;RP1=0, select bank1
   550  066F  0185               	clrf	5	;volatile
   551  0670                     l719:
   552                           
   553                           ;lib_cont.c: 15:     TRISB = 0b01111111;
   554  0670  307F               	movlw	127
   555  0671  0086               	movwf	6	;volatile
   556  0672                     l721:
   557                           
   558                           ;lib_cont.c: 17:     PORTA = 0b00000000;
   559  0672  1283               	bcf	3,5	;RP0=0, select bank0
   560  0673  1303               	bcf	3,6	;RP1=0, select bank0
   561  0674  0185               	clrf	5	;volatile
   562  0675                     l723:
   563                           
   564                           ;lib_cont.c: 18:     PORTB = 0b00000000;
   565  0675  0186               	clrf	6	;volatile
   566  0676                     l725:
   567                           
   568                           ;lib_cont.c: 20:     ANSELH = 0;
   569  0676  1683               	bsf	3,5	;RP0=1, select bank3
   570  0677  1703               	bsf	3,6	;RP1=1, select bank3
   571  0678  0189               	clrf	9	;volatile
   572  0679                     l727:
   573                           
   574                           ;lib_cont.c: 23:     INTCONbits.GIE = 1;
   575  0679  178B               	bsf	11,7	;volatile
   576  067A                     l729:
   577                           
   578                           ;lib_cont.c: 24:     INTCONbits.RBIF = 0;
   579  067A  100B               	bcf	11,0	;volatile
   580  067B                     l731:
   581                           
   582                           ;lib_cont.c: 25:     INTCONbits.RBIF = 1;
   583  067B  140B               	bsf	11,0	;volatile
   584                           
   585                           ;lib_cont.c: 26:     IOCB = 1;
   586  067C  3001               	movlw	1
   587  067D  1683               	bsf	3,5	;RP0=1, select bank1
   588  067E  1303               	bcf	3,6	;RP1=0, select bank1
   589  067F  0096               	movwf	22	;volatile
   590  0680                     l733:
   591                           
   592                           ;lib_cont.c: 27:     IOCBbits.IOCB0 = 1;
   593  0680  1416               	bsf	22,0	;volatile
   594  0681                     l735:
   595                           
   596                           ;lib_cont.c: 28:     IOCBbits.IOCB3 = 1;
   597  0681  1596               	bsf	22,3	;volatile
   598  0682                     l81:
   599  0682  0008               	return
   600  0683                     __end_of_setup:
   601                           
   602                           	psect	text2
   603  06EA                     __ptext2:	
   604 ;; *************** function _contadorbinario *****************
   605 ;; Defined at:
   606 ;;		line 39 in file "contador_bin.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;		None
   609 ;; Auto vars:     Size  Location     Type
   610 ;;		None
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   620 ;;      Params:         0       0       0       0       0
   621 ;;      Locals:         2       0       0       0       0
   622 ;;      Temps:          3       0       0       0       0
   623 ;;      Totals:         5       0       0       0       0
   624 ;;Total ram usage:        5 bytes
   625 ;; Hardware stack levels used:    1
   626 ;; Hardware stack levels required when called:    1
   627 ;; This function calls:
   628 ;;		___awdiv
   629 ;; This function is called by:
   630 ;;		_main
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           
   635                           ;psect for function _contadorbinario
   636  06EA                     _contadorbinario:
   637  06EA                     l851:	
   638                           ;incstack = 0
   639                           ; Regs used in _contadorbinario: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   640                           
   641                           
   642                           ;contador_bin.c: 40:     _delay((unsigned long)((300)*(8000000/4000.0)));
   643  06EA  3004               	movlw	4
   644  06EB  00FB               	movwf	??_contadorbinario+2
   645  06EC  300C               	movlw	12
   646  06ED  00FA               	movwf	??_contadorbinario+1
   647  06EE  3033               	movlw	51
   648  06EF  00F9               	movwf	??_contadorbinario
   649  06F0                     u397:
   650  06F0  0BF9               	decfsz	??_contadorbinario,f
   651  06F1  2EF0               	goto	u397
   652  06F2  0BFA               	decfsz	??_contadorbinario+1,f
   653  06F3  2EF0               	goto	u397
   654  06F4  0BFB               	decfsz	??_contadorbinario+2,f
   655  06F5  2EF0               	goto	u397
   656  06F6  2EF7               	nop2
   657  06F7                     l853:
   658                           
   659                           ;contador_bin.c: 42:         if (IOCBbits.IOCB0 = 1 && PORTBbits.RB0 == 1) {
   660  06F7  01FC               	clrf	_contadorbinario$184
   661  06F8                     l855:
   662  06F8  1283               	bcf	3,5	;RP0=0, select bank0
   663  06F9  1303               	bcf	3,6	;RP1=0, select bank0
   664  06FA  1C06               	btfss	6,0	;volatile
   665  06FB  2EFD               	goto	u301
   666  06FC  2EFE               	goto	u300
   667  06FD                     u301:
   668  06FD  2F00               	goto	l859
   669  06FE                     u300:
   670  06FE                     l857:
   671  06FE  01FC               	clrf	_contadorbinario$184
   672  06FF  0AFC               	incf	_contadorbinario$184,f
   673  0700                     l859:
   674  0700  1683               	bsf	3,5	;RP0=1, select bank1
   675  0701  1303               	bcf	3,6	;RP1=0, select bank1
   676  0702  0816               	movf	22,w	;volatile
   677  0703  067C               	xorwf	_contadorbinario$184,w
   678  0704  39FE               	andlw	-2
   679  0705  067C               	xorwf	_contadorbinario$184,w
   680  0706  0096               	movwf	22	;volatile
   681  0707  0816               	movf	22,w	;volatile
   682  0708  3901               	andlw	1
   683  0709  3A00               	xorlw	0
   684  070A  1903               	skipnz
   685  070B  2F0D               	goto	u311
   686  070C  2F0E               	goto	u310
   687  070D                     u311:
   688  070D  2F2D               	goto	l869
   689  070E                     u310:
   690  070E                     l861:
   691                           
   692                           ;contador_bin.c: 44:             cont0++;
   693  070E  3001               	movlw	1
   694  070F  1283               	bcf	3,5	;RP0=0, select bank0
   695  0710  1303               	bcf	3,6	;RP1=0, select bank0
   696  0711  07AC               	addwf	_cont0,f
   697  0712  1803               	skipnc
   698  0713  0AAD               	incf	_cont0+1,f
   699  0714  3000               	movlw	0
   700  0715  07AD               	addwf	_cont0+1,f
   701                           
   702                           ;contador_bin.c: 45:             _delay((unsigned long)((500)*(8000000/4000.0)));
   703  0716  3006               	movlw	6
   704  0717  00FB               	movwf	??_contadorbinario+2
   705  0718  3013               	movlw	19
   706  0719  00FA               	movwf	??_contadorbinario+1
   707  071A  30AD               	movlw	173
   708  071B  00F9               	movwf	??_contadorbinario
   709  071C                     u407:
   710  071C  0BF9               	decfsz	??_contadorbinario,f
   711  071D  2F1C               	goto	u407
   712  071E  0BFA               	decfsz	??_contadorbinario+1,f
   713  071F  2F1C               	goto	u407
   714  0720  0BFB               	decfsz	??_contadorbinario+2,f
   715  0721  2F1C               	goto	u407
   716  0722  2F23               	nop2
   717  0723                     l863:
   718                           
   719                           ;contador_bin.c: 46:             IOCBbits.IOCB0 = 0;
   720  0723  1683               	bsf	3,5	;RP0=1, select bank1
   721  0724  1303               	bcf	3,6	;RP1=0, select bank1
   722  0725  1016               	bcf	22,0	;volatile
   723  0726                     l865:
   724                           
   725                           ;contador_bin.c: 49:             } while (PORTBbits.RB0 == 1);
   726  0726  1283               	bcf	3,5	;RP0=0, select bank0
   727  0727  1806               	btfsc	6,0	;volatile
   728  0728  2F2A               	goto	u321
   729  0729  2F2B               	goto	u320
   730  072A                     u321:
   731  072A  2F26               	goto	l865
   732  072B                     u320:
   733  072B                     l867:
   734                           
   735                           ;contador_bin.c: 50:             PORTA = cont0;
   736  072B  082C               	movf	_cont0,w
   737  072C  0085               	movwf	5	;volatile
   738  072D                     l869:
   739                           
   740                           ;contador_bin.c: 52:         if (IOCBbits.IOCB3 = 1 && PORTBbits.RB3 == 1) {
   741  072D  01FD               	clrf	_contadorbinario$185
   742  072E                     l871:
   743  072E  1283               	bcf	3,5	;RP0=0, select bank0
   744  072F  1D86               	btfss	6,3	;volatile
   745  0730  2F32               	goto	u331
   746  0731  2F33               	goto	u330
   747  0732                     u331:
   748  0732  2F35               	goto	l875
   749  0733                     u330:
   750  0733                     l873:
   751  0733  01FD               	clrf	_contadorbinario$185
   752  0734  0AFD               	incf	_contadorbinario$185,f
   753  0735                     l875:
   754  0735  087D               	movf	_contadorbinario$185,w
   755  0736  00F9               	movwf	??_contadorbinario
   756  0737  0DF9               	rlf	??_contadorbinario,f
   757  0738  0DF9               	rlf	??_contadorbinario,f
   758  0739  0DF9               	rlf	??_contadorbinario,f
   759  073A  1683               	bsf	3,5	;RP0=1, select bank1
   760  073B  1303               	bcf	3,6	;RP1=0, select bank1
   761  073C  0816               	movf	22,w	;volatile
   762  073D  0679               	xorwf	??_contadorbinario,w
   763  073E  39F7               	andlw	-9
   764  073F  0679               	xorwf	??_contadorbinario,w
   765  0740  0096               	movwf	22	;volatile
   766  0741  0C16               	rrf	22,w	;volatile
   767  0742  00FA               	movwf	??_contadorbinario+1
   768  0743  0CFA               	rrf	??_contadorbinario+1,f
   769  0744  0C7A               	rrf	??_contadorbinario+1,w
   770  0745  3901               	andlw	1
   771  0746  3A00               	xorlw	0
   772  0747  1903               	skipnz
   773  0748  2F4A               	goto	u341
   774  0749  2F4B               	goto	u340
   775  074A                     u341:
   776  074A  2F6B               	goto	l885
   777  074B                     u340:
   778  074B                     l877:
   779                           
   780                           ;contador_bin.c: 53:             cont0--;
   781  074B  30FF               	movlw	255
   782  074C  1283               	bcf	3,5	;RP0=0, select bank0
   783  074D  1303               	bcf	3,6	;RP1=0, select bank0
   784  074E  07AC               	addwf	_cont0,f
   785  074F  1803               	skipnc
   786  0750  0AAD               	incf	_cont0+1,f
   787  0751  30FF               	movlw	255
   788  0752  07AD               	addwf	_cont0+1,f
   789                           
   790                           ;contador_bin.c: 54:             _delay((unsigned long)((500)*(8000000/4000.0)));
   791  0753  3006               	movlw	6
   792  0754  00FB               	movwf	??_contadorbinario+2
   793  0755  3013               	movlw	19
   794  0756  00FA               	movwf	??_contadorbinario+1
   795  0757  30AD               	movlw	173
   796  0758  00F9               	movwf	??_contadorbinario
   797  0759                     u417:
   798  0759  0BF9               	decfsz	??_contadorbinario,f
   799  075A  2F59               	goto	u417
   800  075B  0BFA               	decfsz	??_contadorbinario+1,f
   801  075C  2F59               	goto	u417
   802  075D  0BFB               	decfsz	??_contadorbinario+2,f
   803  075E  2F59               	goto	u417
   804  075F  2F60               	nop2
   805  0760                     l879:
   806                           
   807                           ;contador_bin.c: 57:             } while (PORTBbits.RB3 == 1);
   808  0760  1283               	bcf	3,5	;RP0=0, select bank0
   809  0761  1303               	bcf	3,6	;RP1=0, select bank0
   810  0762  1986               	btfsc	6,3	;volatile
   811  0763  2F65               	goto	u351
   812  0764  2F66               	goto	u350
   813  0765                     u351:
   814  0765  2F60               	goto	l879
   815  0766                     u350:
   816  0766                     l881:
   817                           
   818                           ;contador_bin.c: 58:             PORTA = cont0;
   819  0766  082C               	movf	_cont0,w
   820  0767  0085               	movwf	5	;volatile
   821  0768                     l883:
   822                           
   823                           ;contador_bin.c: 59:             IOCBbits.IOCB3 = 0;
   824  0768  1683               	bsf	3,5	;RP0=1, select bank1
   825  0769  1303               	bcf	3,6	;RP1=0, select bank1
   826  076A  1196               	bcf	22,3	;volatile
   827  076B                     l885:
   828                           
   829                           ;contador_bin.c: 61:         if (cont0 > 255) {
   830  076B  1283               	bcf	3,5	;RP0=0, select bank0
   831  076C  1303               	bcf	3,6	;RP1=0, select bank0
   832  076D  082D               	movf	_cont0+1,w
   833  076E  3A80               	xorlw	128
   834  076F  00FF               	movwf	btemp+1
   835  0770  3081               	movlw	129
   836  0771  027F               	subwf	btemp+1,w
   837  0772  1D03               	skipz
   838  0773  2F76               	goto	u365
   839  0774  3000               	movlw	0
   840  0775  022C               	subwf	_cont0,w
   841  0776                     u365:
   842  0776  1C03               	skipc
   843  0777  2F79               	goto	u361
   844  0778  2F7A               	goto	u360
   845  0779                     u361:
   846  0779  2F7E               	goto	l889
   847  077A                     u360:
   848  077A                     l887:
   849                           
   850                           ;contador_bin.c: 62:             cont0 = 0;
   851  077A  1283               	bcf	3,5	;RP0=0, select bank0
   852  077B  1303               	bcf	3,6	;RP1=0, select bank0
   853  077C  01AC               	clrf	_cont0
   854  077D  01AD               	clrf	_cont0+1
   855  077E                     l889:
   856                           
   857                           ;contador_bin.c: 65:         if (ADCON0bits.GO_DONE == 0) {
   858  077E  1283               	bcf	3,5	;RP0=0, select bank0
   859  077F  1303               	bcf	3,6	;RP1=0, select bank0
   860  0780  189F               	btfsc	31,1	;volatile
   861  0781  2F83               	goto	u371
   862  0782  2F84               	goto	u370
   863  0783                     u371:
   864  0783  2FCB               	goto	l913
   865  0784                     u370:
   866  0784                     l891:
   867                           
   868                           ;contador_bin.c: 67:             H = ADRESH;
   869  0784  081E               	movf	30,w	;volatile
   870  0785  00F9               	movwf	??_contadorbinario
   871  0786  01FA               	clrf	??_contadorbinario+1
   872  0787  0879               	movf	??_contadorbinario,w
   873  0788  00A8               	movwf	_H
   874  0789  087A               	movf	??_contadorbinario+1,w
   875  078A  00A9               	movwf	_H+1
   876                           
   877                           ;contador_bin.c: 68:             L = ADRESH;
   878  078B  081E               	movf	30,w	;volatile
   879  078C  00F9               	movwf	??_contadorbinario
   880  078D  01FA               	clrf	??_contadorbinario+1
   881  078E  0879               	movf	??_contadorbinario,w
   882  078F  00A6               	movwf	_L
   883  0790  087A               	movf	??_contadorbinario+1,w
   884  0791  00A7               	movwf	_L+1
   885  0792                     l893:
   886                           
   887                           ;contador_bin.c: 70:             H = ((H/16)%16);
   888  0792  3010               	movlw	16
   889  0793  00F0               	movwf	___awdiv@divisor
   890  0794  3000               	movlw	0
   891  0795  00F1               	movwf	___awdiv@divisor+1
   892  0796  0829               	movf	_H+1,w
   893  0797  00F3               	movwf	___awdiv@dividend+1
   894  0798  0828               	movf	_H,w
   895  0799  00F2               	movwf	___awdiv@dividend
   896  079A  120A  118A  2683  120A  118A  	fcall	___awdiv
   897  079F  300F               	movlw	15
   898  07A0  0570               	andwf	?___awdiv,w
   899  07A1  1283               	bcf	3,5	;RP0=0, select bank0
   900  07A2  1303               	bcf	3,6	;RP1=0, select bank0
   901  07A3  00A8               	movwf	_H
   902  07A4  3000               	movlw	0
   903  07A5  0571               	andwf	?___awdiv+1,w
   904  07A6  00A9               	movwf	_H+1
   905  07A7                     l895:
   906                           
   907                           ;contador_bin.c: 71:             L = (L%16);
   908  07A7  300F               	movlw	15
   909  07A8  0526               	andwf	_L,w
   910  07A9  00A6               	movwf	_L
   911  07AA  3000               	movlw	0
   912  07AB  0527               	andwf	_L+1,w
   913  07AC  00A7               	movwf	_L+1
   914  07AD                     l897:
   915                           
   916                           ;contador_bin.c: 72:             suma = ADRESH;
   917  07AD  081E               	movf	30,w	;volatile
   918  07AE  00F9               	movwf	??_contadorbinario
   919  07AF  01FA               	clrf	??_contadorbinario+1
   920  07B0  0879               	movf	??_contadorbinario,w
   921  07B1  00A4               	movwf	_suma
   922  07B2  087A               	movf	??_contadorbinario+1,w
   923  07B3  00A5               	movwf	_suma+1
   924  07B4                     l899:
   925                           
   926                           ;contador_bin.c: 73:             PORTD = display[H];
   927  07B4  0828               	movf	_H,w
   928  07B5  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
   929  07B6  0084               	movwf	4
   930  07B7  120A  118A  2003  120A  118A  	fcall	stringdir
   931  07BC  0088               	movwf	8	;volatile
   932  07BD                     l901:
   933                           
   934                           ;contador_bin.c: 74:             PORTCbits.RC0 = 1;
   935  07BD  1407               	bsf	7,0	;volatile
   936  07BE                     l903:
   937                           
   938                           ;contador_bin.c: 75:             PORTCbits.RC0 = 0;
   939  07BE  1007               	bcf	7,0	;volatile
   940  07BF                     l905:
   941                           
   942                           ;contador_bin.c: 77:             PORTD = display[L];
   943  07BF  0826               	movf	_L,w
   944  07C0  3E01               	addlw	low ((_display-__stringbase)| (0+32768))
   945  07C1  0084               	movwf	4
   946  07C2  120A  118A  2003  120A  118A  	fcall	stringdir
   947  07C7  0088               	movwf	8	;volatile
   948  07C8                     l907:
   949                           
   950                           ;contador_bin.c: 79:             PORTCbits.RC1 = 1;
   951  07C8  1487               	bsf	7,1	;volatile
   952  07C9                     l909:
   953                           
   954                           ;contador_bin.c: 80:             PORTCbits.RC1 = 0;
   955  07C9  1087               	bcf	7,1	;volatile
   956  07CA                     l911:
   957                           
   958                           ;contador_bin.c: 81:             ADCON0bits.GO_DONE =1;
   959  07CA  149F               	bsf	31,1	;volatile
   960  07CB                     l913:
   961                           
   962                           ;contador_bin.c: 88:         if (cont0<suma){
   963  07CB  082D               	movf	_cont0+1,w
   964  07CC  3A80               	xorlw	128
   965  07CD  00F9               	movwf	??_contadorbinario
   966  07CE  0825               	movf	_suma+1,w
   967  07CF  3A80               	xorlw	128
   968  07D0  0279               	subwf	??_contadorbinario,w
   969  07D1  1D03               	skipz
   970  07D2  2FD5               	goto	u385
   971  07D3  0824               	movf	_suma,w
   972  07D4  022C               	subwf	_cont0,w
   973  07D5                     u385:
   974  07D5  1803               	skipnc
   975  07D6  2FD8               	goto	u381
   976  07D7  2FD9               	goto	u380
   977  07D8                     u381:
   978  07D8  2FDD               	goto	l59
   979  07D9                     u380:
   980  07D9                     l915:
   981                           
   982                           ;contador_bin.c: 89:             PORTBbits.RB7 = 1;
   983  07D9  1283               	bcf	3,5	;RP0=0, select bank0
   984  07DA  1303               	bcf	3,6	;RP1=0, select bank0
   985  07DB  1786               	bsf	6,7	;volatile
   986                           
   987                           ;contador_bin.c: 90:         }
   988  07DC  2EF7               	goto	l853
   989  07DD                     l59:	
   990                           ;contador_bin.c: 91:         else{
   991                           
   992                           
   993                           ;contador_bin.c: 92:             PORTBbits.RB7 = 0;
   994  07DD  1283               	bcf	3,5	;RP0=0, select bank0
   995  07DE  1303               	bcf	3,6	;RP1=0, select bank0
   996  07DF  1386               	bcf	6,7	;volatile
   997  07E0  2EF7               	goto	l853
   998  07E1  0008               	return
   999  07E2                     __end_of_contadorbinario:
  1000                           
  1001                           	psect	text3
  1002  0683                     __ptext3:	
  1003 ;; *************** function ___awdiv *****************
  1004 ;; Defined at:
  1005 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;  divisor         2    0[COMMON] int 
  1008 ;;  dividend        2    2[COMMON] int 
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;  quotient        2    7[COMMON] int 
  1011 ;;  sign            1    6[COMMON] unsigned char 
  1012 ;;  counter         1    5[COMMON] unsigned char 
  1013 ;; Return value:  Size  Location     Type
  1014 ;;                  2    0[COMMON] int 
  1015 ;; Registers used:
  1016 ;;		wreg, status,2, status,0
  1017 ;; Tracked objects:
  1018 ;;		On entry : 0/0
  1019 ;;		On exit  : 0/0
  1020 ;;		Unchanged: 0/0
  1021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1022 ;;      Params:         4       0       0       0       0
  1023 ;;      Locals:         4       0       0       0       0
  1024 ;;      Temps:          1       0       0       0       0
  1025 ;;      Totals:         9       0       0       0       0
  1026 ;;Total ram usage:        9 bytes
  1027 ;; Hardware stack levels used:    1
  1028 ;; This function calls:
  1029 ;;		Nothing
  1030 ;; This function is called by:
  1031 ;;		_contadorbinario
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           
  1036                           ;psect for function ___awdiv
  1037  0683                     ___awdiv:
  1038  0683                     l807:	
  1039                           ;incstack = 0
  1040                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1041                           
  1042  0683  01F6               	clrf	___awdiv@sign
  1043  0684                     l809:
  1044  0684  1FF1               	btfss	___awdiv@divisor+1,7
  1045  0685  2E87               	goto	u201
  1046  0686  2E88               	goto	u200
  1047  0687                     u201:
  1048  0687  2E8F               	goto	l815
  1049  0688                     u200:
  1050  0688                     l811:
  1051  0688  09F0               	comf	___awdiv@divisor,f
  1052  0689  09F1               	comf	___awdiv@divisor+1,f
  1053  068A  0AF0               	incf	___awdiv@divisor,f
  1054  068B  1903               	skipnz
  1055  068C  0AF1               	incf	___awdiv@divisor+1,f
  1056  068D                     l813:
  1057  068D  01F6               	clrf	___awdiv@sign
  1058  068E  0AF6               	incf	___awdiv@sign,f
  1059  068F                     l815:
  1060  068F  1FF3               	btfss	___awdiv@dividend+1,7
  1061  0690  2E92               	goto	u211
  1062  0691  2E93               	goto	u210
  1063  0692                     u211:
  1064  0692  2E9C               	goto	l821
  1065  0693                     u210:
  1066  0693                     l817:
  1067  0693  09F2               	comf	___awdiv@dividend,f
  1068  0694  09F3               	comf	___awdiv@dividend+1,f
  1069  0695  0AF2               	incf	___awdiv@dividend,f
  1070  0696  1903               	skipnz
  1071  0697  0AF3               	incf	___awdiv@dividend+1,f
  1072  0698                     l819:
  1073  0698  3001               	movlw	1
  1074  0699  00F4               	movwf	??___awdiv
  1075  069A  0874               	movf	??___awdiv,w
  1076  069B  06F6               	xorwf	___awdiv@sign,f
  1077  069C                     l821:
  1078  069C  01F7               	clrf	___awdiv@quotient
  1079  069D  01F8               	clrf	___awdiv@quotient+1
  1080  069E                     l823:
  1081  069E  0870               	movf	___awdiv@divisor,w
  1082  069F  0471               	iorwf	___awdiv@divisor+1,w
  1083  06A0  1903               	btfsc	3,2
  1084  06A1  2EA3               	goto	u221
  1085  06A2  2EA4               	goto	u220
  1086  06A3                     u221:
  1087  06A3  2EDB               	goto	l843
  1088  06A4                     u220:
  1089  06A4                     l825:
  1090  06A4  01F5               	clrf	___awdiv@counter
  1091  06A5  0AF5               	incf	___awdiv@counter,f
  1092  06A6  2EB2               	goto	l831
  1093  06A7                     l827:
  1094  06A7  3001               	movlw	1
  1095  06A8                     u235:
  1096  06A8  1003               	clrc
  1097  06A9  0DF0               	rlf	___awdiv@divisor,f
  1098  06AA  0DF1               	rlf	___awdiv@divisor+1,f
  1099  06AB  3EFF               	addlw	-1
  1100  06AC  1D03               	skipz
  1101  06AD  2EA8               	goto	u235
  1102  06AE                     l829:
  1103  06AE  3001               	movlw	1
  1104  06AF  00F4               	movwf	??___awdiv
  1105  06B0  0874               	movf	??___awdiv,w
  1106  06B1  07F5               	addwf	___awdiv@counter,f
  1107  06B2                     l831:
  1108  06B2  1FF1               	btfss	___awdiv@divisor+1,7
  1109  06B3  2EB5               	goto	u241
  1110  06B4  2EB6               	goto	u240
  1111  06B5                     u241:
  1112  06B5  2EA7               	goto	l827
  1113  06B6                     u240:
  1114  06B6                     l833:
  1115  06B6  3001               	movlw	1
  1116  06B7                     u255:
  1117  06B7  1003               	clrc
  1118  06B8  0DF7               	rlf	___awdiv@quotient,f
  1119  06B9  0DF8               	rlf	___awdiv@quotient+1,f
  1120  06BA  3EFF               	addlw	-1
  1121  06BB  1D03               	skipz
  1122  06BC  2EB7               	goto	u255
  1123  06BD  0871               	movf	___awdiv@divisor+1,w
  1124  06BE  0273               	subwf	___awdiv@dividend+1,w
  1125  06BF  1D03               	skipz
  1126  06C0  2EC3               	goto	u265
  1127  06C1  0870               	movf	___awdiv@divisor,w
  1128  06C2  0272               	subwf	___awdiv@dividend,w
  1129  06C3                     u265:
  1130  06C3  1C03               	skipc
  1131  06C4  2EC6               	goto	u261
  1132  06C5  2EC7               	goto	u260
  1133  06C6                     u261:
  1134  06C6  2ECE               	goto	l839
  1135  06C7                     u260:
  1136  06C7                     l835:
  1137  06C7  0870               	movf	___awdiv@divisor,w
  1138  06C8  02F2               	subwf	___awdiv@dividend,f
  1139  06C9  0871               	movf	___awdiv@divisor+1,w
  1140  06CA  1C03               	skipc
  1141  06CB  03F3               	decf	___awdiv@dividend+1,f
  1142  06CC  02F3               	subwf	___awdiv@dividend+1,f
  1143  06CD                     l837:
  1144  06CD  1477               	bsf	___awdiv@quotient,0
  1145  06CE                     l839:
  1146  06CE  3001               	movlw	1
  1147  06CF                     u275:
  1148  06CF  1003               	clrc
  1149  06D0  0CF1               	rrf	___awdiv@divisor+1,f
  1150  06D1  0CF0               	rrf	___awdiv@divisor,f
  1151  06D2  3EFF               	addlw	-1
  1152  06D3  1D03               	skipz
  1153  06D4  2ECF               	goto	u275
  1154  06D5                     l841:
  1155  06D5  3001               	movlw	1
  1156  06D6  02F5               	subwf	___awdiv@counter,f
  1157  06D7  1D03               	btfss	3,2
  1158  06D8  2EDA               	goto	u281
  1159  06D9  2EDB               	goto	u280
  1160  06DA                     u281:
  1161  06DA  2EB6               	goto	l833
  1162  06DB                     u280:
  1163  06DB                     l843:
  1164  06DB  0876               	movf	___awdiv@sign,w
  1165  06DC  1903               	btfsc	3,2
  1166  06DD  2EDF               	goto	u291
  1167  06DE  2EE0               	goto	u290
  1168  06DF                     u291:
  1169  06DF  2EE5               	goto	l847
  1170  06E0                     u290:
  1171  06E0                     l845:
  1172  06E0  09F7               	comf	___awdiv@quotient,f
  1173  06E1  09F8               	comf	___awdiv@quotient+1,f
  1174  06E2  0AF7               	incf	___awdiv@quotient,f
  1175  06E3  1903               	skipnz
  1176  06E4  0AF8               	incf	___awdiv@quotient+1,f
  1177  06E5                     l847:
  1178  06E5  0878               	movf	___awdiv@quotient+1,w
  1179  06E6  00F1               	movwf	?___awdiv+1
  1180  06E7  0877               	movf	___awdiv@quotient,w
  1181  06E8  00F0               	movwf	?___awdiv
  1182  06E9                     l320:
  1183  06E9  0008               	return
  1184  06EA                     __end_of___awdiv:
  1185  007E                     btemp	set	126	;btemp
  1186  007E                     wtemp0	set	126
  1187                           
  1188                           	psect	config
  1189                           
  1190                           ;Config register CONFIG1 @ 0x2007
  1191                           ;	Oscillator Selection bits
  1192                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1193                           ;	Watchdog Timer Enable bit
  1194                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1195                           ;	Power-up Timer Enable bit
  1196                           ;	PWRTE = OFF, PWRT disabled
  1197                           ;	RE3/MCLR pin function select bit
  1198                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1199                           ;	Code Protection bit
  1200                           ;	CP = OFF, Program memory code protection is disabled
  1201                           ;	Data Code Protection bit
  1202                           ;	CPD = OFF, Data memory code protection is disabled
  1203                           ;	Brown Out Reset Selection bits
  1204                           ;	BOREN = OFF, BOR disabled
  1205                           ;	Internal External Switchover bit
  1206                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1207                           ;	Fail-Safe Clock Monitor Enabled bit
  1208                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1209                           ;	Low Voltage Programming Enable bit
  1210                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1211                           ;	In-Circuit Debugger Mode bit
  1212                           ;	DEBUG = 0x1, unprogrammed default
  1213  2007                     	org	8199
  1214  2007  20D4               	dw	8404
  1215                           
  1216                           ;Config register CONFIG2 @ 0x2008
  1217                           ;	Brown-out Reset Selection bit
  1218                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1219                           ;	Flash Program Memory Self Write Enable bits
  1220                           ;	WRT = OFF, Write protection off
  1221  2008                     	org	8200
  1222  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    16
    Data        2
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_contadorbinario
    _contadorbinario->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     500
                    _contadorbinario
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _contadorbinario                                      5     5      0     500
                                              9 COMMON     5     5      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _contadorbinario
     ___awdiv
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1E      12        0.0%
ABS                  0      0      1E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 22 22:46:24 2021

                       _H 0028                         _L 0026                         pc 0002  
                      l43 066A                        l81 0682                        l59 07DD  
            ___awdiv@sign 0076                        fsr 0004                       l320 06E9  
                     l721 0672                       l811 0688                       l731 067B  
                     l723 0675                       l821 069C                       l813 068D  
                     l901 07BD                       l733 0680                       l725 0676  
                     l717 066D                       l831 06B2                       l823 069E  
                     l815 068F                       l807 0683                       l911 07CA  
                     l903 07BE                       l735 0681                       l727 0679  
                     l719 0670                       l841 06D5                       l833 06B6  
                     l825 06A4                       l817 0693                       l809 0684  
                     l905 07BF                       l913 07CB                       l729 067A  
                     l835 06C7                       l827 06A7                       l843 06DB  
                     l819 0698                       l915 07D9                       l907 07C8  
                     l851 06EA                       l845 06E0                       l837 06CD  
                     l829 06AE                       l909 07C9                       l861 070E  
                     l853 06F7                       l917 0660                       l847 06E5  
                     l839 06CE                       l871 072E                       l863 0723  
                     l855 06F8                       l919 0665                       l881 0766  
                     l873 0733                       l865 0726                       l857 06FE  
                     l891 0784                       l883 0768                       l875 0735  
                     l867 072B                       l859 0700                       l893 0792  
                     l877 074B                       l885 076B                       l869 072D  
                     l895 07A7                       l887 077A                       l879 0760  
                     l897 07AD                       l889 077E                       l899 07B4  
                     u200 0688                       u201 0687                       u210 0693  
                     u211 0692                       u220 06A4                       u300 06FE  
                     u221 06A3                       u301 06FD                       u310 070E  
                     u311 070D                       u240 06B6                       u320 072B  
                     u241 06B5                       u321 072A                       u330 0733  
                     u235 06A8                       u331 0732                       u260 06C7  
                     u340 074B                       u261 06C6                       u341 074A  
                     u350 0766                       u255 06B7                       u351 0765  
                     u407 071C                       u280 06DB                       u360 077A  
                     u281 06DA                       u265 06C3                       u361 0779  
                     u417 0759                       u290 06E0                       u370 0784  
                     u291 06DF                       u275 06CF                       u371 0783  
                     u380 07D9                       u381 07D8                       u365 0776  
                     u385 07D5                       u397 06F0                       _adc 002A  
                     fsr0 0004                      _IOCB 0096                      _main 0660  
                    _todo 002E                      _suma 0024                      btemp 007E  
                    _volt 0020                      start 0000                     ?_main 0070  
         __end_of___awdiv 06EA           ___awdiv@divisor 0070           ___awdiv@counter 0075  
                   _PORTA 0005                     _PORTB 0006                     _PORTD 0008  
                   _TRISA 0085                     _TRISB 0086           _contadorbinario 06EA  
         __end_of_display 0019                     _ciclo 002F                     _cont0 002C  
                   _setup 066D                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 07E2              __end_of_main 066D  
                  ??_main 007E                    _ADRESH 001E          ___awdiv@dividend 0072  
                  ?_setup 0070                    _ANSELH 0189                 ??___awdiv 0074  
 __end_of_contadorbinario 07E2          ___awdiv@quotient 0077   __end_of__initialization 07FC  
          __pcstackCOMMON 0070              __pidataBANK0 065E             __end_of_setup 0683  
                 ??_setup 0070                __pbssBANK0 0020                __pmaintext 0660  
        ?_contadorbinario 0070                __stringtab 0003                   ___awdiv 0683  
                 __ptext1 066D                   __ptext2 06EA                   __ptext3 0683  
                 _display 0009      end_of_initialization 07FC                 _PORTBbits 0006  
               _PORTCbits 0007       _contadorbinario$184 007C       _contadorbinario$185 007D  
     start_initialization 07E2               __pdataBANK0 002E                 ___latbits 0002  
                ?___awdiv 0070                 __pstrings 0003  __size_of_contadorbinario 00F8  
          __size_of_setup 0016                  _IOCBbits 0096                _ADCON0bits 001F  
             __stringbase 0008          __size_of___awdiv 0067        __end_of__stringtab 0009  
       ??_contadorbinario 0079             __size_of_main 000D                _INTCONbits 000B  
               stringcode 0003                  stringdir 0003                  stringtab 0003  
